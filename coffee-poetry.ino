#include <Wire.h>
#include <avr/pgmspace.h>
#include <LiquidCrystal.h>

// data structures
struct Node {
  unsigned int index;
  unsigned int count;
};

struct OutgoingEdges {
  Node *nodes;
  unsigned int count;
};

// pre-trained data for nodes and edges
// following code is generated
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

const char s_0[] PROGMEM = "END";
const char s_1[] PROGMEM = "START";
const char s_2[] PROGMEM = "i";
const char s_3[] PROGMEM = "dont";
const char s_4[] PROGMEM = "want";
const char s_5[] PROGMEM = "to";
const char s_6[] PROGMEM = "the";
const char s_7[] PROGMEM = "my";
const char s_8[] PROGMEM = "have";
const char s_9[] PROGMEM = "bed";
const char s_10[] PROGMEM = "hair";
const char s_11[] PROGMEM = "in";
const char s_12[] PROGMEM = "best";
const char s_13[] PROGMEM = "way";
const char s_14[] PROGMEM = "daughter";
const char s_15[] PROGMEM = "of";
const char s_16[] PROGMEM = "and";
const char s_17[] PROGMEM = "air";
const char s_18[] PROGMEM = "im";
const char s_19[] PROGMEM = "you";
const char s_20[] PROGMEM = "were";
const char s_21[] PROGMEM = "on";
const char s_22[] PROGMEM = "this";
const char s_23[] PROGMEM = "day";
const char s_24[] PROGMEM = "or";
const char s_25[] PROGMEM = "another";
const char s_26[] PROGMEM = "that";
const char s_27[] PROGMEM = "lets";
const char s_28[] PROGMEM = "be";
const char s_29[] PROGMEM = "call";
const char s_30[] PROGMEM = "each";
const char s_31[] PROGMEM = "other";
const char s_32[] PROGMEM = "everything";
const char s_33[] PROGMEM = "into";
const char s_34[] PROGMEM = "love";
const char s_35[] PROGMEM = "new";
const char s_36[] PROGMEM = "with";
const char s_37[] PROGMEM = "many";
const char s_38[] PROGMEM = "";
const char s_39[] PROGMEM = "die";
const char s_40[] PROGMEM = "a";
const char s_41[] PROGMEM = "summer";
const char s_42[] PROGMEM = "me";
const char s_43[] PROGMEM = "face";
const char s_44[] PROGMEM = "dream";
const char s_45[] PROGMEM = "like";
const char s_46[] PROGMEM = "your";
const char s_47[] PROGMEM = "laugh";
const char s_48[] PROGMEM = "under";
const char s_49[] PROGMEM = "when";
const char s_50[] PROGMEM = "river";
const char s_51[] PROGMEM = "kind";
const char s_52[] PROGMEM = "night";
const char s_53[] PROGMEM = "america";
const char s_54[] PROGMEM = "took";
const char s_55[] PROGMEM = "off";
const char s_56[] PROGMEM = "her";
const char s_57[] PROGMEM = "we";
const char s_58[] PROGMEM = "up";
const char s_59[] PROGMEM = "myself";
const char s_60[] PROGMEM = "city";
const char s_61[] PROGMEM = "came";
const char s_62[] PROGMEM = "all";
const char s_63[] PROGMEM = "out";
const char s_64[] PROGMEM = "see";
const char s_65[] PROGMEM = "old";
const char s_66[] PROGMEM = "us";
const char s_67[] PROGMEM = "back";
const char s_68[] PROGMEM = "place";
const char s_69[] PROGMEM = "as";
const char s_70[] PROGMEM = "its";
const char s_71[] PROGMEM = "but";
const char s_72[] PROGMEM = "not";
const char s_73[] PROGMEM = "days";
const char s_74[] PROGMEM = "later";
const char s_75[] PROGMEM = "blue";
const char s_76[] PROGMEM = "after";
const char s_77[] PROGMEM = "fell";
const char s_78[] PROGMEM = "from";
const char s_79[] PROGMEM = "through";
const char s_80[] PROGMEM = "work";
const char s_81[] PROGMEM = "one";
const char s_82[] PROGMEM = "body";
const char s_83[] PROGMEM = "might";
const char s_84[] PROGMEM = "enough";
const char s_85[] PROGMEM = "get";
const char s_86[] PROGMEM = "then";
const char s_87[] PROGMEM = "had";
const char s_88[] PROGMEM = "small";
const char s_89[] PROGMEM = "too";
const char s_90[] PROGMEM = "true";
const char s_91[] PROGMEM = "could";
const char s_92[] PROGMEM = "live";
const char s_93[] PROGMEM = "life";
const char s_94[] PROGMEM = "by";
const char s_95[] PROGMEM = "while";
const char s_96[] PROGMEM = "let";
const char s_97[] PROGMEM = "head";
const char s_98[] PROGMEM = "felt";
const char s_99[] PROGMEM = "every";
const char s_100[] PROGMEM = "loved";
const char s_101[] PROGMEM = "more";
const char s_102[] PROGMEM = "than";
const char s_103[] PROGMEM = "fear";
const char s_104[] PROGMEM = "if";
const char s_105[] PROGMEM = "was";
const char s_106[] PROGMEM = "going";
const char s_107[] PROGMEM = "against";
const char s_108[] PROGMEM = "would";
const char s_109[] PROGMEM = "stand";
const char s_110[] PROGMEM = "tall";
const char s_111[] PROGMEM = "bright";
const char s_112[] PROGMEM = "land";
const char s_113[] PROGMEM = "home";
const char s_114[] PROGMEM = "looked";
const char s_115[] PROGMEM = "words";
const char s_116[] PROGMEM = "for";
const char s_117[] PROGMEM = "o";
const char s_118[] PROGMEM = "them";
const char s_119[] PROGMEM = "eyes";
const char s_120[] PROGMEM = "so";
const char s_121[] PROGMEM = "him";
const char s_122[] PROGMEM = "he";
const char s_123[] PROGMEM = "left";
const char s_124[] PROGMEM = "mind";
const char s_125[] PROGMEM = "it";
const char s_126[] PROGMEM = "has";
const char s_127[] PROGMEM = "find";
const char s_128[] PROGMEM = "some";
const char s_129[] PROGMEM = "light";
const char s_130[] PROGMEM = "hand";
const char s_131[] PROGMEM = "she";
const char s_132[] PROGMEM = "turned";
const char s_133[] PROGMEM = "away";
const char s_134[] PROGMEM = "over";
const char s_135[] PROGMEM = "full";
const char s_136[] PROGMEM = "how";
const char s_137[] PROGMEM = "they";
const char s_138[] PROGMEM = "been";
const char s_139[] PROGMEM = "lost";
const char s_140[] PROGMEM = "these";
const char s_141[] PROGMEM = "still";
const char s_142[] PROGMEM = "their";
const char s_143[] PROGMEM = "men";
const char s_144[] PROGMEM = "which";
const char s_145[] PROGMEM = "high";
const char s_146[] PROGMEM = "an";
const char s_147[] PROGMEM = "last";
const char s_148[] PROGMEM = "those";
const char s_149[] PROGMEM = "there";
const char s_150[] PROGMEM = "first";
const char s_151[] PROGMEM = "time";
const char s_152[] PROGMEM = "went";
const char s_153[] PROGMEM = "down";
const char s_154[] PROGMEM = "people";
const char s_155[] PROGMEM = "at";
const char s_156[] PROGMEM = "always";
const char s_157[] PROGMEM = "human";
const char s_158[] PROGMEM = "said";
const char s_159[] PROGMEM = "yes";
const char s_160[] PROGMEM = "thought";
const char s_161[] PROGMEM = "his";
const char s_162[] PROGMEM = "without";
const char s_163[] PROGMEM = "do";
const char s_164[] PROGMEM = "play";
const char s_165[] PROGMEM = "things";
const char s_166[] PROGMEM = "are";
const char s_167[] PROGMEM = "man";
const char s_168[] PROGMEM = "upon";
const char s_169[] PROGMEM = "tell";
const char s_170[] PROGMEM = "thing";
const char s_171[] PROGMEM = "can";
const char s_172[] PROGMEM = "know";
const char s_173[] PROGMEM = "is";
const char s_174[] PROGMEM = "sky";
const char s_175[] PROGMEM = "eye";
const char s_176[] PROGMEM = "pain";
const char s_177[] PROGMEM = "sun";
const char s_178[] PROGMEM = "rain";
const char s_179[] PROGMEM = "what";
const char s_180[] PROGMEM = "think";
const char s_181[] PROGMEM = "remove";
const char s_182[] PROGMEM = "within";
const char s_183[] PROGMEM = "go";
const char s_184[] PROGMEM = "above";
const char s_185[] PROGMEM = "slow";
const char s_186[] PROGMEM = "about";
const char s_187[] PROGMEM = "truth";
const char s_188[] PROGMEM = "again";
const char s_189[] PROGMEM = "just";
const char s_190[] PROGMEM = "really";
const char s_191[] PROGMEM = "will";
const char s_192[] PROGMEM = "something";
const char s_193[] PROGMEM = "far";
const char s_194[] PROGMEM = "bent";
const char s_195[] PROGMEM = "legs";
const char s_196[] PROGMEM = "wall";
const char s_197[] PROGMEM = "sleep";
const char s_198[] PROGMEM = "come";
const char s_199[] PROGMEM = "yet";
const char s_200[] PROGMEM = "where";
const char s_201[] PROGMEM = "hold";
const char s_202[] PROGMEM = "caught";
const char s_203[] PROGMEM = "our";
const char s_204[] PROGMEM = "trickle";
const char s_205[] PROGMEM = "blood";
const char s_206[] PROGMEM = "run";
const char s_207[] PROGMEM = "water";
const char s_208[] PROGMEM = "music";
const char s_209[] PROGMEM = "knees";
const char s_210[] PROGMEM = "two";
const char s_211[] PROGMEM = "made";
const char s_212[] PROGMEM = "ever";
const char s_213[] PROGMEM = "little";
const char s_214[] PROGMEM = "no";
const char s_215[] PROGMEM = "perfect";
const char s_216[] PROGMEM = "tree";
const char s_217[] PROGMEM = "trees";
const char s_218[] PROGMEM = "never";
const char s_219[] PROGMEM = "years";
const char s_220[] PROGMEM = "long";
const char s_221[] PROGMEM = "before";
const char s_222[] PROGMEM = "am";
const char s_223[] PROGMEM = "once";
const char s_224[] PROGMEM = "heart";
const char s_225[] PROGMEM = "behind";
const char s_226[] PROGMEM = "because";
const char s_227[] PROGMEM = "dead";
const char s_228[] PROGMEM = "only";
const char s_229[] PROGMEM = "here";
const char s_230[] PROGMEM = "met";
const char s_231[] PROGMEM = "must";
const char s_232[] PROGMEM = "between";
const char s_233[] PROGMEM = "any";
const char s_234[] PROGMEM = "stone";
const char s_235[] PROGMEM = "among";
const char s_236[] PROGMEM = "cross";
const char s_237[] PROGMEM = "end";
const char s_238[] PROGMEM = "nor";
const char s_239[] PROGMEM = "breath";
const char s_240[] PROGMEM = "death";
const char s_241[] PROGMEM = "moving";
const char s_242[] PROGMEM = "three";
const char s_243[] PROGMEM = "glass";
const char s_244[] PROGMEM = "why";
const char s_245[] PROGMEM = "around";
const char s_246[] PROGMEM = "even";
const char s_247[] PROGMEM = "rode";
const char s_248[] PROGMEM = "snow";
const char s_249[] PROGMEM = "half";
const char s_250[] PROGMEM = "dark";
const char s_251[] PROGMEM = "though";
const char s_252[] PROGMEM = "god";
const char s_253[] PROGMEM = "own";
const char s_254[] PROGMEM = "who";
const char s_255[] PROGMEM = "also";
const char s_256[] PROGMEM = "side";
const char s_257[] PROGMEM = "now";
const char s_258[] PROGMEM = "say";
const char s_259[] PROGMEM = "touch";
const char s_260[] PROGMEM = "being";
const char s_261[] PROGMEM = "well";
const char s_262[] PROGMEM = "good";
const char s_263[] PROGMEM = "stop";
const char s_264[] PROGMEM = "ourselves";
const char s_265[] PROGMEM = "someone";
const char s_266[] PROGMEM = "fish";
const char s_267[] PROGMEM = "look";
const char s_268[] PROGMEM = "bird";
const char s_269[] PROGMEM = "done";
const char s_270[] PROGMEM = "walk";
const char s_271[] PROGMEM = "business";
const char s_272[] PROGMEM = "red";
const char s_273[] PROGMEM = "white";
const char s_274[] PROGMEM = "youre";
const char s_275[] PROGMEM = "room";
const char s_276[] PROGMEM = "soft";
const char s_277[] PROGMEM = "very";
const char s_278[] PROGMEM = "charge";
const char s_279[] PROGMEM = "right";
const char s_280[] PROGMEM = "whose";
const char s_281[] PROGMEM = "may";
const char s_282[] PROGMEM = "welcome";
const char s_283[] PROGMEM = "dear";
const char s_284[] PROGMEM = "dreams";
const char s_285[] PROGMEM = "nothing";
const char s_286[] PROGMEM = "cannot";
const char s_287[] PROGMEM = "did";
const char s_288[] PROGMEM = "matt";
const char s_289[] PROGMEM = "listen";
const char s_290[] PROGMEM = "four";
const char s_291[] PROGMEM = "yr";
const char s_292[] PROGMEM = "th";
const char s_293[] PROGMEM = "yu";
const char s_294[] PROGMEM = "escape";
const char s_295[] PROGMEM = "wind";
const char s_296[] PROGMEM = "father";
const char s_297[] PROGMEM = "garbage";
const char s_298[] PROGMEM = "wilt";
const char s_299[] PROGMEM = "thou";
const char s_300[] PROGMEM = "sin";
const char s_301[] PROGMEM = "son";
const char s_302[] PROGMEM = "salmon";
const char *const word_array[] PROGMEM = {s_0,s_1,s_2,s_3,s_4,s_5,s_6,s_7,s_8,s_9,s_10,s_11,s_12,s_13,s_14,s_15,s_16,s_17,s_18,s_19,s_20,s_21,s_22,s_23,s_24,s_25,s_26,s_27,s_28,s_29,s_30,s_31,s_32,s_33,s_34,s_35,s_36,s_37,s_38,s_39,s_40,s_41,s_42,s_43,s_44,s_45,s_46,s_47,s_48,s_49,s_50,s_51,s_52,s_53,s_54,s_55,s_56,s_57,s_58,s_59,s_60,s_61,s_62,s_63,s_64,s_65,s_66,s_67,s_68,s_69,s_70,s_71,s_72,s_73,s_74,s_75,s_76,s_77,s_78,s_79,s_80,s_81,s_82,s_83,s_84,s_85,s_86,s_87,s_88,s_89,s_90,s_91,s_92,s_93,s_94,s_95,s_96,s_97,s_98,s_99,s_100,s_101,s_102,s_103,s_104,s_105,s_106,s_107,s_108,s_109,s_110,s_111,s_112,s_113,s_114,s_115,s_116,s_117,s_118,s_119,s_120,s_121,s_122,s_123,s_124,s_125,s_126,s_127,s_128,s_129,s_130,s_131,s_132,s_133,s_134,s_135,s_136,s_137,s_138,s_139,s_140,s_141,s_142,s_143,s_144,s_145,s_146,s_147,s_148,s_149,s_150,s_151,s_152,s_153,s_154,s_155,s_156,s_157,s_158,s_159,s_160,s_161,s_162,s_163,s_164,s_165,s_166,s_167,s_168,s_169,s_170,s_171,s_172,s_173,s_174,s_175,s_176,s_177,s_178,s_179,s_180,s_181,s_182,s_183,s_184,s_185,s_186,s_187,s_188,s_189,s_190,s_191,s_192,s_193,s_194,s_195,s_196,s_197,s_198,s_199,s_200,s_201,s_202,s_203,s_204,s_205,s_206,s_207,s_208,s_209,s_210,s_211,s_212,s_213,s_214,s_215,s_216,s_217,s_218,s_219,s_220,s_221,s_222,s_223,s_224,s_225,s_226,s_227,s_228,s_229,s_230,s_231,s_232,s_233,s_234,s_235,s_236,s_237,s_238,s_239,s_240,s_241,s_242,s_243,s_244,s_245,s_246,s_247,s_248,s_249,s_250,s_251,s_252,s_253,s_254,s_255,s_256,s_257,s_258,s_259,s_260,s_261,s_262,s_263,s_264,s_265,s_266,s_267,s_268,s_269,s_270,s_271,s_272,s_273,s_274,s_275,s_276,s_277,s_278,s_279,s_280,s_281,s_282,s_283,s_284,s_285,s_286,s_287,s_288,s_289,s_290,s_291,s_292,s_293,s_294,s_295,s_296,s_297,s_298,s_299,s_300,s_301,s_302};
const Node na_END[] PROGMEM = {  };
const OutgoingEdges e_END PROGMEM = { na_END, 0 };
const Node n_START_START PROGMEM = { 1, 50 };
const Node n_START_the PROGMEM = { 6, 2 };
const Node n_START_o PROGMEM = { 117, 1 };
const Node n_START_out PROGMEM = { 63, 1 };
const Node n_START_they PROGMEM = { 137, 1 };
const Node n_START_ PROGMEM = { 38, 2 };
const Node n_START_i PROGMEM = { 2, 11 };
const Node n_START_let PROGMEM = { 96, 2 };
const Node n_START_when PROGMEM = { 49, 1 };
const Node n_START_lets PROGMEM = { 27, 1 };
const Node n_START_its PROGMEM = { 70, 1 };
const Node n_START_come PROGMEM = { 198, 1 };
const Node n_START_you PROGMEM = { 19, 1 };
const Node n_START_in PROGMEM = { 11, 1 };
const Node n_START_someone PROGMEM = { 265, 1 };
const Node n_START_dont PROGMEM = { 3, 1 };
const Node n_START_my PROGMEM = { 7, 1 };
const Node n_START_wilt PROGMEM = { 298, 1 };
const Node n_START_here PROGMEM = { 229, 1 };
const Node n_START_for PROGMEM = { 116, 2 };
const Node n_START_a PROGMEM = { 40, 1 };
const Node n_START_well PROGMEM = { 261, 1 };
const Node n_START_he PROGMEM = { 122, 2 };
const Node n_START_she PROGMEM = { 131, 1 };
const Node n_START_we PROGMEM = { 57, 2 };
const Node na_START[] PROGMEM = { & n_START_START,& n_START_the,& n_START_o,& n_START_out,& n_START_they,& n_START_,& n_START_i,& n_START_let,& n_START_when,& n_START_lets,& n_START_its,& n_START_come,& n_START_you,& n_START_in,& n_START_someone,& n_START_dont,& n_START_my,& n_START_wilt,& n_START_here,& n_START_for,& n_START_a,& n_START_well,& n_START_he,& n_START_she,& n_START_we };
const OutgoingEdges e_START PROGMEM = { na_START, 25 };
const Node n_i_dont PROGMEM = { 3, 3 };
const Node n_i_have PROGMEM = { 8, 20 };
const Node n_i_dream PROGMEM = { 44, 3 };
const Node n_i_came PROGMEM = { 61, 2 };
const Node n_i_had PROGMEM = { 87, 1 };
const Node n_i_could PROGMEM = { 91, 4 };
const Node n_i_let PROGMEM = { 96, 4 };
const Node n_i_loved PROGMEM = { 100, 1 };
const Node n_i_would PROGMEM = { 108, 4 };
const Node n_i_looked PROGMEM = { 114, 2 };
const Node n_i_do PROGMEM = { 163, 6 };
const Node n_i_know PROGMEM = { 172, 8 };
const Node n_i_can PROGMEM = { 171, 7 };
const Node n_i_play PROGMEM = { 164, 3 };
const Node n_i_come PROGMEM = { 198, 1 };
const Node n_i_was PROGMEM = { 105, 9 };
const Node n_i_am PROGMEM = { 222, 11 };
const Node n_i_at PROGMEM = { 155, 1 };
const Node n_i_turned PROGMEM = { 132, 1 };
const Node n_i_thought PROGMEM = { 160, 1 };
const Node n_i_must PROGMEM = { 231, 1 };
const Node n_i_will PROGMEM = { 191, 2 };
const Node n_i_among PROGMEM = { 235, 1 };
const Node n_i_might PROGMEM = { 83, 1 };
const Node n_i_laugh PROGMEM = { 47, 2 };
const Node n_i_sleep PROGMEM = { 197, 2 };
const Node n_i_stop PROGMEM = { 263, 2 };
const Node n_i_walk PROGMEM = { 270, 1 };
const Node n_i_say PROGMEM = { 258, 1 };
const Node n_i_half PROGMEM = { 249, 1 };
const Node n_i_never PROGMEM = { 218, 1 };
const Node n_i_tell PROGMEM = { 169, 1 };
const Node n_i_caught PROGMEM = { 202, 1 };
const Node n_i_think PROGMEM = { 180, 2 };
const Node n_i_want PROGMEM = { 4, 4 };
const Node n_i_now PROGMEM = { 257, 1 };
const Node n_i_cannot PROGMEM = { 286, 2 };
const Node n_i_run PROGMEM = { 206, 1 };
const Node n_i_did PROGMEM = { 287, 1 };
const Node n_i_fear PROGMEM = { 103, 1 };
const Node n_i_listen PROGMEM = { 289, 1 };
const Node n_i_too PROGMEM = { 89, 2 };
const Node n_i_like PROGMEM = { 45, 1 };
const Node n_i_once PROGMEM = { 223, 2 };
const Node n_i_die PROGMEM = { 39, 2 };
const Node n_i_live PROGMEM = { 92, 1 };
const Node n_i_face PROGMEM = { 43, 1 };
const Node na_i[] PROGMEM = { & n_i_dont,& n_i_have,& n_i_dream,& n_i_came,& n_i_had,& n_i_could,& n_i_let,& n_i_loved,& n_i_would,& n_i_looked,& n_i_do,& n_i_know,& n_i_can,& n_i_play,& n_i_come,& n_i_was,& n_i_am,& n_i_at,& n_i_turned,& n_i_thought,& n_i_must,& n_i_will,& n_i_among,& n_i_might,& n_i_laugh,& n_i_sleep,& n_i_stop,& n_i_walk,& n_i_say,& n_i_half,& n_i_never,& n_i_tell,& n_i_caught,& n_i_think,& n_i_want,& n_i_now,& n_i_cannot,& n_i_run,& n_i_did,& n_i_fear,& n_i_listen,& n_i_too,& n_i_like,& n_i_once,& n_i_die,& n_i_live,& n_i_face };
const OutgoingEdges e_i PROGMEM = { na_i, 47 };
const Node n_dont_want PROGMEM = { 4, 1 };
const Node n_dont_know PROGMEM = { 172, 1 };
const Node n_dont_stop PROGMEM = { 263, 1 };
const Node n_dont_think PROGMEM = { 180, 1 };
const Node na_dont[] PROGMEM = { & n_dont_want,& n_dont_know,& n_dont_stop,& n_dont_think };
const OutgoingEdges e_dont PROGMEM = { na_dont, 4 };
const Node n_want_to PROGMEM = { 5, 4 };
const Node n_want_the PROGMEM = { 6, 1 };
const Node n_want_me PROGMEM = { 42, 1 };
const Node n_want_not PROGMEM = { 72, 1 };
const Node na_want[] PROGMEM = { & n_want_to,& n_want_the,& n_want_me,& n_want_not };
const OutgoingEdges e_want PROGMEM = { na_want, 4 };
const Node n_to_be PROGMEM = { 28, 14 };
const Node n_to_a PROGMEM = { 40, 5 };
const Node n_to_see PROGMEM = { 64, 3 };
const Node n_to_her PROGMEM = { 56, 4 };
const Node n_to_work PROGMEM = { 80, 1 };
const Node n_to_get PROGMEM = { 85, 4 };
const Node n_to_let PROGMEM = { 96, 2 };
const Node n_to_the PROGMEM = { 6, 25 };
const Node n_to_love PROGMEM = { 34, 2 };
const Node n_to_you PROGMEM = { 19, 2 };
const Node n_to_tell PROGMEM = { 169, 2 };
const Node n_to_do PROGMEM = { 163, 4 };
const Node n_to_me PROGMEM = { 42, 2 };
const Node n_to_this PROGMEM = { 22, 2 };
const Node n_to_mind PROGMEM = { 124, 1 };
const Node n_to_come PROGMEM = { 198, 1 };
const Node n_to_and PROGMEM = { 16, 1 };
const Node n_to_snow PROGMEM = { 248, 1 };
const Node n_to_die PROGMEM = { 39, 1 };
const Node n_to_no PROGMEM = { 214, 2 };
const Node n_to_really PROGMEM = { 190, 1 };
const Node n_to_those PROGMEM = { 148, 2 };
const Node n_to_light PROGMEM = { 129, 1 };
const Node n_to_there PROGMEM = { 149, 1 };
const Node n_to_walk PROGMEM = { 270, 2 };
const Node n_to_say PROGMEM = { 258, 5 };
const Node n_to_right PROGMEM = { 279, 2 };
const Node n_to_left PROGMEM = { 123, 2 };
const Node n_to_remove PROGMEM = { 181, 1 };
const Node n_to_every PROGMEM = { 99, 1 };
const Node n_to_my PROGMEM = { 7, 1 };
const Node n_to_its PROGMEM = { 70, 1 };
const Node n_to_best PROGMEM = { 12, 1 };
const Node n_to_th PROGMEM = { 292, 1 };
const Node n_to_have PROGMEM = { 8, 2 };
const Node n_to_sin PROGMEM = { 300, 1 };
const Node n_to_where PROGMEM = { 200, 2 };
const Node n_to_think PROGMEM = { 180, 1 };
const Node n_to_that PROGMEM = { 26, 1 };
const Node n_to_our PROGMEM = { 203, 1 };
const Node na_to[] PROGMEM = { & n_to_be,& n_to_a,& n_to_see,& n_to_her,& n_to_work,& n_to_get,& n_to_let,& n_to_the,& n_to_love,& n_to_you,& n_to_tell,& n_to_do,& n_to_me,& n_to_this,& n_to_mind,& n_to_come,& n_to_and,& n_to_snow,& n_to_die,& n_to_no,& n_to_really,& n_to_those,& n_to_light,& n_to_there,& n_to_walk,& n_to_say,& n_to_right,& n_to_left,& n_to_remove,& n_to_every,& n_to_my,& n_to_its,& n_to_best,& n_to_th,& n_to_have,& n_to_sin,& n_to_where,& n_to_think,& n_to_that,& n_to_our };
const OutgoingEdges e_to PROGMEM = { na_to, 40 };
const Node n_the_best PROGMEM = { 12, 2 };
const Node n_the_face PROGMEM = { 43, 2 };
const Node n_the_night PROGMEM = { 52, 6 };
const Node n_the_way PROGMEM = { 13, 3 };
const Node n_the_fear PROGMEM = { 103, 1 };
const Node n_the_land PROGMEM = { 112, 1 };
const Node n_the_words PROGMEM = { 115, 2 };
const Node n_the_body PROGMEM = { 82, 3 };
const Node n_the_mind PROGMEM = { 124, 1 };
const Node n_the_hand PROGMEM = { 130, 2 };
const Node n_the_high PROGMEM = { 145, 1 };
const Node n_the_first PROGMEM = { 150, 3 };
const Node n_the_light PROGMEM = { 129, 7 };
const Node n_the_man PROGMEM = { 167, 4 };
const Node n_the_blue PROGMEM = { 75, 5 };
const Node n_the_sun PROGMEM = { 177, 8 };
const Node n_the_rain PROGMEM = { 178, 3 };
const Node n_the_truth PROGMEM = { 187, 4 };
const Node n_the_things PROGMEM = { 165, 1 };
const Node n_the_hold PROGMEM = { 201, 2 };
const Node n_the_more PROGMEM = { 101, 2 };
const Node n_the_heart PROGMEM = { 224, 2 };
const Node n_the_place PROGMEM = { 68, 2 };
const Node n_the_pain PROGMEM = { 176, 2 };
const Node n_the_years PROGMEM = { 219, 3 };
const Node n_the_only PROGMEM = { 228, 1 };
const Node n_the_eye PROGMEM = { 175, 1 };
const Node n_the_long PROGMEM = { 220, 1 };
const Node n_the_river PROGMEM = { 50, 1 };
const Node n_the_side PROGMEM = { 256, 2 };
const Node n_the_men PROGMEM = { 143, 1 };
const Node n_the_tall PROGMEM = { 110, 1 };
const Node n_the_moving PROGMEM = { 241, 1 };
const Node n_the_air PROGMEM = { 17, 2 };
const Node n_the_day PROGMEM = { 23, 4 };
const Node n_the_new PROGMEM = { 35, 1 };
const Node n_the_back PROGMEM = { 67, 1 };
const Node n_the_water PROGMEM = { 207, 2 };
const Node n_the_blood PROGMEM = { 205, 2 };
const Node n_the_walk PROGMEM = { 270, 1 };
const Node n_the_far PROGMEM = { 193, 2 };
const Node n_the_charge PROGMEM = { 278, 1 };
const Node n_the_bird PROGMEM = { 268, 1 };
const Node n_the_summer PROGMEM = { 41, 1 };
const Node n_the_dark PROGMEM = { 250, 1 };
const Node n_the_other PROGMEM = { 31, 1 };
const Node n_the_old PROGMEM = { 65, 1 };
const Node n_the_slow PROGMEM = { 185, 1 };
const Node n_the_city PROGMEM = { 60, 1 };
const Node n_the_people PROGMEM = { 154, 1 };
const Node n_the_room PROGMEM = { 275, 1 };
const Node n_the_white PROGMEM = { 273, 2 };
const Node n_the_trees PROGMEM = { 217, 1 };
const Node n_the_head PROGMEM = { 97, 1 };
const Node n_the_garbage PROGMEM = { 297, 1 };
const Node n_the_end PROGMEM = { 237, 1 };
const Node n_the_time PROGMEM = { 151, 1 };
const Node n_the_salmon PROGMEM = { 302, 1 };
const Node n_the_wind PROGMEM = { 295, 1 };
const Node n_the_right PROGMEM = { 279, 2 };
const Node n_the_glass PROGMEM = { 243, 2 };
const Node n_the_cross PROGMEM = { 236, 2 };
const Node n_the_one PROGMEM = { 81, 1 };
const Node n_the_legs PROGMEM = { 195, 1 };
const Node n_the_music PROGMEM = { 208, 1 };
const Node na_the[] PROGMEM = { & n_the_best,& n_the_face,& n_the_night,& n_the_way,& n_the_fear,& n_the_land,& n_the_words,& n_the_body,& n_the_mind,& n_the_hand,& n_the_high,& n_the_first,& n_the_light,& n_the_man,& n_the_blue,& n_the_sun,& n_the_rain,& n_the_truth,& n_the_things,& n_the_hold,& n_the_more,& n_the_heart,& n_the_place,& n_the_pain,& n_the_years,& n_the_only,& n_the_eye,& n_the_long,& n_the_river,& n_the_side,& n_the_men,& n_the_tall,& n_the_moving,& n_the_air,& n_the_day,& n_the_new,& n_the_back,& n_the_water,& n_the_blood,& n_the_walk,& n_the_far,& n_the_charge,& n_the_bird,& n_the_summer,& n_the_dark,& n_the_other,& n_the_old,& n_the_slow,& n_the_city,& n_the_people,& n_the_room,& n_the_white,& n_the_trees,& n_the_head,& n_the_garbage,& n_the_end,& n_the_time,& n_the_salmon,& n_the_wind,& n_the_right,& n_the_glass,& n_the_cross,& n_the_one,& n_the_legs,& n_the_music };
const OutgoingEdges e_the PROGMEM = { na_the, 65 };
const Node n_my_love PROGMEM = { 34, 1 };
const Node n_my_body PROGMEM = { 82, 10 };
const Node n_my_head PROGMEM = { 97, 2 };
const Node n_my_hair PROGMEM = { 10, 1 };
const Node n_my_best PROGMEM = { 12, 1 };
const Node n_my_eye PROGMEM = { 175, 1 };
const Node n_my_pain PROGMEM = { 176, 1 };
const Node n_my_light PROGMEM = { 129, 1 };
const Node n_my_days PROGMEM = { 73, 1 };
const Node n_my_true PROGMEM = { 90, 1 };
const Node n_my_mind PROGMEM = { 124, 1 };
const Node n_my_breath PROGMEM = { 239, 1 };
const Node n_my_work PROGMEM = { 80, 1 };
const Node n_my_what PROGMEM = { 179, 1 };
const Node n_my_eyes PROGMEM = { 119, 1 };
const Node n_my_daughter PROGMEM = { 14, 3 };
const Node n_my_heart PROGMEM = { 224, 3 };
const Node n_my_father PROGMEM = { 296, 1 };
const Node n_my_sin PROGMEM = { 300, 2 };
const Node n_my_last PROGMEM = { 147, 1 };
const Node n_my_death PROGMEM = { 240, 1 };
const Node n_my_salmon PROGMEM = { 302, 4 };
const Node n_my_dear PROGMEM = { 283, 1 };
const Node n_my_hand PROGMEM = { 130, 2 };
const Node n_my_four PROGMEM = { 290, 2 };
const Node n_my_knees PROGMEM = { 209, 1 };
const Node n_my_room PROGMEM = { 275, 1 };
const Node n_my_side PROGMEM = { 256, 1 };
const Node n_my_face PROGMEM = { 43, 1 };
const Node na_my[] PROGMEM = { & n_my_love,& n_my_body,& n_my_head,& n_my_hair,& n_my_best,& n_my_eye,& n_my_pain,& n_my_light,& n_my_days,& n_my_true,& n_my_mind,& n_my_breath,& n_my_work,& n_my_what,& n_my_eyes,& n_my_daughter,& n_my_heart,& n_my_father,& n_my_sin,& n_my_last,& n_my_death,& n_my_salmon,& n_my_dear,& n_my_hand,& n_my_four,& n_my_knees,& n_my_room,& n_my_side,& n_my_face };
const OutgoingEdges e_my PROGMEM = { na_my, 29 };
const Node n_have_bed PROGMEM = { 9, 1 };
const Node n_have_had PROGMEM = { 87, 2 };
const Node n_have_left PROGMEM = { 123, 1 };
const Node n_have_been PROGMEM = { 138, 3 };
const Node n_have_lost PROGMEM = { 139, 1 };
const Node n_have_a PROGMEM = { 40, 4 };
const Node n_have_the PROGMEM = { 6, 1 };
const Node n_have_not PROGMEM = { 72, 8 };
const Node n_have_at PROGMEM = { 155, 1 };
const Node n_have_to PROGMEM = { 5, 4 };
const Node n_have_me PROGMEM = { 42, 1 };
const Node n_have_you PROGMEM = { 19, 2 };
const Node n_have_your PROGMEM = { 46, 1 };
const Node n_have_more PROGMEM = { 101, 2 };
const Node n_have_nothing PROGMEM = { 285, 1 };
const Node na_have[] PROGMEM = { & n_have_bed,& n_have_had,& n_have_left,& n_have_been,& n_have_lost,& n_have_a,& n_have_the,& n_have_not,& n_have_at,& n_have_to,& n_have_me,& n_have_you,& n_have_your,& n_have_more,& n_have_nothing };
const OutgoingEdges e_have PROGMEM = { na_have, 15 };
const Node n_bed_hair PROGMEM = { 10, 1 };
const Node n_bed_on PROGMEM = { 21, 1 };
const Node n_bed_as PROGMEM = { 69, 2 };
const Node n_bed_and PROGMEM = { 16, 1 };
const Node na_bed[] PROGMEM = { & n_bed_hair,& n_bed_on,& n_bed_as,& n_bed_and };
const OutgoingEdges e_bed PROGMEM = { na_bed, 4 };
const Node n_hair_in PROGMEM = { 11, 1 };
const Node n_hair_ PROGMEM = { 38, 1 };
const Node n_hair_so PROGMEM = { 120, 1 };
const Node n_hair_over PROGMEM = { 134, 1 };
const Node na_hair[] PROGMEM = { & n_hair_in,& n_hair_,& n_hair_so,& n_hair_over };
const OutgoingEdges e_hair PROGMEM = { na_hair, 4 };
const Node n_in_the PROGMEM = { 6, 48 };
const Node n_in_a PROGMEM = { 40, 21 };
const Node n_in_that PROGMEM = { 26, 4 };
const Node n_in_your PROGMEM = { 46, 4 };
const Node n_in_their PROGMEM = { 142, 3 };
const Node n_in_those PROGMEM = { 148, 4 };
const Node n_in_every PROGMEM = { 99, 2 };
const Node n_in_his PROGMEM = { 161, 1 };
const Node n_in_her PROGMEM = { 56, 6 };
const Node n_in_another PROGMEM = { 25, 1 };
const Node n_in_my PROGMEM = { 7, 4 };
const Node n_in_which PROGMEM = { 144, 3 };
const Node n_in_what PROGMEM = { 179, 1 };
const Node n_in_this PROGMEM = { 22, 4 };
const Node n_in_lets PROGMEM = { 27, 1 };
const Node n_in_an PROGMEM = { 146, 1 };
const Node n_in_we PROGMEM = { 57, 1 };
const Node n_in_its PROGMEM = { 70, 3 };
const Node n_in_our PROGMEM = { 203, 2 };
const Node n_in_air PROGMEM = { 17, 1 };
const Node n_in_tell PROGMEM = { 169, 1 };
const Node n_in_thought PROGMEM = { 160, 1 };
const Node n_in_it PROGMEM = { 125, 1 };
const Node n_in_room PROGMEM = { 275, 1 };
const Node n_in_if PROGMEM = { 104, 1 };
const Node n_in_time PROGMEM = { 151, 2 };
const Node n_in_place PROGMEM = { 68, 2 };
const Node na_in[] PROGMEM = { & n_in_the,& n_in_a,& n_in_that,& n_in_your,& n_in_their,& n_in_those,& n_in_every,& n_in_his,& n_in_her,& n_in_another,& n_in_my,& n_in_which,& n_in_what,& n_in_this,& n_in_lets,& n_in_an,& n_in_we,& n_in_its,& n_in_our,& n_in_air,& n_in_tell,& n_in_thought,& n_in_it,& n_in_room,& n_in_if,& n_in_time,& n_in_place };
const OutgoingEdges e_in PROGMEM = { na_in, 27 };
const Node n_best_way PROGMEM = { 13, 1 };
const Node n_best_to PROGMEM = { 5, 1 };
const Node n_best_i PROGMEM = { 2, 1 };
const Node n_best_his PROGMEM = { 161, 1 };
const Node n_best_of PROGMEM = { 15, 1 };
const Node na_best[] PROGMEM = { & n_best_way,& n_best_to,& n_best_i,& n_best_his,& n_best_of };
const OutgoingEdges e_best PROGMEM = { na_best, 5 };
const Node n_way_daughter PROGMEM = { 14, 1 };
const Node n_way_that PROGMEM = { 26, 1 };
const Node n_way_out PROGMEM = { 63, 1 };
const Node n_way_the PROGMEM = { 6, 1 };
const Node n_way_we PROGMEM = { 57, 1 };
const Node n_way_there PROGMEM = { 149, 2 };
const Node n_way_where PROGMEM = { 200, 2 };
const Node n_way_to PROGMEM = { 5, 1 };
const Node na_way[] PROGMEM = { & n_way_daughter,& n_way_that,& n_way_out,& n_way_the,& n_way_we,& n_way_there,& n_way_where,& n_way_to };
const OutgoingEdges e_way PROGMEM = { na_way, 8 };
const Node n_daughter_of PROGMEM = { 15, 1 };
const Node n_daughter_face PROGMEM = { 43, 1 };
const Node n_daughter_the PROGMEM = { 6, 1 };
const Node n_daughter_is PROGMEM = { 173, 1 };
const Node na_daughter[] PROGMEM = { & n_daughter_of,& n_daughter_face,& n_daughter_the,& n_daughter_is };
const OutgoingEdges e_daughter PROGMEM = { na_daughter, 4 };
const Node n_of_my PROGMEM = { 7, 5 };
const Node n_of_the PROGMEM = { 6, 31 };
const Node n_of_me PROGMEM = { 42, 2 };
const Node n_of_a PROGMEM = { 40, 19 };
const Node n_of_their PROGMEM = { 142, 4 };
const Node n_of_dream PROGMEM = { 44, 1 };
const Node n_of_what PROGMEM = { 179, 2 };
const Node n_of_blood PROGMEM = { 205, 2 };
const Node n_of_water PROGMEM = { 207, 3 };
const Node n_of_trees PROGMEM = { 217, 2 };
const Node n_of_breath PROGMEM = { 239, 2 };
const Node n_of_three PROGMEM = { 242, 1 };
const Node n_of_one PROGMEM = { 81, 2 };
const Node n_of_many PROGMEM = { 37, 1 };
const Node n_of_his PROGMEM = { 161, 3 };
const Node n_of_sleep PROGMEM = { 197, 1 };
const Node n_of_this PROGMEM = { 22, 4 };
const Node n_of_god PROGMEM = { 252, 1 };
const Node n_of_her PROGMEM = { 56, 2 };
const Node n_of_death PROGMEM = { 240, 6 };
const Node n_of_them PROGMEM = { 118, 6 };
const Node n_of_true PROGMEM = { 90, 1 };
const Node n_of_its PROGMEM = { 70, 1 };
const Node n_of_that PROGMEM = { 26, 2 };
const Node n_of_th PROGMEM = { 292, 2 };
const Node n_of_yr PROGMEM = { 291, 1 };
const Node n_of_you PROGMEM = { 19, 1 };
const Node n_of_sky PROGMEM = { 174, 2 };
const Node n_of_wind PROGMEM = { 295, 1 };
const Node n_of_all PROGMEM = { 62, 2 };
const Node n_of_it PROGMEM = { 125, 2 };
const Node n_of_people PROGMEM = { 154, 1 };
const Node n_of_wall PROGMEM = { 196, 1 };
const Node n_of_fear PROGMEM = { 103, 1 };
const Node n_of_how PROGMEM = { 136, 1 };
const Node n_of_land PROGMEM = { 112, 1 };
const Node n_of_dreams PROGMEM = { 284, 1 };
const Node n_of_said PROGMEM = { 158, 2 };
const Node n_of_dark PROGMEM = { 250, 1 };
const Node n_of_days PROGMEM = { 73, 1 };
const Node n_of_life PROGMEM = { 93, 2 };
const Node n_of_night PROGMEM = { 52, 1 };
const Node n_of_escape PROGMEM = { 294, 1 };
const Node n_of_new PROGMEM = { 35, 1 };
const Node na_of[] PROGMEM = { & n_of_my,& n_of_the,& n_of_me,& n_of_a,& n_of_their,& n_of_dream,& n_of_what,& n_of_blood,& n_of_water,& n_of_trees,& n_of_breath,& n_of_three,& n_of_one,& n_of_many,& n_of_his,& n_of_sleep,& n_of_this,& n_of_god,& n_of_her,& n_of_death,& n_of_them,& n_of_true,& n_of_its,& n_of_that,& n_of_th,& n_of_yr,& n_of_you,& n_of_sky,& n_of_wind,& n_of_all,& n_of_it,& n_of_people,& n_of_wall,& n_of_fear,& n_of_how,& n_of_land,& n_of_dreams,& n_of_said,& n_of_dark,& n_of_days,& n_of_life,& n_of_night,& n_of_escape,& n_of_new };
const OutgoingEdges e_of PROGMEM = { na_of, 44 };
const Node n_and_air PROGMEM = { 17, 2 };
const Node n_and_im PROGMEM = { 18, 1 };
const Node n_and_i PROGMEM = { 2, 6 };
const Node n_and_live PROGMEM = { 92, 1 };
const Node n_and_felt PROGMEM = { 98, 1 };
const Node n_and_many PROGMEM = { 37, 1 };
const Node n_and_her PROGMEM = { 56, 2 };
const Node n_and_a PROGMEM = { 40, 6 };
const Node n_and_the PROGMEM = { 6, 21 };
const Node n_and_he PROGMEM = { 122, 5 };
const Node n_and_went PROGMEM = { 152, 1 };
const Node n_and_not PROGMEM = { 72, 1 };
const Node n_and_play PROGMEM = { 164, 1 };
const Node n_and_truth PROGMEM = { 187, 1 };
const Node n_and_we PROGMEM = { 57, 5 };
const Node n_and_then PROGMEM = { 86, 3 };
const Node n_and_perfect PROGMEM = { 215, 1 };
const Node n_and_yet PROGMEM = { 199, 1 };
const Node n_and_it PROGMEM = { 125, 2 };
const Node n_and_that PROGMEM = { 26, 3 };
const Node n_and_now PROGMEM = { 257, 1 };
const Node n_and_our PROGMEM = { 203, 2 };
const Node n_and_all PROGMEM = { 62, 2 };
const Node n_and_left PROGMEM = { 123, 2 };
const Node n_and_though PROGMEM = { 251, 1 };
const Node n_and_be PROGMEM = { 28, 1 };
const Node n_and_from PROGMEM = { 78, 1 };
const Node n_and_an PROGMEM = { 146, 1 };
const Node n_and_some PROGMEM = { 128, 2 };
const Node n_and_bird PROGMEM = { 268, 1 };
const Node n_and_last PROGMEM = { 147, 1 };
const Node n_and_legs PROGMEM = { 195, 1 };
const Node n_and_die PROGMEM = { 39, 1 };
const Node n_and_well PROGMEM = { 261, 1 };
const Node n_and_is PROGMEM = { 173, 2 };
const Node n_and_upon PROGMEM = { 168, 1 };
const Node n_and_love PROGMEM = { 34, 1 };
const Node n_and_you PROGMEM = { 19, 2 };
const Node n_and_if PROGMEM = { 104, 2 };
const Node n_and_someone PROGMEM = { 265, 1 };
const Node n_and_glass PROGMEM = { 243, 1 };
const Node n_and_here PROGMEM = { 229, 1 };
const Node n_and_th PROGMEM = { 292, 1 };
const Node n_and_being PROGMEM = { 260, 1 };
const Node n_and_wind PROGMEM = { 295, 1 };
const Node n_and_what PROGMEM = { 179, 1 };
const Node n_and_people PROGMEM = { 154, 1 };
const Node n_and_so PROGMEM = { 120, 1 };
const Node n_and_they PROGMEM = { 137, 1 };
const Node n_and_there PROGMEM = { 149, 1 };
const Node n_and_this PROGMEM = { 22, 1 };
const Node n_and_do PROGMEM = { 163, 1 };
const Node n_and_made PROGMEM = { 211, 1 };
const Node n_and_think PROGMEM = { 180, 1 };
const Node n_and_walk PROGMEM = { 270, 1 };
const Node n_and_his PROGMEM = { 161, 1 };
const Node n_and_when PROGMEM = { 49, 1 };
const Node n_and_no PROGMEM = { 214, 1 };
const Node n_and_very PROGMEM = { 277, 1 };
const Node n_and_why PROGMEM = { 244, 1 };
const Node n_and_down PROGMEM = { 153, 2 };
const Node n_and_old PROGMEM = { 65, 2 };
const Node n_and_cross PROGMEM = { 236, 2 };
const Node n_and_has PROGMEM = { 126, 2 };
const Node n_and_met PROGMEM = { 230, 2 };
const Node n_and_my PROGMEM = { 7, 1 };
const Node n_and_too PROGMEM = { 89, 1 };
const Node n_and_bright PROGMEM = { 111, 1 };
const Node n_and_on PROGMEM = { 21, 1 };
const Node n_and_dream PROGMEM = { 44, 1 };
const Node n_and_kind PROGMEM = { 51, 1 };
const Node n_and_rain PROGMEM = { 178, 1 };
const Node n_and_work PROGMEM = { 80, 1 };
const Node na_and[] PROGMEM = { & n_and_air,& n_and_im,& n_and_i,& n_and_live,& n_and_felt,& n_and_many,& n_and_her,& n_and_a,& n_and_the,& n_and_he,& n_and_went,& n_and_not,& n_and_play,& n_and_truth,& n_and_we,& n_and_then,& n_and_perfect,& n_and_yet,& n_and_it,& n_and_that,& n_and_now,& n_and_our,& n_and_all,& n_and_left,& n_and_though,& n_and_be,& n_and_from,& n_and_an,& n_and_some,& n_and_bird,& n_and_last,& n_and_legs,& n_and_die,& n_and_well,& n_and_is,& n_and_upon,& n_and_love,& n_and_you,& n_and_if,& n_and_someone,& n_and_glass,& n_and_here,& n_and_th,& n_and_being,& n_and_wind,& n_and_what,& n_and_people,& n_and_so,& n_and_they,& n_and_there,& n_and_this,& n_and_do,& n_and_made,& n_and_think,& n_and_walk,& n_and_his,& n_and_when,& n_and_no,& n_and_very,& n_and_why,& n_and_down,& n_and_old,& n_and_cross,& n_and_has,& n_and_met,& n_and_my,& n_and_too,& n_and_bright,& n_and_on,& n_and_dream,& n_and_kind,& n_and_rain,& n_and_work };
const OutgoingEdges e_and PROGMEM = { na_and, 73 };
const Node n_air_and PROGMEM = { 16, 2 };
const Node n_air_could PROGMEM = { 91, 1 };
const Node n_air_i PROGMEM = { 2, 1 };
const Node n_air_as PROGMEM = { 69, 1 };
const Node n_air_the PROGMEM = { 6, 1 };
const Node n_air_ PROGMEM = { 38, 1 };
const Node n_air_is PROGMEM = { 173, 1 };
const Node na_air[] PROGMEM = { & n_air_and,& n_air_could,& n_air_i,& n_air_as,& n_air_the,& n_air_,& n_air_is };
const OutgoingEdges e_air PROGMEM = { na_air, 7 };
const Node n_im_not PROGMEM = { 72, 1 };
const Node na_im[] PROGMEM = { & n_im_not };
const OutgoingEdges e_im PROGMEM = { na_im, 1 };
const Node n_you_were PROGMEM = { 20, 4 };
const Node n_you_with PROGMEM = { 36, 1 };
const Node n_you_have PROGMEM = { 8, 3 };
const Node n_you_do PROGMEM = { 163, 2 };
const Node n_you_you PROGMEM = { 19, 1 };
const Node n_you_see PROGMEM = { 64, 2 };
const Node n_you_think PROGMEM = { 180, 1 };
const Node n_you_are PROGMEM = { 166, 6 };
const Node n_you_if PROGMEM = { 104, 1 };
const Node n_you_stand PROGMEM = { 109, 1 };
const Node n_you_not PROGMEM = { 72, 1 };
const Node n_you_all PROGMEM = { 62, 1 };
const Node n_you_loved PROGMEM = { 100, 1 };
const Node n_you_up PROGMEM = { 58, 1 };
const Node n_you_be PROGMEM = { 28, 1 };
const Node n_you_may PROGMEM = { 281, 1 };
const Node n_you_cannot PROGMEM = { 286, 1 };
const Node n_you_down PROGMEM = { 153, 1 };
const Node n_you_when PROGMEM = { 49, 1 };
const Node n_you_in PROGMEM = { 11, 1 };
const Node n_you_this PROGMEM = { 22, 1 };
const Node n_you_a PROGMEM = { 40, 1 };
const Node n_you_can PROGMEM = { 171, 1 };
const Node n_you_lost PROGMEM = { 139, 1 };
const Node n_you_escape PROGMEM = { 294, 1 };
const Node n_you_to PROGMEM = { 5, 1 };
const Node n_you_go PROGMEM = { 183, 2 };
const Node n_you_could PROGMEM = { 91, 2 };
const Node n_you_will PROGMEM = { 191, 2 };
const Node n_you_later PROGMEM = { 74, 2 };
const Node n_you_there PROGMEM = { 149, 1 };
const Node n_you_left PROGMEM = { 123, 1 };
const Node n_you_before PROGMEM = { 221, 1 };
const Node n_you_then PROGMEM = { 86, 1 };
const Node n_you_light PROGMEM = { 129, 1 };
const Node n_you_took PROGMEM = { 54, 1 };
const Node na_you[] PROGMEM = { & n_you_were,& n_you_with,& n_you_have,& n_you_do,& n_you_you,& n_you_see,& n_you_think,& n_you_are,& n_you_if,& n_you_stand,& n_you_not,& n_you_all,& n_you_loved,& n_you_up,& n_you_be,& n_you_may,& n_you_cannot,& n_you_down,& n_you_when,& n_you_in,& n_you_this,& n_you_a,& n_you_can,& n_you_lost,& n_you_escape,& n_you_to,& n_you_go,& n_you_could,& n_you_will,& n_you_later,& n_you_there,& n_you_left,& n_you_before,& n_you_then,& n_you_light,& n_you_took };
const OutgoingEdges e_you PROGMEM = { na_you, 36 };
const Node n_were_in PROGMEM = { 11, 6 };
const Node n_were_or PROGMEM = { 24, 1 };
const Node n_were_not PROGMEM = { 72, 3 };
const Node n_were_was PROGMEM = { 105, 8 };
const Node n_were_caught PROGMEM = { 202, 2 };
const Node n_were_on PROGMEM = { 21, 2 };
const Node n_were_they PROGMEM = { 137, 2 };
const Node n_were_all PROGMEM = { 62, 1 };
const Node n_were_once PROGMEM = { 223, 1 };
const Node n_were_here PROGMEM = { 229, 1 };
const Node n_were_there PROGMEM = { 149, 1 };
const Node n_were_little PROGMEM = { 213, 1 };
const Node n_were_no PROGMEM = { 214, 1 };
const Node n_were_done PROGMEM = { 269, 1 };
const Node n_were_you PROGMEM = { 19, 1 };
const Node n_were_never PROGMEM = { 218, 1 };
const Node na_were[] PROGMEM = { & n_were_in,& n_were_or,& n_were_not,& n_were_was,& n_were_caught,& n_were_on,& n_were_they,& n_were_all,& n_were_once,& n_were_here,& n_were_there,& n_were_little,& n_were_no,& n_were_done,& n_were_you,& n_were_never };
const OutgoingEdges e_were PROGMEM = { na_were, 16 };
const Node n_on_this PROGMEM = { 22, 2 };
const Node n_on_my PROGMEM = { 7, 2 };
const Node n_on_the PROGMEM = { 6, 29 };
const Node n_on_a PROGMEM = { 40, 8 };
const Node n_on_their PROGMEM = { 142, 1 };
const Node n_on_we PROGMEM = { 57, 1 };
const Node n_on_to PROGMEM = { 5, 2 };
const Node n_on_water PROGMEM = { 207, 1 };
const Node n_on_ourselves PROGMEM = { 264, 1 };
const Node n_on_knees PROGMEM = { 209, 1 };
const Node n_on_white PROGMEM = { 273, 1 };
const Node n_on_moving PROGMEM = { 241, 1 };
const Node n_on_that PROGMEM = { 26, 3 };
const Node n_on_his PROGMEM = { 161, 3 };
const Node n_on_our PROGMEM = { 203, 1 };
const Node n_on_some PROGMEM = { 128, 1 };
const Node n_on_its PROGMEM = { 70, 1 };
const Node n_on_th PROGMEM = { 292, 1 };
const Node n_on_your PROGMEM = { 46, 1 };
const Node n_on_how PROGMEM = { 136, 1 };
const Node na_on[] PROGMEM = { & n_on_this,& n_on_my,& n_on_the,& n_on_a,& n_on_their,& n_on_we,& n_on_to,& n_on_water,& n_on_ourselves,& n_on_knees,& n_on_white,& n_on_moving,& n_on_that,& n_on_his,& n_on_our,& n_on_some,& n_on_its,& n_on_th,& n_on_your,& n_on_how };
const OutgoingEdges e_on PROGMEM = { na_on, 20 };
const Node n_this_day PROGMEM = { 23, 1 };
const Node n_this_new PROGMEM = { 35, 1 };
const Node n_this_land PROGMEM = { 112, 1 };
const Node n_this_life PROGMEM = { 93, 1 };
const Node n_this_death PROGMEM = { 240, 1 };
const Node n_this_dark PROGMEM = { 250, 1 };
const Node n_this_body PROGMEM = { 82, 1 };
const Node n_this_was PROGMEM = { 105, 1 };
const Node n_this_one PROGMEM = { 81, 2 };
const Node n_this_without PROGMEM = { 162, 1 };
const Node n_this_be PROGMEM = { 28, 1 };
const Node n_this_before PROGMEM = { 221, 1 };
const Node n_this_place PROGMEM = { 68, 2 };
const Node n_this_might PROGMEM = { 83, 1 };
const Node n_this_summer PROGMEM = { 41, 2 };
const Node n_this_is PROGMEM = { 173, 4 };
const Node n_this_city PROGMEM = { 60, 1 };
const Node n_this_he PROGMEM = { 122, 2 };
const Node n_this_salmon PROGMEM = { 302, 1 };
const Node n_this_my PROGMEM = { 7, 1 };
const Node n_this_light PROGMEM = { 129, 1 };
const Node na_this[] PROGMEM = { & n_this_day,& n_this_new,& n_this_land,& n_this_life,& n_this_death,& n_this_dark,& n_this_body,& n_this_was,& n_this_one,& n_this_without,& n_this_be,& n_this_before,& n_this_place,& n_this_might,& n_this_summer,& n_this_is,& n_this_city,& n_this_he,& n_this_salmon,& n_this_my,& n_this_light };
const OutgoingEdges e_this PROGMEM = { na_this, 21 };
const Node n_day_or PROGMEM = { 24, 1 };
const Node n_day_i PROGMEM = { 2, 2 };
const Node n_day_when PROGMEM = { 49, 1 };
const Node n_day_come PROGMEM = { 198, 1 };
const Node n_day_then PROGMEM = { 86, 1 };
const Node n_day_a PROGMEM = { 40, 1 };
const Node n_day_th PROGMEM = { 292, 1 };
const Node na_day[] PROGMEM = { & n_day_or,& n_day_i,& n_day_when,& n_day_come,& n_day_then,& n_day_a,& n_day_th };
const OutgoingEdges e_day PROGMEM = { na_day, 7 };
const Node n_or_tell PROGMEM = { 169, 1 };
const Node n_or_slow PROGMEM = { 185, 1 };
const Node n_or_will PROGMEM = { 191, 1 };
const Node n_or_the PROGMEM = { 6, 1 };
const Node n_or_just PROGMEM = { 189, 1 };
const Node n_or_his PROGMEM = { 161, 1 };
const Node n_or_a PROGMEM = { 40, 4 };
const Node n_or_in PROGMEM = { 11, 1 };
const Node n_or_when PROGMEM = { 49, 2 };
const Node n_or_come PROGMEM = { 198, 1 };
const Node n_or_with PROGMEM = { 36, 1 };
const Node n_or_someone PROGMEM = { 265, 1 };
const Node n_or_two PROGMEM = { 210, 1 };
const Node n_or_at PROGMEM = { 155, 1 };
const Node n_or_remove PROGMEM = { 181, 1 };
const Node na_or[] PROGMEM = { & n_or_tell,& n_or_slow,& n_or_will,& n_or_the,& n_or_just,& n_or_his,& n_or_a,& n_or_in,& n_or_when,& n_or_come,& n_or_with,& n_or_someone,& n_or_two,& n_or_at,& n_or_remove };
const OutgoingEdges e_or PROGMEM = { na_or, 15 };
const Node n_another_way PROGMEM = { 13, 1 };
const Node n_another_just PROGMEM = { 189, 1 };
const Node n_another_with PROGMEM = { 36, 1 };
const Node n_another_and PROGMEM = { 16, 2 };
const Node n_another_face PROGMEM = { 43, 1 };
const Node na_another[] PROGMEM = { & n_another_way,& n_another_just,& n_another_with,& n_another_and,& n_another_face };
const OutgoingEdges e_another PROGMEM = { na_another, 5 };
const Node n_that_you PROGMEM = { 19, 1 };
const Node n_that_die PROGMEM = { 39, 1 };
const Node n_that_old PROGMEM = { 65, 1 };
const Node n_that_like PROGMEM = { 45, 1 };
const Node n_that_too PROGMEM = { 89, 1 };
const Node n_that_if PROGMEM = { 104, 2 };
const Node n_that_he PROGMEM = { 122, 3 };
const Node n_that_we PROGMEM = { 57, 2 };
const Node n_that_i PROGMEM = { 2, 7 };
const Node n_that_to PROGMEM = { 5, 1 };
const Node n_that_were PROGMEM = { 20, 1 };
const Node n_that_the PROGMEM = { 6, 1 };
const Node n_that_one PROGMEM = { 81, 1 };
const Node n_that_will PROGMEM = { 191, 2 };
const Node n_that_she PROGMEM = { 131, 1 };
const Node n_that_it PROGMEM = { 125, 1 };
const Node n_that_had PROGMEM = { 87, 1 };
const Node n_that_was PROGMEM = { 105, 1 };
const Node n_that_has PROGMEM = { 126, 2 };
const Node n_that_are PROGMEM = { 166, 1 };
const Node n_that_could PROGMEM = { 91, 1 };
const Node n_that_is PROGMEM = { 173, 1 };
const Node n_that_again PROGMEM = { 188, 1 };
const Node n_that_blue PROGMEM = { 75, 1 };
const Node n_that_want PROGMEM = { 4, 1 };
const Node n_that_a PROGMEM = { 40, 1 };
const Node n_that_sin PROGMEM = { 300, 4 };
const Node n_that_when PROGMEM = { 49, 1 };
const Node n_that_at PROGMEM = { 155, 1 };
const Node n_that_thou PROGMEM = { 299, 1 };
const Node n_that_and PROGMEM = { 16, 1 };
const Node n_that_right PROGMEM = { 279, 2 };
const Node na_that[] PROGMEM = { & n_that_you,& n_that_die,& n_that_old,& n_that_like,& n_that_too,& n_that_if,& n_that_he,& n_that_we,& n_that_i,& n_that_to,& n_that_were,& n_that_the,& n_that_one,& n_that_will,& n_that_she,& n_that_it,& n_that_had,& n_that_was,& n_that_has,& n_that_are,& n_that_could,& n_that_is,& n_that_again,& n_that_blue,& n_that_want,& n_that_a,& n_that_sin,& n_that_when,& n_that_at,& n_that_thou,& n_that_and,& n_that_right };
const OutgoingEdges e_that PROGMEM = { na_that, 32 };
const Node n_lets_be PROGMEM = { 28, 1 };
const Node n_lets_call PROGMEM = { 29, 1 };
const Node n_lets_say PROGMEM = { 258, 4 };
const Node na_lets[] PROGMEM = { & n_lets_be,& n_lets_call,& n_lets_say };
const OutgoingEdges e_lets PROGMEM = { na_lets, 3 };
const Node n_be_enough PROGMEM = { 84, 1 };
const Node n_be_loved PROGMEM = { 100, 1 };
const Node n_be_a PROGMEM = { 40, 4 };
const Node n_be_in PROGMEM = { 11, 2 };
const Node n_be_any PROGMEM = { 233, 1 };
const Node n_be_done PROGMEM = { 269, 2 };
const Node n_be_true PROGMEM = { 90, 1 };
const Node n_be_all PROGMEM = { 62, 1 };
const Node n_be_dead PROGMEM = { 227, 1 };
const Node n_be_the PROGMEM = { 6, 2 };
const Node n_be_salmon PROGMEM = { 302, 2 };
const Node n_be_old PROGMEM = { 65, 2 };
const Node na_be[] PROGMEM = { & n_be_enough,& n_be_loved,& n_be_a,& n_be_in,& n_be_any,& n_be_done,& n_be_true,& n_be_all,& n_be_dead,& n_be_the,& n_be_salmon,& n_be_old };
const OutgoingEdges e_be PROGMEM = { na_be, 12 };
const Node n_call_each PROGMEM = { 30, 1 };
const Node n_call_just PROGMEM = { 189, 1 };
const Node n_call_of PROGMEM = { 15, 1 };
const Node n_call_do PROGMEM = { 163, 1 };
const Node na_call[] PROGMEM = { & n_call_each,& n_call_just,& n_call_of,& n_call_do };
const OutgoingEdges e_call PROGMEM = { na_call, 4 };
const Node n_each_other PROGMEM = { 31, 1 };
const Node n_each_day PROGMEM = { 23, 2 };
const Node n_each_is PROGMEM = { 173, 1 };
const Node na_each[] PROGMEM = { & n_each_other,& n_each_day,& n_each_is };
const OutgoingEdges e_each PROGMEM = { na_each, 3 };
const Node n_other_body PROGMEM = { 82, 1 };
const Node n_other_end PROGMEM = { 237, 1 };
const Node n_other_city PROGMEM = { 60, 1 };
const Node na_other[] PROGMEM = { & n_other_body,& n_other_end,& n_other_city };
const OutgoingEdges e_other PROGMEM = { na_other, 3 };
const Node n_everything_into PROGMEM = { 33, 1 };
const Node n_everything_to PROGMEM = { 5, 1 };
const Node n_everything_through PROGMEM = { 79, 1 };
const Node n_everything_is PROGMEM = { 173, 3 };
const Node na_everything[] PROGMEM = { & n_everything_into,& n_everything_to,& n_everything_through,& n_everything_is };
const OutgoingEdges e_everything PROGMEM = { na_everything, 4 };
const Node n_into_the PROGMEM = { 6, 11 };
const Node n_into_air PROGMEM = { 17, 2 };
const Node n_into_their PROGMEM = { 142, 1 };
const Node n_into_these PROGMEM = { 140, 1 };
const Node n_into_this PROGMEM = { 22, 1 };
const Node n_into_nothing PROGMEM = { 285, 1 };
const Node n_into_th PROGMEM = { 292, 2 };
const Node n_into_a PROGMEM = { 40, 1 };
const Node n_into_out PROGMEM = { 63, 1 };
const Node n_into_something PROGMEM = { 192, 1 };
const Node na_into[] PROGMEM = { & n_into_the,& n_into_air,& n_into_their,& n_into_these,& n_into_this,& n_into_nothing,& n_into_th,& n_into_a,& n_into_out,& n_into_something };
const OutgoingEdges e_into PROGMEM = { na_into, 10 };
const Node n_love_and PROGMEM = { 16, 1 };
const Node n_love_to PROGMEM = { 5, 1 };
const Node n_love_myself PROGMEM = { 59, 1 };
const Node n_love_my PROGMEM = { 7, 1 };
const Node n_love_is PROGMEM = { 173, 3 };
const Node n_love_which PROGMEM = { 144, 1 };
const Node n_love_i PROGMEM = { 2, 1 };
const Node n_love_dear PROGMEM = { 283, 1 };
const Node n_love_you PROGMEM = { 19, 1 };
const Node n_love_though PROGMEM = { 251, 1 };
const Node n_love_not PROGMEM = { 72, 1 };
const Node n_love_we PROGMEM = { 57, 1 };
const Node n_love_love PROGMEM = { 34, 1 };
const Node n_love_him PROGMEM = { 121, 1 };
const Node n_love_long PROGMEM = { 220, 1 };
const Node n_love_it PROGMEM = { 125, 1 };
const Node na_love[] PROGMEM = { & n_love_and,& n_love_to,& n_love_myself,& n_love_my,& n_love_is,& n_love_which,& n_love_i,& n_love_dear,& n_love_you,& n_love_though,& n_love_not,& n_love_we,& n_love_love,& n_love_him,& n_love_long,& n_love_it };
const OutgoingEdges e_love PROGMEM = { na_love, 16 };
const Node n_new_and PROGMEM = { 16, 1 };
const Node n_new_ PROGMEM = { 38, 1 };
const Node na_new[] PROGMEM = { & n_new_and,& n_new_ };
const OutgoingEdges e_new PROGMEM = { na_new, 2 };
const Node n_with_many PROGMEM = { 37, 1 };
const Node n_with_her PROGMEM = { 56, 2 };
const Node n_with_a PROGMEM = { 40, 6 };
const Node n_with_the PROGMEM = { 6, 11 };
const Node n_with_an PROGMEM = { 146, 3 };
const Node n_with_trickle PROGMEM = { 204, 2 };
const Node n_with_trees PROGMEM = { 217, 1 };
const Node n_with_this PROGMEM = { 22, 1 };
const Node n_with_me PROGMEM = { 42, 1 };
const Node n_with_little PROGMEM = { 213, 1 };
const Node n_with_his PROGMEM = { 161, 2 };
const Node n_with_it PROGMEM = { 125, 1 };
const Node n_with_out PROGMEM = { 63, 1 };
const Node n_with_blue PROGMEM = { 75, 1 };
const Node n_with_th PROGMEM = { 292, 1 };
const Node n_with_four PROGMEM = { 290, 1 };
const Node n_with_all PROGMEM = { 62, 1 };
const Node na_with[] PROGMEM = { & n_with_many,& n_with_her,& n_with_a,& n_with_the,& n_with_an,& n_with_trickle,& n_with_trees,& n_with_this,& n_with_me,& n_with_little,& n_with_his,& n_with_it,& n_with_out,& n_with_blue,& n_with_th,& n_with_four,& n_with_all };
const OutgoingEdges e_with PROGMEM = { na_with, 17 };
const Node n_many_days PROGMEM = { 73, 2 };
const Node n_many_trees PROGMEM = { 217, 1 };
const Node n_many_dreams PROGMEM = { 284, 1 };
const Node na_many[] PROGMEM = { & n_many_days,& n_many_trees,& n_many_dreams };
const OutgoingEdges e_many PROGMEM = { na_many, 3 };
const Node n__love PROGMEM = { 34, 1 };
const Node n__yes PROGMEM = { 159, 1 };
const Node n__and PROGMEM = { 16, 1 };
const Node n__the PROGMEM = { 6, 3 };
const Node n__a PROGMEM = { 40, 2 };
const Node n__on PROGMEM = { 21, 3 };
const Node n__we PROGMEM = { 57, 3 };
const Node n__this PROGMEM = { 22, 1 };
const Node n__how PROGMEM = { 136, 1 };
const Node n__i PROGMEM = { 2, 2 };
const Node n__but PROGMEM = { 71, 3 };
const Node n__you PROGMEM = { 19, 1 };
const Node n__like PROGMEM = { 45, 1 };
const Node n__one PROGMEM = { 81, 1 };
const Node n__some PROGMEM = { 128, 1 };
const Node n__END PROGMEM = { 0, 1 };
const Node na_[] PROGMEM = { & n__love,& n__yes,& n__and,& n__the,& n__a,& n__on,& n__we,& n__this,& n__how,& n__i,& n__but,& n__you,& n__like,& n__one,& n__some,& n__END };
const OutgoingEdges e_ PROGMEM = { na_, 16 };
const Node n_die_in PROGMEM = { 11, 1 };
const Node n_die_against PROGMEM = { 107, 1 };
const Node n_die_ PROGMEM = { 38, 2 };
const Node n_die_this PROGMEM = { 22, 1 };
const Node n_die_into PROGMEM = { 33, 1 };
const Node n_die_before PROGMEM = { 221, 2 };
const Node na_die[] PROGMEM = { & n_die_in,& n_die_against,& n_die_,& n_die_this,& n_die_into,& n_die_before };
const OutgoingEdges e_die PROGMEM = { na_die, 6 };
const Node n_a_river PROGMEM = { 50, 1 };
const Node n_a_true PROGMEM = { 90, 1 };
const Node n_a_way PROGMEM = { 13, 1 };
const Node n_a_home PROGMEM = { 113, 1 };
const Node n_a_new PROGMEM = { 35, 3 };
const Node n_a_blue PROGMEM = { 75, 3 };
const Node n_a_thing PROGMEM = { 170, 1 };
const Node n_a_summer PROGMEM = { 41, 1 };
const Node n_a_trickle PROGMEM = { 204, 4 };
const Node n_a_dream PROGMEM = { 44, 3 };
const Node n_a_perfect PROGMEM = { 215, 2 };
const Node n_a_small PROGMEM = { 88, 4 };
const Node n_a_body PROGMEM = { 82, 3 };
const Node n_a_tree PROGMEM = { 216, 2 };
const Node n_a_man PROGMEM = { 167, 5 };
const Node n_a_glass PROGMEM = { 243, 1 };
const Node n_a_fear PROGMEM = { 103, 1 };
const Node n_a_day PROGMEM = { 23, 1 };
const Node n_a_city PROGMEM = { 60, 2 };
const Node n_a_little PROGMEM = { 213, 4 };
const Node n_a_place PROGMEM = { 68, 1 };
const Node n_a_good PROGMEM = { 262, 1 };
const Node n_a_laugh PROGMEM = { 47, 1 };
const Node n_a_soft PROGMEM = { 276, 2 };
const Node n_a_high PROGMEM = { 145, 1 };
const Node n_a_walk PROGMEM = { 270, 1 };
const Node n_a_fish PROGMEM = { 266, 1 };
const Node n_a_touch PROGMEM = { 259, 1 };
const Node n_a_bed PROGMEM = { 9, 1 };
const Node n_a_daughter PROGMEM = { 14, 1 };
const Node n_a_rain PROGMEM = { 178, 1 };
const Node n_a_white PROGMEM = { 273, 1 };
const Node n_a_land PROGMEM = { 112, 1 };
const Node n_a_bird PROGMEM = { 268, 1 };
const Node n_a_felt PROGMEM = { 98, 1 };
const Node n_a_garbage PROGMEM = { 297, 1 };
const Node n_a_sin PROGMEM = { 300, 1 };
const Node n_a_blood PROGMEM = { 205, 1 };
const Node n_a_human PROGMEM = { 157, 2 };
const Node n_a_is PROGMEM = { 173, 2 };
const Node n_a_stone PROGMEM = { 234, 2 };
const Node n_a_mind PROGMEM = { 124, 1 };
const Node n_a_heart PROGMEM = { 224, 1 };
const Node n_a_breath PROGMEM = { 239, 1 };
const Node n_a_dead PROGMEM = { 227, 1 };
const Node na_a[] PROGMEM = { & n_a_river,& n_a_true,& n_a_way,& n_a_home,& n_a_new,& n_a_blue,& n_a_thing,& n_a_summer,& n_a_trickle,& n_a_dream,& n_a_perfect,& n_a_small,& n_a_body,& n_a_tree,& n_a_man,& n_a_glass,& n_a_fear,& n_a_day,& n_a_city,& n_a_little,& n_a_place,& n_a_good,& n_a_laugh,& n_a_soft,& n_a_high,& n_a_walk,& n_a_fish,& n_a_touch,& n_a_bed,& n_a_daughter,& n_a_rain,& n_a_white,& n_a_land,& n_a_bird,& n_a_felt,& n_a_garbage,& n_a_sin,& n_a_blood,& n_a_human,& n_a_is,& n_a_stone,& n_a_mind,& n_a_heart,& n_a_breath,& n_a_dead };
const OutgoingEdges e_a PROGMEM = { na_a, 45 };
const Node n_summer_night PROGMEM = { 52, 2 };
const Node n_summer_sky PROGMEM = { 174, 1 };
const Node na_summer[] PROGMEM = { & n_summer_night,& n_summer_sky };
const OutgoingEdges e_summer PROGMEM = { na_summer, 2 };
const Node n_me_in PROGMEM = { 11, 2 };
const Node n_me_up PROGMEM = { 58, 1 };
const Node n_me_i PROGMEM = { 2, 1 };
const Node n_me_and PROGMEM = { 16, 1 };
const Node n_me_with PROGMEM = { 36, 1 };
const Node n_me_END PROGMEM = { 0, 2 };
const Node n_me_a PROGMEM = { 40, 1 };
const Node n_me_what PROGMEM = { 179, 1 };
const Node n_me_of PROGMEM = { 15, 1 };
const Node n_me_was PROGMEM = { 105, 1 };
const Node n_me_be PROGMEM = { 28, 2 };
const Node n_me_to PROGMEM = { 5, 3 };
const Node n_me_not PROGMEM = { 72, 1 };
const Node n_me_my PROGMEM = { 7, 2 };
const Node n_me_without PROGMEM = { 162, 1 };
const Node n_me_she PROGMEM = { 131, 1 };
const Node n_me_find PROGMEM = { 127, 1 };
const Node n_me_moving PROGMEM = { 241, 1 };
const Node n_me_any PROGMEM = { 233, 1 };
const Node n_me_then PROGMEM = { 86, 1 };
const Node n_me_yet PROGMEM = { 199, 1 };
const Node n_me_the PROGMEM = { 6, 2 };
const Node n_me_there PROGMEM = { 149, 1 };
const Node na_me[] PROGMEM = { & n_me_in,& n_me_up,& n_me_i,& n_me_and,& n_me_with,& n_me_END,& n_me_a,& n_me_what,& n_me_of,& n_me_was,& n_me_be,& n_me_to,& n_me_not,& n_me_my,& n_me_without,& n_me_she,& n_me_find,& n_me_moving,& n_me_any,& n_me_then,& n_me_yet,& n_me_the,& n_me_there };
const OutgoingEdges e_me PROGMEM = { na_me, 23 };
const Node n_face_a PROGMEM = { 40, 1 };
const Node n_face_turned PROGMEM = { 132, 1 };
const Node n_face_of PROGMEM = { 15, 1 };
const Node n_face_those PROGMEM = { 148, 1 };
const Node n_face_where PROGMEM = { 200, 1 };
const Node n_face_the PROGMEM = { 6, 2 };
const Node n_face_in PROGMEM = { 11, 1 };
const Node na_face[] PROGMEM = { & n_face_a,& n_face_turned,& n_face_of,& n_face_those,& n_face_where,& n_face_the,& n_face_in };
const OutgoingEdges e_face PROGMEM = { na_face, 7 };
const Node n_dream_the PROGMEM = { 6, 1 };
const Node n_dream_above PROGMEM = { 184, 2 };
const Node n_dream_were PROGMEM = { 20, 1 };
const Node n_dream_of PROGMEM = { 15, 1 };
const Node n_dream_it PROGMEM = { 125, 1 };
const Node na_dream[] PROGMEM = { & n_dream_the,& n_dream_above,& n_dream_were,& n_dream_of,& n_dream_it };
const OutgoingEdges e_dream PROGMEM = { na_dream, 5 };
const Node n_like_a PROGMEM = { 40, 6 };
const Node n_like_that PROGMEM = { 26, 3 };
const Node n_like_another PROGMEM = { 25, 1 };
const Node n_like_this PROGMEM = { 22, 1 };
const Node n_like_me PROGMEM = { 42, 1 };
const Node n_like_an PROGMEM = { 146, 1 };
const Node n_like_going PROGMEM = { 106, 1 };
const Node n_like_he PROGMEM = { 122, 1 };
const Node n_like_the PROGMEM = { 6, 6 };
const Node n_like_and PROGMEM = { 16, 1 };
const Node na_like[] PROGMEM = { & n_like_a,& n_like_that,& n_like_another,& n_like_this,& n_like_me,& n_like_an,& n_like_going,& n_like_he,& n_like_the,& n_like_and };
const OutgoingEdges e_like PROGMEM = { na_like, 10 };
const Node n_your_laugh PROGMEM = { 47, 1 };
const Node n_your_hair PROGMEM = { 10, 2 };
const Node n_your_eyes PROGMEM = { 119, 2 };
const Node n_your_life PROGMEM = { 93, 1 };
const Node n_your_breath PROGMEM = { 239, 1 };
const Node n_your_bent PROGMEM = { 194, 2 };
const Node n_your_own PROGMEM = { 253, 3 };
const Node na_your[] PROGMEM = { & n_your_laugh,& n_your_hair,& n_your_eyes,& n_your_life,& n_your_breath,& n_your_bent,& n_your_own };
const OutgoingEdges e_your PROGMEM = { na_your, 7 };
const Node n_laugh_a PROGMEM = { 40, 2 };
const Node n_laugh_and PROGMEM = { 16, 1 };
const Node na_laugh[] PROGMEM = { & n_laugh_a,& n_laugh_and };
const OutgoingEdges e_laugh PROGMEM = { na_laugh, 2 };
const Node n_under_a PROGMEM = { 40, 1 };
const Node n_under_that PROGMEM = { 26, 1 };
const Node n_under_over PROGMEM = { 134, 1 };
const Node n_under_each PROGMEM = { 30, 1 };
const Node na_under[] PROGMEM = { & n_under_a,& n_under_that,& n_under_over,& n_under_each };
const OutgoingEdges e_under PROGMEM = { na_under, 4 };
const Node n_when_i PROGMEM = { 2, 9 };
const Node n_when_the PROGMEM = { 6, 8 };
const Node n_when_he PROGMEM = { 122, 3 };
const Node n_when_we PROGMEM = { 57, 1 };
const Node n_when_your PROGMEM = { 46, 1 };
const Node n_when_can PROGMEM = { 171, 1 };
const Node n_when_it PROGMEM = { 125, 1 };
const Node n_when_my PROGMEM = { 7, 2 };
const Node n_when_you PROGMEM = { 19, 2 };
const Node n_when_a PROGMEM = { 40, 1 };
const Node n_when_land PROGMEM = { 112, 1 };
const Node n_when_thou PROGMEM = { 299, 2 };
const Node na_when[] PROGMEM = { & n_when_i,& n_when_the,& n_when_he,& n_when_we,& n_when_your,& n_when_can,& n_when_it,& n_when_my,& n_when_you,& n_when_a,& n_when_land,& n_when_thou };
const OutgoingEdges e_when PROGMEM = { na_when, 12 };
const Node n_river_a PROGMEM = { 40, 1 };
const Node n_river_is PROGMEM = { 173, 1 };
const Node na_river[] PROGMEM = { & n_river_a,& n_river_is };
const OutgoingEdges e_river PROGMEM = { na_river, 2 };
const Node n_kind_of PROGMEM = { 15, 5 };
const Node na_kind[] PROGMEM = { & n_kind_of };
const OutgoingEdges e_kind PROGMEM = { na_kind, 1 };
const Node n_night_america PROGMEM = { 53, 1 };
const Node n_night_went PROGMEM = { 152, 1 };
const Node n_night_i PROGMEM = { 2, 1 };
const Node n_night_or PROGMEM = { 24, 1 };
const Node n_night_and PROGMEM = { 16, 1 };
const Node n_night_matt PROGMEM = { 288, 1 };
const Node n_night_through PROGMEM = { 79, 1 };
const Node n_night_of PROGMEM = { 15, 1 };
const Node n_night_we PROGMEM = { 57, 1 };
const Node na_night[] PROGMEM = { & n_night_america,& n_night_went,& n_night_i,& n_night_or,& n_night_and,& n_night_matt,& n_night_through,& n_night_of,& n_night_we };
const OutgoingEdges e_night PROGMEM = { na_night, 9 };
const Node n_america_took PROGMEM = { 54, 1 };
const Node na_america[] PROGMEM = { & n_america_took };
const OutgoingEdges e_america PROGMEM = { na_america, 1 };
const Node n_took_off PROGMEM = { 55, 1 };
const Node n_took_it PROGMEM = { 125, 2 };
const Node n_took_this PROGMEM = { 22, 1 };
const Node n_took_the PROGMEM = { 6, 1 };
const Node n_took_all PROGMEM = { 62, 1 };
const Node na_took[] PROGMEM = { & n_took_off,& n_took_it,& n_took_this,& n_took_the,& n_took_all };
const OutgoingEdges e_took PROGMEM = { na_took, 5 };
const Node n_off_her PROGMEM = { 56, 1 };
const Node n_off_the PROGMEM = { 6, 1 };
const Node n_off_some PROGMEM = { 128, 1 };
const Node n_off_a PROGMEM = { 40, 1 };
const Node n_off_by PROGMEM = { 94, 1 };
const Node n_off_love PROGMEM = { 34, 1 };
const Node na_off[] PROGMEM = { & n_off_her,& n_off_the,& n_off_some,& n_off_a,& n_off_by,& n_off_love };
const OutgoingEdges e_off PROGMEM = { na_off, 6 };
const Node n_her_her PROGMEM = { 56, 1 };
const Node n_her_place PROGMEM = { 68, 1 };
const Node n_her_and PROGMEM = { 16, 1 };
const Node n_her_stand PROGMEM = { 109, 1 };
const Node n_her_hair PROGMEM = { 10, 1 };
const Node n_her_in PROGMEM = { 11, 1 };
const Node n_her_into PROGMEM = { 33, 1 };
const Node n_her_face PROGMEM = { 43, 2 };
const Node n_her_a PROGMEM = { 40, 1 };
const Node n_her_i PROGMEM = { 2, 1 };
const Node n_her_walk PROGMEM = { 270, 1 };
const Node n_her_without PROGMEM = { 162, 1 };
const Node n_her_own PROGMEM = { 253, 1 };
const Node n_her_summer PROGMEM = { 41, 1 };
const Node n_her_air PROGMEM = { 17, 1 };
const Node n_her_again PROGMEM = { 188, 1 };
const Node n_her_fear PROGMEM = { 103, 1 };
const Node n_her_now PROGMEM = { 257, 1 };
const Node n_her_way PROGMEM = { 13, 1 };
const Node n_her_side PROGMEM = { 256, 1 };
const Node n_her_back PROGMEM = { 67, 1 };
const Node n_her_out PROGMEM = { 63, 1 };
const Node n_her_eyes PROGMEM = { 119, 1 };
const Node na_her[] PROGMEM = { & n_her_her,& n_her_place,& n_her_and,& n_her_stand,& n_her_hair,& n_her_in,& n_her_into,& n_her_face,& n_her_a,& n_her_i,& n_her_walk,& n_her_without,& n_her_own,& n_her_summer,& n_her_air,& n_her_again,& n_her_fear,& n_her_now,& n_her_way,& n_her_side,& n_her_back,& n_her_out,& n_her_eyes };
const OutgoingEdges e_her PROGMEM = { na_her, 23 };
const Node n_we_were PROGMEM = { 20, 27 };
const Node n_we_people PROGMEM = { 154, 1 };
const Node n_we_thought PROGMEM = { 160, 1 };
const Node n_we_want PROGMEM = { 4, 1 };
const Node n_we_are PROGMEM = { 166, 5 };
const Node n_we_bent PROGMEM = { 194, 2 };
const Node n_we_went PROGMEM = { 152, 2 };
const Node n_we_fell PROGMEM = { 77, 2 };
const Node n_we_took PROGMEM = { 54, 2 };
const Node n_we_dont PROGMEM = { 3, 2 };
const Node n_we_only PROGMEM = { 228, 1 };
const Node n_we_never PROGMEM = { 218, 2 };
const Node n_we_have PROGMEM = { 8, 2 };
const Node n_we_stop PROGMEM = { 263, 1 };
const Node n_we_look PROGMEM = { 267, 1 };
const Node n_we_see PROGMEM = { 64, 1 };
const Node n_we_stand PROGMEM = { 109, 1 };
const Node n_we_could PROGMEM = { 91, 2 };
const Node n_we_had PROGMEM = { 87, 2 };
const Node n_we_met PROGMEM = { 230, 1 };
const Node na_we[] PROGMEM = { & n_we_were,& n_we_people,& n_we_thought,& n_we_want,& n_we_are,& n_we_bent,& n_we_went,& n_we_fell,& n_we_took,& n_we_dont,& n_we_only,& n_we_never,& n_we_have,& n_we_stop,& n_we_look,& n_we_see,& n_we_stand,& n_we_could,& n_we_had,& n_we_met };
const OutgoingEdges e_we PROGMEM = { na_we, 20 };
const Node n_up_in PROGMEM = { 11, 2 };
const Node n_up_at PROGMEM = { 155, 3 };
const Node n_up_into PROGMEM = { 33, 3 };
const Node n_up_to PROGMEM = { 5, 3 };
const Node n_up_new PROGMEM = { 35, 1 };
const Node n_up_something PROGMEM = { 192, 1 };
const Node n_up_like PROGMEM = { 45, 1 };
const Node n_up_and PROGMEM = { 16, 2 };
const Node n_up_some PROGMEM = { 128, 1 };
const Node n_up_through PROGMEM = { 79, 1 };
const Node n_up_any PROGMEM = { 233, 1 };
const Node n_up_that PROGMEM = { 26, 1 };
const Node n_up_by PROGMEM = { 94, 2 };
const Node na_up[] PROGMEM = { & n_up_in,& n_up_at,& n_up_into,& n_up_to,& n_up_new,& n_up_something,& n_up_like,& n_up_and,& n_up_some,& n_up_through,& n_up_any,& n_up_that,& n_up_by };
const OutgoingEdges e_up PROGMEM = { na_up, 13 };
const Node n_myself_to PROGMEM = { 5, 1 };
const Node n_myself_be PROGMEM = { 28, 1 };
const Node n_myself_like PROGMEM = { 45, 1 };
const Node n_myself_at PROGMEM = { 155, 3 };
const Node na_myself[] PROGMEM = { & n_myself_to,& n_myself_be,& n_myself_like,& n_myself_at };
const OutgoingEdges e_myself PROGMEM = { na_myself, 4 };
const Node n_city_to PROGMEM = { 5, 2 };
const Node n_city_we PROGMEM = { 57, 1 };
const Node n_city_and PROGMEM = { 16, 1 };
const Node n_city_END PROGMEM = { 0, 1 };
const Node na_city[] PROGMEM = { & n_city_to,& n_city_we,& n_city_and,& n_city_END };
const OutgoingEdges e_city PROGMEM = { na_city, 4 };
const Node n_came_all PROGMEM = { 62, 1 };
const Node n_came_back PROGMEM = { 67, 1 };
const Node n_came_to PROGMEM = { 5, 1 };
const Node n_came_from PROGMEM = { 78, 1 };
const Node n_came_through PROGMEM = { 79, 1 };
const Node na_came[] PROGMEM = { & n_came_all,& n_came_back,& n_came_to,& n_came_from,& n_came_through };
const OutgoingEdges e_came PROGMEM = { na_came, 5 };
const Node n_all_the PROGMEM = { 6, 11 };
const Node n_all_but PROGMEM = { 71, 3 };
const Node n_all_perfect PROGMEM = { 215, 3 };
const Node n_all_down PROGMEM = { 153, 1 };
const Node n_all_they PROGMEM = { 137, 1 };
const Node n_all_to PROGMEM = { 5, 1 };
const Node n_all_my PROGMEM = { 7, 1 };
const Node n_all_business PROGMEM = { 271, 1 };
const Node n_all_in PROGMEM = { 11, 1 };
const Node n_all_their PROGMEM = { 142, 1 };
const Node n_all_that PROGMEM = { 26, 1 };
const Node n_all_you PROGMEM = { 19, 1 };
const Node n_all_it PROGMEM = { 125, 1 };
const Node n_all_as PROGMEM = { 69, 1 };
const Node n_all_night PROGMEM = { 52, 1 };
const Node n_all_th PROGMEM = { 292, 3 };
const Node n_all_around PROGMEM = { 245, 1 };
const Node n_all_breath PROGMEM = { 239, 2 };
const Node n_all_about PROGMEM = { 186, 1 };
const Node n_all_summer PROGMEM = { 41, 1 };
const Node n_all_this PROGMEM = { 22, 1 };
const Node n_all_among PROGMEM = { 235, 1 };
const Node n_all_we PROGMEM = { 57, 1 };
const Node na_all[] PROGMEM = { & n_all_the,& n_all_but,& n_all_perfect,& n_all_down,& n_all_they,& n_all_to,& n_all_my,& n_all_business,& n_all_in,& n_all_their,& n_all_that,& n_all_you,& n_all_it,& n_all_as,& n_all_night,& n_all_th,& n_all_around,& n_all_breath,& n_all_about,& n_all_summer,& n_all_this,& n_all_among,& n_all_we };
const OutgoingEdges e_all PROGMEM = { na_all, 23 };
const Node n_out_to PROGMEM = { 5, 2 };
const Node n_out_of PROGMEM = { 15, 8 };
const Node n_out_like PROGMEM = { 45, 2 };
const Node n_out_we PROGMEM = { 57, 1 };
const Node n_out_my PROGMEM = { 7, 1 };
const Node n_out_i PROGMEM = { 2, 2 };
const Node n_out_the PROGMEM = { 6, 5 };
const Node n_out_a PROGMEM = { 40, 2 };
const Node n_out_even PROGMEM = { 246, 1 };
const Node n_out_out PROGMEM = { 63, 1 };
const Node n_out_when PROGMEM = { 49, 1 };
const Node n_out_from PROGMEM = { 78, 1 };
const Node na_out[] PROGMEM = { & n_out_to,& n_out_of,& n_out_like,& n_out_we,& n_out_my,& n_out_i,& n_out_the,& n_out_a,& n_out_even,& n_out_out,& n_out_when,& n_out_from };
const OutgoingEdges e_out PROGMEM = { na_out, 12 };
const Node n_see_her PROGMEM = { 56, 2 };
const Node n_see_things PROGMEM = { 165, 1 };
const Node n_see_how PROGMEM = { 136, 1 };
const Node n_see_two PROGMEM = { 210, 1 };
const Node n_see_it PROGMEM = { 125, 2 };
const Node n_see_you PROGMEM = { 19, 6 };
const Node n_see_that PROGMEM = { 26, 1 };
const Node n_see_nothing PROGMEM = { 285, 1 };
const Node n_see_some PROGMEM = { 128, 1 };
const Node na_see[] PROGMEM = { & n_see_her,& n_see_things,& n_see_how,& n_see_two,& n_see_it,& n_see_you,& n_see_that,& n_see_nothing,& n_see_some };
const OutgoingEdges e_see PROGMEM = { na_see, 9 };
const Node n_old_and PROGMEM = { 16, 1 };
const Node n_old_old PROGMEM = { 65, 1 };
const Node n_old_man PROGMEM = { 167, 1 };
const Node n_old_one PROGMEM = { 81, 1 };
const Node n_old_enough PROGMEM = { 84, 6 };
const Node na_old[] PROGMEM = { & n_old_and,& n_old_old,& n_old_man,& n_old_one,& n_old_enough };
const OutgoingEdges e_old PROGMEM = { na_old, 5 };
const Node n_us_back PROGMEM = { 67, 1 };
const Node n_us_to PROGMEM = { 5, 1 };
const Node n_us_they PROGMEM = { 137, 1 };
const Node n_us_END PROGMEM = { 0, 1 };
const Node n_us_again PROGMEM = { 188, 1 };
const Node na_us[] PROGMEM = { & n_us_back,& n_us_to,& n_us_they,& n_us_END,& n_us_again };
const OutgoingEdges e_us PROGMEM = { na_us, 5 };
const Node n_back_to PROGMEM = { 5, 1 };
const Node n_back_my PROGMEM = { 7, 2 };
const Node n_back_it PROGMEM = { 125, 2 };
const Node n_back_and PROGMEM = { 16, 1 };
const Node n_back_but PROGMEM = { 71, 1 };
const Node n_back_from PROGMEM = { 78, 1 };
const Node n_back_her PROGMEM = { 56, 1 };
const Node n_back_words PROGMEM = { 115, 1 };
const Node n_back_here PROGMEM = { 229, 1 };
const Node n_back_legs PROGMEM = { 195, 2 };
const Node na_back[] PROGMEM = { & n_back_to,& n_back_my,& n_back_it,& n_back_and,& n_back_but,& n_back_from,& n_back_her,& n_back_words,& n_back_here,& n_back_legs };
const OutgoingEdges e_back PROGMEM = { na_back, 10 };
const Node n_place_as PROGMEM = { 69, 1 };
const Node n_place_so PROGMEM = { 120, 1 };
const Node n_place_to PROGMEM = { 5, 1 };
const Node n_place_it PROGMEM = { 125, 1 };
const Node n_place_like PROGMEM = { 45, 1 };
const Node n_place_from PROGMEM = { 78, 1 };
const Node n_place_someone PROGMEM = { 265, 1 };
const Node n_place_that PROGMEM = { 26, 1 };
const Node n_place_of PROGMEM = { 15, 2 };
const Node na_place[] PROGMEM = { & n_place_as,& n_place_so,& n_place_to,& n_place_it,& n_place_like,& n_place_from,& n_place_someone,& n_place_that,& n_place_of };
const OutgoingEdges e_place PROGMEM = { na_place, 9 };
const Node n_as_we PROGMEM = { 57, 2 };
const Node n_as_tall PROGMEM = { 110, 1 };
const Node n_as_her PROGMEM = { 56, 2 };
const Node n_as_the PROGMEM = { 6, 5 };
const Node n_as_a PROGMEM = { 40, 8 };
const Node n_as_for PROGMEM = { 116, 1 };
const Node n_as_they PROGMEM = { 137, 9 };
const Node n_as_you PROGMEM = { 19, 1 };
const Node n_as_things PROGMEM = { 165, 1 };
const Node n_as_best PROGMEM = { 12, 1 };
const Node n_as_yet PROGMEM = { 199, 2 };
const Node n_as_perfect PROGMEM = { 215, 2 };
const Node n_as_their PROGMEM = { 142, 1 };
const Node n_as_if PROGMEM = { 104, 2 };
const Node n_as_i PROGMEM = { 2, 1 };
const Node n_as_too PROGMEM = { 89, 1 };
const Node n_as_true PROGMEM = { 90, 1 };
const Node n_as_of PROGMEM = { 15, 1 };
const Node n_as_she PROGMEM = { 131, 2 };
const Node n_as_my PROGMEM = { 7, 1 };
const Node n_as_day PROGMEM = { 23, 1 };
const Node n_as_he PROGMEM = { 122, 1 };
const Node n_as_it PROGMEM = { 125, 2 };
const Node n_as_well PROGMEM = { 261, 2 };
const Node na_as[] PROGMEM = { & n_as_we,& n_as_tall,& n_as_her,& n_as_the,& n_as_a,& n_as_for,& n_as_they,& n_as_you,& n_as_things,& n_as_best,& n_as_yet,& n_as_perfect,& n_as_their,& n_as_if,& n_as_i,& n_as_too,& n_as_true,& n_as_of,& n_as_she,& n_as_my,& n_as_day,& n_as_he,& n_as_it,& n_as_well };
const OutgoingEdges e_as PROGMEM = { na_as, 24 };
const Node n_its_true PROGMEM = { 90, 1 };
const Node n_its_not PROGMEM = { 72, 1 };
const Node n_its_own PROGMEM = { 253, 1 };
const Node n_its_welcome PROGMEM = { 282, 1 };
const Node n_its_small PROGMEM = { 88, 1 };
const Node n_its_slow PROGMEM = { 185, 2 };
const Node n_its_side PROGMEM = { 256, 1 };
const Node n_its_a PROGMEM = { 40, 1 };
const Node n_its_always PROGMEM = { 156, 1 };
const Node n_its_too PROGMEM = { 89, 1 };
const Node na_its[] PROGMEM = { & n_its_true,& n_its_not,& n_its_own,& n_its_welcome,& n_its_small,& n_its_slow,& n_its_side,& n_its_a,& n_its_always,& n_its_too };
const OutgoingEdges e_its PROGMEM = { na_its, 10 };
const Node n_but_not PROGMEM = { 72, 2 };
const Node n_but_with PROGMEM = { 36, 1 };
const Node n_but_still PROGMEM = { 141, 1 };
const Node n_but_tell PROGMEM = { 169, 2 };
const Node n_but_on PROGMEM = { 21, 2 };
const Node n_but_just PROGMEM = { 189, 1 };
const Node n_but_because PROGMEM = { 226, 1 };
const Node n_but_i PROGMEM = { 2, 4 };
const Node n_but_have PROGMEM = { 8, 1 };
const Node n_but_now PROGMEM = { 257, 3 };
const Node n_but_a PROGMEM = { 40, 1 };
const Node n_but_to PROGMEM = { 5, 1 };
const Node n_but_an PROGMEM = { 146, 1 };
const Node n_but_she PROGMEM = { 131, 1 };
const Node n_but_its PROGMEM = { 70, 1 };
const Node n_but_the PROGMEM = { 6, 1 };
const Node n_but_he PROGMEM = { 122, 1 };
const Node n_but_this PROGMEM = { 22, 1 };
const Node n_but_snow PROGMEM = { 248, 1 };
const Node n_but_nothing PROGMEM = { 285, 2 };
const Node n_but_which PROGMEM = { 144, 1 };
const Node na_but[] PROGMEM = { & n_but_not,& n_but_with,& n_but_still,& n_but_tell,& n_but_on,& n_but_just,& n_but_because,& n_but_i,& n_but_have,& n_but_now,& n_but_a,& n_but_to,& n_but_an,& n_but_she,& n_but_its,& n_but_the,& n_but_he,& n_but_this,& n_but_snow,& n_but_nothing,& n_but_which };
const OutgoingEdges e_but PROGMEM = { na_but, 21 };
const Node n_not_a PROGMEM = { 40, 4 };
const Node n_not_play PROGMEM = { 164, 2 };
const Node n_not_about PROGMEM = { 186, 1 };
const Node n_not_what PROGMEM = { 179, 1 };
const Node n_not_the PROGMEM = { 6, 5 };
const Node n_not_one PROGMEM = { 81, 1 };
const Node n_not_because PROGMEM = { 226, 1 };
const Node n_not_be PROGMEM = { 28, 1 };
const Node n_not_love PROGMEM = { 34, 2 };
const Node n_not_know PROGMEM = { 172, 1 };
const Node n_not_see PROGMEM = { 64, 1 };
const Node n_not_been PROGMEM = { 138, 1 };
const Node n_not_though PROGMEM = { 251, 1 };
const Node n_not_to PROGMEM = { 5, 4 };
const Node n_not_not PROGMEM = { 72, 1 };
const Node n_not_with PROGMEM = { 36, 1 };
const Node n_not_even PROGMEM = { 246, 1 };
const Node n_not_done PROGMEM = { 269, 2 };
const Node n_not_too PROGMEM = { 89, 1 };
const Node n_not_have PROGMEM = { 8, 1 };
const Node n_not_enough PROGMEM = { 84, 2 };
const Node na_not[] PROGMEM = { & n_not_a,& n_not_play,& n_not_about,& n_not_what,& n_not_the,& n_not_one,& n_not_because,& n_not_be,& n_not_love,& n_not_know,& n_not_see,& n_not_been,& n_not_though,& n_not_to,& n_not_not,& n_not_with,& n_not_even,& n_not_done,& n_not_too,& n_not_have,& n_not_enough };
const OutgoingEdges e_not PROGMEM = { na_not, 21 };
const Node n_days_later PROGMEM = { 74, 1 };
const Node n_days_many PROGMEM = { 37, 1 };
const Node n_days_and PROGMEM = { 16, 1 };
const Node n_days_there PROGMEM = { 149, 1 };
const Node n_days_the PROGMEM = { 6, 1 };
const Node n_days_in PROGMEM = { 11, 2 };
const Node na_days[] PROGMEM = { & n_days_later,& n_days_many,& n_days_and,& n_days_there,& n_days_the,& n_days_in };
const OutgoingEdges e_days PROGMEM = { na_days, 6 };
const Node n_later_i PROGMEM = { 2, 1 };
const Node n_later_still PROGMEM = { 141, 1 };
const Node n_later_to PROGMEM = { 5, 1 };
const Node n_later_and PROGMEM = { 16, 2 };
const Node na_later[] PROGMEM = { & n_later_i,& n_later_still,& n_later_to,& n_later_and };
const OutgoingEdges e_later PROGMEM = { na_later, 4 };
const Node n_blue_the PROGMEM = { 6, 1 };
const Node n_blue_or PROGMEM = { 24, 1 };
const Node n_blue_i PROGMEM = { 2, 1 };
const Node n_blue_and PROGMEM = { 16, 1 };
const Node n_blue_sky PROGMEM = { 174, 2 };
const Node na_blue[] PROGMEM = { & n_blue_the,& n_blue_or,& n_blue_i,& n_blue_and,& n_blue_sky };
const OutgoingEdges e_blue PROGMEM = { na_blue, 5 };
const Node n_after_the PROGMEM = { 6, 1 };
const Node n_after_i PROGMEM = { 2, 1 };
const Node na_after[] PROGMEM = { & n_after_the,& n_after_i };
const OutgoingEdges e_after PROGMEM = { na_after, 2 };
const Node n_fell_from PROGMEM = { 78, 1 };
const Node n_fell_and PROGMEM = { 16, 2 };
const Node n_fell_as PROGMEM = { 69, 1 };
const Node n_fell_they PROGMEM = { 137, 1 };
const Node na_fell[] PROGMEM = { & n_fell_from,& n_fell_and,& n_fell_as,& n_fell_they };
const OutgoingEdges e_fell PROGMEM = { na_fell, 4 };
const Node n_from_my PROGMEM = { 7, 2 };
const Node n_from_they PROGMEM = { 137, 1 };
const Node n_from_the PROGMEM = { 6, 9 };
const Node n_from_an PROGMEM = { 146, 1 };
const Node n_from_which PROGMEM = { 144, 1 };
const Node n_from_here PROGMEM = { 229, 1 };
const Node n_from_this PROGMEM = { 22, 2 };
const Node n_from_her PROGMEM = { 56, 1 };
const Node n_from_a PROGMEM = { 40, 4 };
const Node n_from_th PROGMEM = { 292, 1 };
const Node n_from_have PROGMEM = { 8, 1 };
const Node n_from_people PROGMEM = { 154, 1 };
const Node n_from_his PROGMEM = { 161, 1 };
const Node na_from[] PROGMEM = { & n_from_my,& n_from_they,& n_from_the,& n_from_an,& n_from_which,& n_from_here,& n_from_this,& n_from_her,& n_from_a,& n_from_th,& n_from_have,& n_from_people,& n_from_his };
const OutgoingEdges e_from PROGMEM = { na_from, 13 };
const Node n_through_every PROGMEM = { 99, 1 };
const Node n_through_his PROGMEM = { 161, 2 };
const Node n_through_the PROGMEM = { 6, 10 };
const Node n_through_glass PROGMEM = { 243, 1 };
const Node n_through_where PROGMEM = { 200, 1 };
const Node n_through_water PROGMEM = { 207, 1 };
const Node n_through_which PROGMEM = { 144, 1 };
const Node n_through_their PROGMEM = { 142, 1 };
const Node n_through_our PROGMEM = { 203, 1 };
const Node na_through[] PROGMEM = { & n_through_every,& n_through_his,& n_through_the,& n_through_glass,& n_through_where,& n_through_water,& n_through_which,& n_through_their,& n_through_our };
const OutgoingEdges e_through PROGMEM = { na_through, 9 };
const Node n_work_one PROGMEM = { 81, 1 };
const Node n_work_or PROGMEM = { 24, 1 };
const Node n_work_had PROGMEM = { 87, 1 };
const Node n_work_is PROGMEM = { 173, 1 };
const Node na_work[] PROGMEM = { & n_work_one,& n_work_or,& n_work_had,& n_work_is };
const OutgoingEdges e_work PROGMEM = { na_work, 4 };
const Node n_one_by PROGMEM = { 94, 2 };
const Node n_one_a PROGMEM = { 40, 1 };
const Node n_one_of PROGMEM = { 15, 1 };
const Node n_one_has PROGMEM = { 126, 2 };
const Node n_one_two PROGMEM = { 210, 1 };
const Node n_one_fish PROGMEM = { 266, 1 };
const Node n_one_can PROGMEM = { 171, 1 };
const Node n_one_will PROGMEM = { 191, 1 };
const Node n_one_to PROGMEM = { 5, 2 };
const Node n_one_they PROGMEM = { 137, 1 };
const Node n_one_perfect PROGMEM = { 215, 4 };
const Node n_one_ever PROGMEM = { 212, 1 };
const Node n_one_thing PROGMEM = { 170, 1 };
const Node na_one[] PROGMEM = { & n_one_by,& n_one_a,& n_one_of,& n_one_has,& n_one_two,& n_one_fish,& n_one_can,& n_one_will,& n_one_to,& n_one_they,& n_one_perfect,& n_one_ever,& n_one_thing };
const OutgoingEdges e_one PROGMEM = { na_one, 13 };
const Node n_body_might PROGMEM = { 83, 1 };
const Node n_body_be PROGMEM = { 28, 1 };
const Node n_body_it PROGMEM = { 125, 1 };
const Node n_body_in PROGMEM = { 11, 3 };
const Node n_body_stone PROGMEM = { 234, 1 };
const Node n_body_that PROGMEM = { 26, 1 };
const Node n_body_on PROGMEM = { 21, 2 };
const Node n_body_i PROGMEM = { 2, 3 };
const Node n_body_and PROGMEM = { 16, 3 };
const Node na_body[] PROGMEM = { & n_body_might,& n_body_be,& n_body_it,& n_body_in,& n_body_stone,& n_body_that,& n_body_on,& n_body_i,& n_body_and };
const OutgoingEdges e_body PROGMEM = { na_body, 9 };
const Node n_might_be PROGMEM = { 28, 1 };
const Node n_might_see PROGMEM = { 64, 1 };
const Node n_might_think PROGMEM = { 180, 1 };
const Node n_might_as PROGMEM = { 69, 2 };
const Node na_might[] PROGMEM = { & n_might_be,& n_might_see,& n_might_think,& n_might_as };
const OutgoingEdges e_might PROGMEM = { na_might, 4 };
const Node n_enough_to PROGMEM = { 5, 8 };
const Node n_enough_of PROGMEM = { 15, 1 };
const Node na_enough[] PROGMEM = { & n_enough_to,& n_enough_of };
const OutgoingEdges e_enough PROGMEM = { na_enough, 2 };
const Node n_get_me PROGMEM = { 42, 1 };
const Node n_get_her PROGMEM = { 56, 2 };
const Node n_get_a PROGMEM = { 40, 1 };
const Node n_get_out PROGMEM = { 63, 1 };
const Node n_get_over PROGMEM = { 134, 1 };
const Node n_get_th PROGMEM = { 292, 1 };
const Node n_get_very PROGMEM = { 277, 1 };
const Node n_get_one PROGMEM = { 81, 1 };
const Node n_get_some PROGMEM = { 128, 1 };
const Node na_get[] PROGMEM = { & n_get_me,& n_get_her,& n_get_a,& n_get_out,& n_get_over,& n_get_th,& n_get_very,& n_get_one,& n_get_some };
const OutgoingEdges e_get PROGMEM = { na_get, 9 };
const Node n_then_i PROGMEM = { 2, 2 };
const Node n_then_another PROGMEM = { 25, 1 };
const Node n_then_a PROGMEM = { 40, 2 };
const Node n_then_its PROGMEM = { 70, 1 };
const Node n_then_they PROGMEM = { 137, 1 };
const Node n_then_you PROGMEM = { 19, 1 };
const Node n_then_go PROGMEM = { 183, 1 };
const Node n_then_the PROGMEM = { 6, 2 };
const Node n_then_that PROGMEM = { 26, 1 };
const Node n_then_do PROGMEM = { 163, 1 };
const Node n_then_there PROGMEM = { 149, 1 };
const Node n_then_lets PROGMEM = { 27, 2 };
const Node n_then_son PROGMEM = { 301, 1 };
const Node na_then[] PROGMEM = { & n_then_i,& n_then_another,& n_then_a,& n_then_its,& n_then_they,& n_then_you,& n_then_go,& n_then_the,& n_then_that,& n_then_do,& n_then_there,& n_then_lets,& n_then_son };
const OutgoingEdges e_then PROGMEM = { na_then, 13 };
const Node n_had_a PROGMEM = { 40, 2 };
const Node n_had_him PROGMEM = { 121, 1 };
const Node n_had_her PROGMEM = { 56, 1 };
const Node n_had_to PROGMEM = { 5, 2 };
const Node n_had_nothing PROGMEM = { 285, 1 };
const Node n_had_now PROGMEM = { 257, 1 };
const Node n_had_half PROGMEM = { 249, 1 };
const Node na_had[] PROGMEM = { & n_had_a,& n_had_him,& n_had_her,& n_had_to,& n_had_nothing,& n_had_now,& n_had_half };
const OutgoingEdges e_had PROGMEM = { na_had, 7 };
const Node n_small_and PROGMEM = { 16, 1 };
const Node n_small_for PROGMEM = { 116, 1 };
const Node na_small[] PROGMEM = { & n_small_and,& n_small_for };
const OutgoingEdges e_small PROGMEM = { na_small, 2 };
const Node n_too_that PROGMEM = { 26, 2 };
const Node n_too_many PROGMEM = { 37, 2 };
const Node n_too_good PROGMEM = { 262, 1 };
const Node n_too_high PROGMEM = { 145, 1 };
const Node n_too_am PROGMEM = { 222, 1 };
const Node n_too_must PROGMEM = { 231, 1 };
const Node n_too_long PROGMEM = { 220, 1 };
const Node n_too_small PROGMEM = { 88, 1 };
const Node n_too_this PROGMEM = { 22, 1 };
const Node na_too[] PROGMEM = { & n_too_that,& n_too_many,& n_too_good,& n_too_high,& n_too_am,& n_too_must,& n_too_long,& n_too_small,& n_too_this };
const OutgoingEdges e_too PROGMEM = { na_too, 9 };
const Node n_true_a PROGMEM = { 40, 1 };
const Node n_true_the PROGMEM = { 6, 1 };
const Node n_true_for PROGMEM = { 116, 1 };
const Node n_true_yet PROGMEM = { 199, 1 };
const Node n_true_of PROGMEM = { 15, 1 };
const Node na_true[] PROGMEM = { & n_true_a,& n_true_the,& n_true_for,& n_true_yet,& n_true_of };
const OutgoingEdges e_true PROGMEM = { na_true, 5 };
const Node n_could_do PROGMEM = { 163, 1 };
const Node n_could_get PROGMEM = { 85, 1 };
const Node n_could_find PROGMEM = { 127, 1 };
const Node n_could_just PROGMEM = { 189, 1 };
const Node n_could_escape PROGMEM = { 294, 1 };
const Node n_could_not PROGMEM = { 72, 1 };
const Node n_could_to PROGMEM = { 5, 1 };
const Node n_could_walk PROGMEM = { 270, 1 };
const Node n_could_be PROGMEM = { 28, 1 };
const Node na_could[] PROGMEM = { & n_could_do,& n_could_get,& n_could_find,& n_could_just,& n_could_escape,& n_could_not,& n_could_to,& n_could_walk,& n_could_be };
const OutgoingEdges e_could PROGMEM = { na_could, 9 };
const Node n_live_life PROGMEM = { 93, 1 };
const Node n_live_without PROGMEM = { 162, 1 };
const Node n_live_long PROGMEM = { 220, 1 };
const Node n_live_son PROGMEM = { 301, 1 };
const Node na_live[] PROGMEM = { & n_live_life,& n_live_without,& n_live_long,& n_live_son };
const OutgoingEdges e_live PROGMEM = { na_live, 4 };
const Node n_life_a PROGMEM = { 40, 1 };
const Node n_life_this PROGMEM = { 22, 1 };
const Node n_life_came PROGMEM = { 61, 1 };
const Node n_life_is PROGMEM = { 173, 1 };
const Node n_life_and PROGMEM = { 16, 1 };
const Node n_life_being PROGMEM = { 260, 2 };
const Node n_life_the PROGMEM = { 6, 1 };
const Node n_life_ PROGMEM = { 38, 1 };
const Node na_life[] PROGMEM = { & n_life_a,& n_life_this,& n_life_came,& n_life_is,& n_life_and,& n_life_being,& n_life_the,& n_life_ };
const OutgoingEdges e_life PROGMEM = { na_life, 8 };
const Node n_by_a PROGMEM = { 40, 3 };
const Node n_by_the PROGMEM = { 6, 8 };
const Node n_by_later PROGMEM = { 74, 2 };
const Node n_by_music PROGMEM = { 208, 2 };
const Node n_by_which PROGMEM = { 144, 1 };
const Node n_by_here PROGMEM = { 229, 1 };
const Node n_by_an PROGMEM = { 146, 1 };
const Node n_by_blood PROGMEM = { 205, 1 };
const Node n_by_its PROGMEM = { 70, 1 };
const Node na_by[] PROGMEM = { & n_by_a,& n_by_the,& n_by_later,& n_by_music,& n_by_which,& n_by_here,& n_by_an,& n_by_blood,& n_by_its };
const OutgoingEdges e_by PROGMEM = { na_by, 9 };
const Node n_while_america PROGMEM = { 53, 1 };
const Node n_while_all PROGMEM = { 62, 2 };
const Node n_while_the PROGMEM = { 6, 1 };
const Node na_while[] PROGMEM = { & n_while_america,& n_while_all,& n_while_the };
const OutgoingEdges e_while PROGMEM = { na_while, 3 };
const Node n_let_my PROGMEM = { 7, 2 };
const Node n_let_myself PROGMEM = { 59, 1 };
const Node n_let_me PROGMEM = { 42, 3 };
const Node n_let_them PROGMEM = { 118, 1 };
const Node n_let_it PROGMEM = { 125, 2 };
const Node n_let_its PROGMEM = { 70, 1 };
const Node n_let_the PROGMEM = { 6, 1 };
const Node n_let_you PROGMEM = { 19, 1 };
const Node na_let[] PROGMEM = { & n_let_my,& n_let_myself,& n_let_me,& n_let_them,& n_let_it,& n_let_its,& n_let_the,& n_let_you };
const OutgoingEdges e_let PROGMEM = { na_let, 8 };
const Node n_head_in PROGMEM = { 11, 1 };
const Node n_head_END PROGMEM = { 0, 1 };
const Node n_head_but PROGMEM = { 71, 1 };
const Node n_head_no PROGMEM = { 214, 1 };
const Node n_head_of PROGMEM = { 15, 1 };
const Node na_head[] PROGMEM = { & n_head_in,& n_head_END,& n_head_but,& n_head_no,& n_head_of };
const OutgoingEdges e_head PROGMEM = { na_head, 5 };
const Node n_felt_myself PROGMEM = { 59, 1 };
const Node n_felt_like PROGMEM = { 45, 1 };
const Node na_felt[] PROGMEM = { & n_felt_myself,& n_felt_like };
const OutgoingEdges e_felt PROGMEM = { na_felt, 2 };
const Node n_every_night PROGMEM = { 52, 1 };
const Node na_every[] PROGMEM = { & n_every_night };
const OutgoingEdges e_every PROGMEM = { na_every, 1 };
const Node n_loved_by PROGMEM = { 94, 1 };
const Node n_loved_more PROGMEM = { 101, 1 };
const Node na_loved[] PROGMEM = { & n_loved_by,& n_loved_more };
const OutgoingEdges e_loved PROGMEM = { na_loved, 2 };
const Node n_more_than PROGMEM = { 102, 2 };
const Node n_more_perfect PROGMEM = { 215, 1 };
const Node n_more_bent PROGMEM = { 194, 1 };
const Node n_more_stone PROGMEM = { 234, 1 };
const Node n_more_wilt PROGMEM = { 298, 1 };
const Node n_more_i PROGMEM = { 2, 1 };
const Node n_more_END PROGMEM = { 0, 1 };
const Node n_more_pain PROGMEM = { 176, 1 };
const Node n_more_with PROGMEM = { 36, 1 };
const Node n_more_one PROGMEM = { 81, 1 };
const Node na_more[] PROGMEM = { & n_more_than,& n_more_perfect,& n_more_bent,& n_more_stone,& n_more_wilt,& n_more_i,& n_more_END,& n_more_pain,& n_more_with,& n_more_one };
const OutgoingEdges e_more PROGMEM = { na_more, 10 };
const Node n_than_air PROGMEM = { 17, 1 };
const Node n_than_a PROGMEM = { 40, 1 };
const Node n_than_we PROGMEM = { 57, 1 };
const Node n_than_the PROGMEM = { 6, 3 };
const Node n_than_before PROGMEM = { 221, 1 };
const Node n_than_that PROGMEM = { 26, 1 };
const Node n_than_his PROGMEM = { 161, 1 };
const Node na_than[] PROGMEM = { & n_than_air,& n_than_a,& n_than_we,& n_than_the,& n_than_before,& n_than_that,& n_than_his };
const OutgoingEdges e_than PROGMEM = { na_than, 7 };
const Node n_fear_of PROGMEM = { 15, 1 };
const Node n_fear_that PROGMEM = { 26, 1 };
const Node n_fear_no PROGMEM = { 214, 1 };
const Node n_fear_then PROGMEM = { 86, 1 };
const Node na_fear[] PROGMEM = { & n_fear_of,& n_fear_that,& n_fear_no,& n_fear_then };
const OutgoingEdges e_fear PROGMEM = { na_fear, 4 };
const Node n_if_this PROGMEM = { 22, 2 };
const Node n_if_america PROGMEM = { 53, 1 };
const Node n_if_you PROGMEM = { 19, 5 };
const Node n_if_someone PROGMEM = { 265, 1 };
const Node n_if_youre PROGMEM = { 274, 1 };
const Node n_if_it PROGMEM = { 125, 1 };
const Node n_if_we PROGMEM = { 57, 1 };
const Node n_if_truth PROGMEM = { 187, 1 };
const Node n_if_always PROGMEM = { 156, 1 };
const Node n_if_i PROGMEM = { 2, 4 };
const Node n_if_there PROGMEM = { 149, 1 };
const Node n_if_the PROGMEM = { 6, 1 };
const Node n_if_not PROGMEM = { 72, 1 };
const Node na_if[] PROGMEM = { & n_if_this,& n_if_america,& n_if_you,& n_if_someone,& n_if_youre,& n_if_it,& n_if_we,& n_if_truth,& n_if_always,& n_if_i,& n_if_there,& n_if_the,& n_if_not };
const OutgoingEdges e_if PROGMEM = { na_if, 13 };
const Node n_was_going PROGMEM = { 106, 2 };
const Node n_was_an PROGMEM = { 146, 1 };
const Node n_was_a PROGMEM = { 40, 5 };
const Node n_was_always PROGMEM = { 156, 2 };
const Node n_was_everything PROGMEM = { 32, 1 };
const Node n_was_the PROGMEM = { 6, 3 };
const Node n_was_what PROGMEM = { 179, 2 };
const Node n_was_ever PROGMEM = { 212, 4 };
const Node n_was_there PROGMEM = { 149, 3 };
const Node n_was_tall PROGMEM = { 110, 1 };
const Node n_was_dead PROGMEM = { 227, 1 };
const Node n_was_of PROGMEM = { 15, 1 };
const Node n_was_in PROGMEM = { 11, 1 };
const Node n_was_something PROGMEM = { 192, 1 };
const Node n_was_all PROGMEM = { 62, 2 };
const Node n_was_just PROGMEM = { 189, 1 };
const Node n_was_left PROGMEM = { 123, 1 };
const Node n_was_one PROGMEM = { 81, 1 };
const Node n_was_my PROGMEM = { 7, 1 };
const Node n_was_he PROGMEM = { 122, 1 };
const Node n_was_old PROGMEM = { 65, 2 };
const Node na_was[] PROGMEM = { & n_was_going,& n_was_an,& n_was_a,& n_was_always,& n_was_everything,& n_was_the,& n_was_what,& n_was_ever,& n_was_there,& n_was_tall,& n_was_dead,& n_was_of,& n_was_in,& n_was_something,& n_was_all,& n_was_just,& n_was_left,& n_was_one,& n_was_my,& n_was_he,& n_was_old };
const OutgoingEdges e_was PROGMEM = { na_was, 21 };
const Node n_going_to PROGMEM = { 5, 3 };
const Node n_going_into PROGMEM = { 33, 1 };
const Node n_going_by PROGMEM = { 94, 1 };
const Node n_going_well PROGMEM = { 261, 2 };
const Node na_going[] PROGMEM = { & n_going_to,& n_going_into,& n_going_by,& n_going_well };
const OutgoingEdges e_going PROGMEM = { na_going, 4 };
const Node n_against_the PROGMEM = { 6, 5 };
const Node n_against_a PROGMEM = { 40, 1 };
const Node n_against_his PROGMEM = { 161, 1 };
const Node na_against[] PROGMEM = { & n_against_the,& n_against_a,& n_against_his };
const OutgoingEdges e_against PROGMEM = { na_against, 3 };
const Node n_would_stand PROGMEM = { 109, 1 };
const Node n_would_have PROGMEM = { 8, 3 };
const Node n_would_get PROGMEM = { 85, 1 };
const Node n_would_love PROGMEM = { 34, 1 };
const Node n_would_not PROGMEM = { 72, 1 };
const Node n_would_you PROGMEM = { 19, 1 };
const Node na_would[] PROGMEM = { & n_would_stand,& n_would_have,& n_would_get,& n_would_love,& n_would_not,& n_would_you };
const OutgoingEdges e_would PROGMEM = { na_would, 6 };
const Node n_stand_as PROGMEM = { 69, 1 };
const Node n_stand_on PROGMEM = { 21, 2 };
const Node n_stand_and PROGMEM = { 16, 2 };
const Node n_stand_just PROGMEM = { 189, 1 };
const Node na_stand[] PROGMEM = { & n_stand_as,& n_stand_on,& n_stand_and,& n_stand_just };
const OutgoingEdges e_stand PROGMEM = { na_stand, 4 };
const Node n_tall_as PROGMEM = { 69, 1 };
const Node n_tall_and PROGMEM = { 16, 1 };
const Node na_tall[] PROGMEM = { & n_tall_as,& n_tall_and };
const OutgoingEdges e_tall PROGMEM = { na_tall, 2 };
const Node n_bright_and PROGMEM = { 16, 1 };
const Node n_bright_with PROGMEM = { 36, 1 };
const Node n_bright_as PROGMEM = { 69, 1 };
const Node na_bright[] PROGMEM = { & n_bright_and,& n_bright_with,& n_bright_as };
const OutgoingEdges e_bright PROGMEM = { na_bright, 3 };
const Node n_land_of PROGMEM = { 15, 1 };
const Node n_land_this PROGMEM = { 22, 1 };
const Node n_land_where PROGMEM = { 200, 1 };
const Node n_land_and PROGMEM = { 16, 1 };
const Node n_land_on PROGMEM = { 21, 1 };
const Node n_land_away PROGMEM = { 133, 1 };
const Node n_land_was PROGMEM = { 105, 1 };
const Node na_land[] PROGMEM = { & n_land_of,& n_land_this,& n_land_where,& n_land_and,& n_land_on,& n_land_away,& n_land_was };
const OutgoingEdges e_land PROGMEM = { na_land, 7 };
const Node n_home_and PROGMEM = { 16, 2 };
const Node n_home_to PROGMEM = { 5, 2 };
const Node n_home_get PROGMEM = { 85, 1 };
const Node n_home_without PROGMEM = { 162, 1 };
const Node n_home_in PROGMEM = { 11, 1 };
const Node n_home_of PROGMEM = { 15, 1 };
const Node n_home_what PROGMEM = { 179, 1 };
const Node na_home[] PROGMEM = { & n_home_and,& n_home_to,& n_home_get,& n_home_without,& n_home_in,& n_home_of,& n_home_what };
const OutgoingEdges e_home PROGMEM = { na_home, 7 };
const Node n_looked_in PROGMEM = { 11, 1 };
const Node n_looked_at PROGMEM = { 155, 4 };
const Node n_looked_so PROGMEM = { 120, 1 };
const Node na_looked[] PROGMEM = { & n_looked_in,& n_looked_at,& n_looked_so };
const OutgoingEdges e_looked PROGMEM = { na_looked, 3 };
const Node n_words_of PROGMEM = { 15, 1 };
const Node n_words_as PROGMEM = { 69, 1 };
const Node n_words_before PROGMEM = { 221, 1 };
const Node n_words_all PROGMEM = { 62, 1 };
const Node n_words_out PROGMEM = { 63, 1 };
const Node n_words_slow PROGMEM = { 185, 1 };
const Node n_words_from PROGMEM = { 78, 2 };
const Node na_words[] PROGMEM = { & n_words_of,& n_words_as,& n_words_before,& n_words_all,& n_words_out,& n_words_slow,& n_words_from };
const OutgoingEdges e_words PROGMEM = { na_words, 7 };
const Node n_for_this PROGMEM = { 22, 3 };
const Node n_for_them PROGMEM = { 118, 1 };
const Node n_for_the PROGMEM = { 6, 14 };
const Node n_for_truth PROGMEM = { 187, 2 };
const Node n_for_something PROGMEM = { 192, 1 };
const Node n_for_little PROGMEM = { 213, 2 };
const Node n_for_men PROGMEM = { 143, 1 };
const Node n_for_a PROGMEM = { 40, 4 };
const Node n_for_love PROGMEM = { 34, 1 };
const Node n_for_sleep PROGMEM = { 197, 1 };
const Node n_for_dreams PROGMEM = { 284, 1 };
const Node n_for_it PROGMEM = { 125, 1 };
const Node n_for_many PROGMEM = { 37, 1 };
const Node n_for_all PROGMEM = { 62, 1 };
const Node n_for_he PROGMEM = { 122, 1 };
const Node n_for_END PROGMEM = { 0, 1 };
const Node n_for_i PROGMEM = { 2, 2 };
const Node n_for_his PROGMEM = { 161, 1 };
const Node n_for_one PROGMEM = { 81, 1 };
const Node n_for_me PROGMEM = { 42, 1 };
const Node n_for_another PROGMEM = { 25, 1 };
const Node n_for_touch PROGMEM = { 259, 1 };
const Node n_for_our PROGMEM = { 203, 1 };
const Node na_for[] PROGMEM = { & n_for_this,& n_for_them,& n_for_the,& n_for_truth,& n_for_something,& n_for_little,& n_for_men,& n_for_a,& n_for_love,& n_for_sleep,& n_for_dreams,& n_for_it,& n_for_many,& n_for_all,& n_for_he,& n_for_END,& n_for_i,& n_for_his,& n_for_one,& n_for_me,& n_for_another,& n_for_touch,& n_for_our };
const OutgoingEdges e_for PROGMEM = { na_for, 23 };
const Node n_o_the PROGMEM = { 6, 1 };
const Node n_o_no PROGMEM = { 214, 1 };
const Node n_o_love PROGMEM = { 34, 2 };
const Node na_o[] PROGMEM = { & n_o_the,& n_o_no,& n_o_love };
const OutgoingEdges e_o PROGMEM = { na_o, 3 };
const Node n_them_to PROGMEM = { 5, 1 };
const Node n_them_an PROGMEM = { 146, 1 };
const Node n_them_all PROGMEM = { 62, 1 };
const Node n_them_left PROGMEM = { 123, 1 };
const Node n_them_going PROGMEM = { 106, 1 };
const Node n_them_up PROGMEM = { 58, 1 };
const Node n_them_then PROGMEM = { 86, 1 };
const Node na_them[] PROGMEM = { & n_them_to,& n_them_an,& n_them_all,& n_them_left,& n_them_going,& n_them_up,& n_them_then };
const OutgoingEdges e_them PROGMEM = { na_them, 7 };
const Node n_eyes_but PROGMEM = { 71, 1 };
const Node n_eyes_land PROGMEM = { 112, 1 };
const Node n_eyes_and PROGMEM = { 16, 1 };
const Node n_eyes_into PROGMEM = { 33, 1 };
const Node n_eyes_dont PROGMEM = { 3, 1 };
const Node na_eyes[] PROGMEM = { & n_eyes_but,& n_eyes_land,& n_eyes_and,& n_eyes_into,& n_eyes_dont };
const OutgoingEdges e_eyes PROGMEM = { na_eyes, 5 };
const Node n_so_i PROGMEM = { 2, 2 };
const Node n_so_he PROGMEM = { 122, 2 };
const Node n_so_on PROGMEM = { 21, 2 };
const Node n_so_their PROGMEM = { 142, 1 };
const Node n_so_many PROGMEM = { 37, 1 };
const Node n_so_long PROGMEM = { 220, 1 };
const Node n_so_all PROGMEM = { 62, 1 };
const Node n_so_that PROGMEM = { 26, 1 };
const Node n_so_well PROGMEM = { 261, 1 };
const Node n_so_then PROGMEM = { 86, 2 };
const Node n_so_there PROGMEM = { 149, 2 };
const Node n_so_soft PROGMEM = { 276, 1 };
const Node na_so[] PROGMEM = { & n_so_i,& n_so_he,& n_so_on,& n_so_their,& n_so_many,& n_so_long,& n_so_all,& n_so_that,& n_so_well,& n_so_then,& n_so_there,& n_so_soft };
const OutgoingEdges e_so PROGMEM = { na_so, 12 };
const Node n_him_he PROGMEM = { 122, 1 };
const Node n_him_its PROGMEM = { 70, 1 };
const Node n_him_in PROGMEM = { 11, 1 };
const Node n_him_best PROGMEM = { 12, 1 };
const Node n_him_for PROGMEM = { 116, 1 };
const Node n_him_with PROGMEM = { 36, 1 };
const Node n_him_and PROGMEM = { 16, 2 };
const Node n_him_our PROGMEM = { 203, 2 };
const Node n_him_by PROGMEM = { 94, 1 };
const Node na_him[] PROGMEM = { & n_him_he,& n_him_its,& n_him_in,& n_him_best,& n_him_for,& n_him_with,& n_him_and,& n_him_our,& n_him_by };
const OutgoingEdges e_him PROGMEM = { na_him, 9 };
const Node n_he_would PROGMEM = { 108, 1 };
const Node n_he_was PROGMEM = { 105, 7 };
const Node n_he_said PROGMEM = { 158, 2 };
const Node n_he_rode PROGMEM = { 247, 1 };
const Node n_he_could PROGMEM = { 91, 4 };
const Node n_he_really PROGMEM = { 190, 1 };
const Node n_he_felt PROGMEM = { 98, 1 };
const Node n_he_also PROGMEM = { 255, 1 };
const Node n_he_loved PROGMEM = { 100, 1 };
const Node n_he_can PROGMEM = { 171, 1 };
const Node n_he_had PROGMEM = { 87, 1 };
const Node n_he_salmon PROGMEM = { 302, 1 };
const Node n_he_and PROGMEM = { 16, 1 };
const Node n_he_made PROGMEM = { 211, 1 };
const Node n_he_my PROGMEM = { 7, 1 };
const Node na_he[] PROGMEM = { & n_he_would,& n_he_was,& n_he_said,& n_he_rode,& n_he_could,& n_he_really,& n_he_felt,& n_he_also,& n_he_loved,& n_he_can,& n_he_had,& n_he_salmon,& n_he_and,& n_he_made,& n_he_my };
const OutgoingEdges e_he PROGMEM = { na_he, 15 };
const Node n_left_as PROGMEM = { 69, 1 };
const Node n_left_them PROGMEM = { 118, 1 };
const Node n_left_it PROGMEM = { 125, 1 };
const Node n_left_of PROGMEM = { 15, 4 };
const Node n_left_the PROGMEM = { 6, 1 };
const Node n_left_me PROGMEM = { 42, 1 };
const Node na_left[] PROGMEM = { & n_left_as,& n_left_them,& n_left_it,& n_left_of,& n_left_the,& n_left_me };
const OutgoingEdges e_left PROGMEM = { na_left, 6 };
const Node n_mind_the PROGMEM = { 6, 3 };
const Node n_mind_to PROGMEM = { 5, 1 };
const Node n_mind_your PROGMEM = { 46, 2 };
const Node n_mind_and PROGMEM = { 16, 2 };
const Node n_mind_at PROGMEM = { 155, 1 };
const Node na_mind[] PROGMEM = { & n_mind_the,& n_mind_to,& n_mind_your,& n_mind_and,& n_mind_at };
const OutgoingEdges e_mind PROGMEM = { na_mind, 5 };
const Node n_it_has PROGMEM = { 126, 2 };
const Node n_it_was PROGMEM = { 105, 8 };
const Node n_it_true PROGMEM = { 90, 1 };
const Node n_it_out PROGMEM = { 63, 4 };
const Node n_it_said PROGMEM = { 158, 3 };
const Node n_it_for PROGMEM = { 116, 3 };
const Node n_it_to PROGMEM = { 5, 1 };
const Node n_it_is PROGMEM = { 173, 9 };
const Node n_it_we PROGMEM = { 57, 2 };
const Node n_it_the PROGMEM = { 6, 1 };
const Node n_it_work PROGMEM = { 80, 1 };
const Node n_it_my PROGMEM = { 7, 2 };
const Node n_it_but PROGMEM = { 71, 1 };
const Node n_it_stop PROGMEM = { 263, 1 };
const Node n_it_took PROGMEM = { 54, 1 };
const Node n_it_looked PROGMEM = { 114, 1 };
const Node n_it_dreams PROGMEM = { 284, 1 };
const Node n_it_there PROGMEM = { 149, 1 };
const Node n_it_matt PROGMEM = { 288, 1 };
const Node n_it_in PROGMEM = { 11, 2 };
const Node n_it_over PROGMEM = { 134, 3 };
const Node n_it_all PROGMEM = { 62, 1 };
const Node n_it_again PROGMEM = { 188, 1 };
const Node n_it_and PROGMEM = { 16, 1 };
const Node n_it_if PROGMEM = { 104, 1 };
const Node n_it_into PROGMEM = { 33, 1 };
const Node n_it_were PROGMEM = { 20, 1 };
const Node n_it_will PROGMEM = { 191, 1 };
const Node n_it_no PROGMEM = { 214, 1 };
const Node n_it_i PROGMEM = { 2, 1 };
const Node n_it_from PROGMEM = { 78, 1 };
const Node na_it[] PROGMEM = { & n_it_has,& n_it_was,& n_it_true,& n_it_out,& n_it_said,& n_it_for,& n_it_to,& n_it_is,& n_it_we,& n_it_the,& n_it_work,& n_it_my,& n_it_but,& n_it_stop,& n_it_took,& n_it_looked,& n_it_dreams,& n_it_there,& n_it_matt,& n_it_in,& n_it_over,& n_it_all,& n_it_again,& n_it_and,& n_it_if,& n_it_into,& n_it_were,& n_it_will,& n_it_no,& n_it_i,& n_it_from };
const OutgoingEdges e_it PROGMEM = { na_it, 31 };
const Node n_has_a PROGMEM = { 40, 4 };
const Node n_has_her PROGMEM = { 56, 2 };
const Node n_has_to PROGMEM = { 5, 1 };
const Node na_has[] PROGMEM = { & n_has_a,& n_has_her,& n_has_to };
const OutgoingEdges e_has PROGMEM = { na_has, 3 };
const Node n_find_some PROGMEM = { 128, 1 };
const Node n_find_me PROGMEM = { 42, 2 };
const Node n_find_it PROGMEM = { 125, 1 };
const Node na_find[] PROGMEM = { & n_find_some,& n_find_me,& n_find_it };
const OutgoingEdges e_find PROGMEM = { na_find, 3 };
const Node n_some_way PROGMEM = { 13, 2 };
const Node n_some_fish PROGMEM = { 266, 1 };
const Node n_some_are PROGMEM = { 166, 4 };
const Node n_some_kind PROGMEM = { 51, 1 };
const Node n_some_other PROGMEM = { 31, 1 };
const Node n_some_more PROGMEM = { 101, 1 };
const Node n_some_to PROGMEM = { 5, 2 };
const Node na_some[] PROGMEM = { & n_some_way,& n_some_fish,& n_some_are,& n_some_kind,& n_some_other,& n_some_more,& n_some_to };
const OutgoingEdges e_some PROGMEM = { na_some, 7 };
const Node n_light_and PROGMEM = { 16, 5 };
const Node n_light_so PROGMEM = { 120, 1 };
const Node n_light_even PROGMEM = { 246, 1 };
const Node n_light_is PROGMEM = { 173, 2 };
const Node n_light_will PROGMEM = { 191, 1 };
const Node n_light_touch PROGMEM = { 259, 1 };
const Node n_light_this PROGMEM = { 22, 1 };
const Node n_light_END PROGMEM = { 0, 1 };
const Node n_light_through PROGMEM = { 79, 2 };
const Node n_light_made PROGMEM = { 211, 2 };
const Node n_light_of PROGMEM = { 15, 2 };
const Node n_light_which PROGMEM = { 144, 1 };
const Node na_light[] PROGMEM = { & n_light_and,& n_light_so,& n_light_even,& n_light_is,& n_light_will,& n_light_touch,& n_light_this,& n_light_END,& n_light_through,& n_light_made,& n_light_of,& n_light_which };
const OutgoingEdges e_light PROGMEM = { na_light, 12 };
const Node n_hand_she PROGMEM = { 131, 1 };
const Node n_hand_the PROGMEM = { 6, 1 };
const Node n_hand_out PROGMEM = { 63, 2 };
const Node n_hand_dear PROGMEM = { 283, 1 };
const Node na_hand[] PROGMEM = { & n_hand_she,& n_hand_the,& n_hand_out,& n_hand_dear };
const OutgoingEdges e_hand PROGMEM = { na_hand, 4 };
const Node n_she_turned PROGMEM = { 132, 1 };
const Node n_she_was PROGMEM = { 105, 1 };
const Node n_she_just PROGMEM = { 189, 1 };
const Node n_she_let PROGMEM = { 96, 1 };
const Node n_she_has PROGMEM = { 126, 1 };
const Node n_she_get PROGMEM = { 85, 1 };
const Node n_she_a PROGMEM = { 40, 1 };
const Node na_she[] PROGMEM = { & n_she_turned,& n_she_was,& n_she_just,& n_she_let,& n_she_has,& n_she_get,& n_she_a };
const OutgoingEdges e_she PROGMEM = { na_she, 7 };
const Node n_turned_away PROGMEM = { 133, 1 };
const Node n_turned_into PROGMEM = { 33, 2 };
const Node n_turned_my PROGMEM = { 7, 1 };
const Node n_turned_in PROGMEM = { 11, 1 };
const Node n_turned_to PROGMEM = { 5, 1 };
const Node n_turned_through PROGMEM = { 79, 1 };
const Node na_turned[] PROGMEM = { & n_turned_away,& n_turned_into,& n_turned_my,& n_turned_in,& n_turned_to,& n_turned_through };
const OutgoingEdges e_turned PROGMEM = { na_turned, 6 };
const Node n_away_but PROGMEM = { 71, 1 };
const Node n_away_when PROGMEM = { 49, 1 };
const Node n_away_from PROGMEM = { 78, 2 };
const Node na_away[] PROGMEM = { & n_away_but,& n_away_when,& n_away_from };
const OutgoingEdges e_away PROGMEM = { na_away, 3 };
const Node n_over_her PROGMEM = { 56, 1 };
const Node n_over_all PROGMEM = { 62, 1 };
const Node n_over_the PROGMEM = { 6, 1 };
const Node n_over_no PROGMEM = { 214, 1 };
const Node n_over_your PROGMEM = { 46, 1 };
const Node n_over_there PROGMEM = { 149, 1 };
const Node n_over_around PROGMEM = { 245, 1 };
const Node na_over[] PROGMEM = { & n_over_her,& n_over_all,& n_over_the,& n_over_no,& n_over_your,& n_over_there,& n_over_around };
const OutgoingEdges e_over PROGMEM = { na_over, 7 };
const Node n_full_of PROGMEM = { 15, 3 };
const Node n_full_time PROGMEM = { 151, 1 };
const Node na_full[] PROGMEM = { & n_full_of,& n_full_time };
const OutgoingEdges e_full PROGMEM = { na_full, 2 };
const Node n_how_they PROGMEM = { 137, 2 };
const Node n_how_can PROGMEM = { 171, 1 };
const Node n_how_the PROGMEM = { 6, 1 };
const Node n_how_my PROGMEM = { 7, 1 };
const Node n_how_many PROGMEM = { 37, 1 };
const Node n_how_you PROGMEM = { 19, 1 };
const Node n_how_she PROGMEM = { 131, 1 };
const Node n_how_like PROGMEM = { 45, 1 };
const Node n_how_he PROGMEM = { 122, 1 };
const Node n_how_come PROGMEM = { 198, 1 };
const Node n_how_to PROGMEM = { 5, 2 };
const Node n_how_dear PROGMEM = { 283, 1 };
const Node n_how_far PROGMEM = { 193, 1 };
const Node na_how[] PROGMEM = { & n_how_they,& n_how_can,& n_how_the,& n_how_my,& n_how_many,& n_how_you,& n_how_she,& n_how_like,& n_how_he,& n_how_come,& n_how_to,& n_how_dear,& n_how_far };
const OutgoingEdges e_how PROGMEM = { na_how, 13 };
const Node n_they_said PROGMEM = { 158, 5 };
const Node n_they_are PROGMEM = { 166, 6 };
const Node n_they_really PROGMEM = { 190, 1 };
const Node n_they_were PROGMEM = { 20, 2 };
const Node n_they_looked PROGMEM = { 114, 1 };
const Node n_they_know PROGMEM = { 172, 1 };
const Node n_they_also PROGMEM = { 255, 1 };
const Node n_they_rode PROGMEM = { 247, 2 };
const Node n_they_turned PROGMEM = { 132, 1 };
const Node n_they_that PROGMEM = { 26, 1 };
const Node n_they_made PROGMEM = { 211, 2 };
const Node n_they_go PROGMEM = { 183, 1 };
const Node n_they_would PROGMEM = { 108, 1 };
const Node n_they_do PROGMEM = { 163, 1 };
const Node n_they_will PROGMEM = { 191, 2 };
const Node na_they[] PROGMEM = { & n_they_said,& n_they_are,& n_they_really,& n_they_were,& n_they_looked,& n_they_know,& n_they_also,& n_they_rode,& n_they_turned,& n_they_that,& n_they_made,& n_they_go,& n_they_would,& n_they_do,& n_they_will };
const OutgoingEdges e_they PROGMEM = { na_they, 15 };
const Node n_been_here PROGMEM = { 229, 1 };
const Node n_been_that PROGMEM = { 26, 1 };
const Node n_been_he PROGMEM = { 122, 1 };
const Node n_been_on PROGMEM = { 21, 1 };
const Node n_been_an PROGMEM = { 146, 1 };
const Node na_been[] PROGMEM = { & n_been_here,& n_been_that,& n_been_he,& n_been_on,& n_been_an };
const OutgoingEdges e_been PROGMEM = { na_been, 5 };
const Node n_lost_a PROGMEM = { 40, 1 };
const Node n_lost_in PROGMEM = { 11, 1 };
const Node n_lost_just PROGMEM = { 189, 1 };
const Node n_lost_and PROGMEM = { 16, 1 };
const Node na_lost[] PROGMEM = { & n_lost_a,& n_lost_in,& n_lost_just,& n_lost_and };
const OutgoingEdges e_lost PROGMEM = { na_lost, 4 };
const Node n_these_are PROGMEM = { 166, 1 };
const Node na_these[] PROGMEM = { & n_these_are };
const OutgoingEdges e_these PROGMEM = { na_these, 1 };
const Node n_still_he PROGMEM = { 122, 1 };
const Node n_still_though PROGMEM = { 251, 1 };
const Node n_still_i PROGMEM = { 2, 2 };
const Node n_still_wind PROGMEM = { 295, 1 };
const Node n_still_might PROGMEM = { 83, 2 };
const Node n_still_in PROGMEM = { 11, 1 };
const Node na_still[] PROGMEM = { & n_still_he,& n_still_though,& n_still_i,& n_still_wind,& n_still_might,& n_still_in };
const OutgoingEdges e_still PROGMEM = { na_still, 6 };
const Node n_their_last PROGMEM = { 147, 1 };
const Node n_their_being PROGMEM = { 260, 1 };
const Node n_their_own PROGMEM = { 253, 2 };
const Node n_their_eyes PROGMEM = { 119, 1 };
const Node na_their[] PROGMEM = { & n_their_last,& n_their_being,& n_their_own,& n_their_eyes };
const OutgoingEdges e_their PROGMEM = { na_their, 4 };
const Node n_men_nor PROGMEM = { 238, 1 };
const Node n_men_of PROGMEM = { 15, 1 };
const Node n_men_who PROGMEM = { 254, 2 };
const Node na_men[] PROGMEM = { & n_men_nor,& n_men_of,& n_men_who };
const OutgoingEdges e_men PROGMEM = { na_men, 3 };
const Node n_which_they PROGMEM = { 137, 1 };
const Node n_which_we PROGMEM = { 57, 1 };
const Node n_which_there PROGMEM = { 149, 1 };
const Node n_which_to PROGMEM = { 5, 1 };
const Node n_which_is PROGMEM = { 173, 1 };
const Node n_which_well PROGMEM = { 261, 1 };
const Node n_which_he PROGMEM = { 122, 3 };
const Node n_which_was PROGMEM = { 105, 1 };
const Node n_which_i PROGMEM = { 2, 3 };
const Node n_which_son PROGMEM = { 301, 1 };
const Node na_which[] PROGMEM = { & n_which_they,& n_which_we,& n_which_there,& n_which_to,& n_which_is,& n_which_well,& n_which_he,& n_which_was,& n_which_i,& n_which_son };
const OutgoingEdges e_which PROGMEM = { na_which, 10 };
const Node n_high_above PROGMEM = { 184, 1 };
const Node na_high[] PROGMEM = { & n_high_above };
const OutgoingEdges e_high PROGMEM = { na_high, 1 };
const Node n_an_old PROGMEM = { 65, 1 };
const Node na_an[] PROGMEM = { & n_an_old };
const OutgoingEdges e_an PROGMEM = { na_an, 1 };
const Node n_last_and PROGMEM = { 16, 2 };
const Node na_last[] PROGMEM = { & n_last_and };
const OutgoingEdges e_last PROGMEM = { na_last, 1 };
const Node n_those_days PROGMEM = { 73, 2 };
const Node n_those_that PROGMEM = { 26, 2 };
const Node n_those_things PROGMEM = { 165, 1 };
const Node n_those_trees PROGMEM = { 217, 1 };
const Node n_those_people PROGMEM = { 154, 1 };
const Node n_those_words PROGMEM = { 115, 1 };
const Node na_those[] PROGMEM = { & n_those_days,& n_those_that,& n_those_things,& n_those_trees,& n_those_people,& n_those_words };
const OutgoingEdges e_those PROGMEM = { na_those, 6 };
const Node n_there_was PROGMEM = { 105, 3 };
const Node n_there_where PROGMEM = { 200, 5 };
const Node n_there_END PROGMEM = { 0, 2 };
const Node n_there_is PROGMEM = { 173, 4 };
const Node n_there_are PROGMEM = { 166, 2 };
const Node n_there_dead PROGMEM = { 227, 1 };
const Node n_there_a PROGMEM = { 40, 1 };
const Node n_there_then PROGMEM = { 86, 1 };
const Node n_there_and PROGMEM = { 16, 1 };
const Node n_there_at PROGMEM = { 155, 1 };
const Node n_there_about PROGMEM = { 186, 1 };
const Node n_there_were PROGMEM = { 20, 1 };
const Node n_there_to PROGMEM = { 5, 1 };
const Node n_there_he PROGMEM = { 122, 2 };
const Node n_there_may PROGMEM = { 281, 1 };
const Node na_there[] PROGMEM = { & n_there_was,& n_there_where,& n_there_END,& n_there_is,& n_there_are,& n_there_dead,& n_there_a,& n_there_then,& n_there_and,& n_there_at,& n_there_about,& n_there_were,& n_there_to,& n_there_he,& n_there_may };
const OutgoingEdges e_there PROGMEM = { na_there, 15 };
const Node n_first_time PROGMEM = { 151, 1 };
const Node n_first_the PROGMEM = { 6, 1 };
const Node n_first_yu PROGMEM = { 293, 1 };
const Node n_first_years PROGMEM = { 219, 1 };
const Node na_first[] PROGMEM = { & n_first_time,& n_first_the,& n_first_yu,& n_first_years };
const OutgoingEdges e_first PROGMEM = { na_first, 4 };
const Node n_time_END PROGMEM = { 0, 1 };
const Node n_time_i PROGMEM = { 2, 1 };
const Node n_time_to PROGMEM = { 5, 1 };
const Node n_time_whose PROGMEM = { 280, 1 };
const Node n_time_for PROGMEM = { 116, 1 };
const Node na_time[] PROGMEM = { & n_time_END,& n_time_i,& n_time_to,& n_time_whose,& n_time_for };
const OutgoingEdges e_time PROGMEM = { na_time, 5 };
const Node n_went_down PROGMEM = { 153, 1 };
const Node n_went_without PROGMEM = { 162, 1 };
const Node n_went_home PROGMEM = { 113, 1 };
const Node n_went_we PROGMEM = { 57, 2 };
const Node na_went[] PROGMEM = { & n_went_down,& n_went_without,& n_went_home,& n_went_we };
const OutgoingEdges e_went PROGMEM = { na_went, 4 };
const Node n_down_long PROGMEM = { 220, 1 };
const Node n_down_by PROGMEM = { 94, 1 };
const Node n_down_her PROGMEM = { 56, 1 };
const Node n_down_the PROGMEM = { 6, 2 };
const Node n_down_i PROGMEM = { 2, 1 };
const Node n_down_there PROGMEM = { 149, 1 };
const Node n_down_stone PROGMEM = { 234, 1 };
const Node n_down_in PROGMEM = { 11, 1 };
const Node n_down_when PROGMEM = { 49, 1 };
const Node n_down_those PROGMEM = { 148, 1 };
const Node n_down_to PROGMEM = { 5, 2 };
const Node n_down_half PROGMEM = { 249, 2 };
const Node na_down[] PROGMEM = { & n_down_long,& n_down_by,& n_down_her,& n_down_the,& n_down_i,& n_down_there,& n_down_stone,& n_down_in,& n_down_when,& n_down_those,& n_down_to,& n_down_half };
const OutgoingEdges e_down PROGMEM = { na_down, 12 };
const Node n_people_on PROGMEM = { 21, 1 };
const Node n_people_like PROGMEM = { 45, 1 };
const Node n_people_there PROGMEM = { 149, 1 };
const Node n_people_who PROGMEM = { 254, 2 };
const Node n_people_know PROGMEM = { 172, 1 };
const Node na_people[] PROGMEM = { & n_people_on,& n_people_like,& n_people_there,& n_people_who,& n_people_know };
const OutgoingEdges e_people PROGMEM = { na_people, 5 };
const Node n_at_him PROGMEM = { 121, 1 };
const Node n_at_the PROGMEM = { 6, 9 };
const Node n_at_night PROGMEM = { 52, 2 };
const Node n_at_me PROGMEM = { 42, 2 };
const Node n_at_his PROGMEM = { 161, 2 };
const Node n_at_its PROGMEM = { 70, 1 };
const Node n_at_home PROGMEM = { 113, 1 };
const Node n_at_her PROGMEM = { 56, 1 };
const Node n_at_with PROGMEM = { 36, 2 };
const Node n_at_all PROGMEM = { 62, 1 };
const Node n_at_first PROGMEM = { 150, 1 };
const Node n_at_hand PROGMEM = { 130, 2 };
const Node n_at_last PROGMEM = { 147, 3 };
const Node n_at_my PROGMEM = { 7, 1 };
const Node n_at_under PROGMEM = { 48, 1 };
const Node n_at_four PROGMEM = { 290, 4 };
const Node n_at_it PROGMEM = { 125, 2 };
const Node na_at[] PROGMEM = { & n_at_him,& n_at_the,& n_at_night,& n_at_me,& n_at_his,& n_at_its,& n_at_home,& n_at_her,& n_at_with,& n_at_all,& n_at_first,& n_at_hand,& n_at_last,& n_at_my,& n_at_under,& n_at_four,& n_at_it };
const OutgoingEdges e_at PROGMEM = { na_at, 17 };
const Node n_always_human PROGMEM = { 157, 1 };
const Node n_always_and PROGMEM = { 16, 1 };
const Node n_always_just PROGMEM = { 189, 1 };
const Node n_always_so PROGMEM = { 120, 1 };
const Node na_always[] PROGMEM = { & n_always_human,& n_always_and,& n_always_just,& n_always_so };
const OutgoingEdges e_always PROGMEM = { na_always, 4 };
const Node n_human_when PROGMEM = { 49, 1 };
const Node n_human_and PROGMEM = { 16, 1 };
const Node n_human_love PROGMEM = { 34, 1 };
const Node na_human[] PROGMEM = { & n_human_when,& n_human_and,& n_human_love };
const OutgoingEdges e_human PROGMEM = { na_human, 3 };
const Node n_said_you PROGMEM = { 19, 2 };
const Node n_said_go PROGMEM = { 183, 1 };
const Node n_said_on PROGMEM = { 21, 2 };
const Node n_said_into PROGMEM = { 33, 1 };
const Node n_said_his PROGMEM = { 161, 1 };
const Node n_said_never PROGMEM = { 218, 2 };
const Node na_said[] PROGMEM = { & n_said_you,& n_said_go,& n_said_on,& n_said_into,& n_said_his,& n_said_never };
const OutgoingEdges e_said PROGMEM = { na_said, 6 };
const Node n_yes_yes PROGMEM = { 159, 2 };
const Node n_yes_i PROGMEM = { 2, 2 };
const Node na_yes[] PROGMEM = { & n_yes_yes,& n_yes_i };
const OutgoingEdges e_yes PROGMEM = { na_yes, 2 };
const Node n_thought_that PROGMEM = { 26, 1 };
const Node n_thought_and PROGMEM = { 16, 1 };
const Node n_thought_down PROGMEM = { 153, 1 };
const Node n_thought_he PROGMEM = { 122, 1 };
const Node n_thought_in PROGMEM = { 11, 2 };
const Node na_thought[] PROGMEM = { & n_thought_that,& n_thought_and,& n_thought_down,& n_thought_he,& n_thought_in };
const OutgoingEdges e_thought PROGMEM = { na_thought, 5 };
const Node n_his_place PROGMEM = { 68, 1 };
const Node n_his_head PROGMEM = { 97, 1 };
const Node n_his_own PROGMEM = { 253, 2 };
const Node n_his_red PROGMEM = { 272, 1 };
const Node n_his_dreams PROGMEM = { 284, 1 };
const Node n_his_father PROGMEM = { 296, 1 };
const Node n_his_salmon PROGMEM = { 302, 1 };
const Node n_his_heart PROGMEM = { 224, 1 };
const Node n_his_back PROGMEM = { 67, 2 };
const Node n_his_why PROGMEM = { 244, 1 };
const Node na_his[] PROGMEM = { & n_his_place,& n_his_head,& n_his_own,& n_his_red,& n_his_dreams,& n_his_father,& n_his_salmon,& n_his_heart,& n_his_back,& n_his_why };
const OutgoingEdges e_his PROGMEM = { na_his, 10 };
const Node n_without_the PROGMEM = { 6, 1 };
const Node n_without_their PROGMEM = { 142, 1 };
const Node n_without_some PROGMEM = { 128, 1 };
const Node n_without_love PROGMEM = { 34, 1 };
const Node n_without_a PROGMEM = { 40, 2 };
const Node n_without_still PROGMEM = { 141, 1 };
const Node na_without[] PROGMEM = { & n_without_the,& n_without_their,& n_without_some,& n_without_love,& n_without_a,& n_without_still };
const OutgoingEdges e_without PROGMEM = { na_without, 6 };
const Node n_do_not PROGMEM = { 72, 6 };
const Node n_do_my PROGMEM = { 7, 1 };
const Node n_do_or PROGMEM = { 24, 1 };
const Node n_do_you PROGMEM = { 19, 4 };
const Node n_do_she PROGMEM = { 131, 1 };
const Node n_do_and PROGMEM = { 16, 2 };
const Node n_do_it PROGMEM = { 125, 2 };
const Node n_do_with PROGMEM = { 36, 1 };
const Node n_do_i PROGMEM = { 2, 3 };
const Node n_do_who PROGMEM = { 254, 1 };
const Node n_do_just PROGMEM = { 189, 1 };
const Node n_do_run PROGMEM = { 206, 1 };
const Node n_do_me PROGMEM = { 42, 1 };
const Node na_do[] PROGMEM = { & n_do_not,& n_do_my,& n_do_or,& n_do_you,& n_do_she,& n_do_and,& n_do_it,& n_do_with,& n_do_i,& n_do_who,& n_do_just,& n_do_run,& n_do_me };
const OutgoingEdges e_do PROGMEM = { na_do, 13 };
const Node n_play_things PROGMEM = { 165, 3 };
const Node n_play_it PROGMEM = { 125, 1 };
const Node n_play_the PROGMEM = { 6, 2 };
const Node n_play_are PROGMEM = { 166, 1 };
const Node na_play[] PROGMEM = { & n_play_things,& n_play_it,& n_play_the,& n_play_are };
const OutgoingEdges e_play PROGMEM = { na_play, 4 };
const Node n_things_as PROGMEM = { 69, 7 };
const Node n_things_that PROGMEM = { 26, 2 };
const Node n_things_i PROGMEM = { 2, 1 };
const Node na_things[] PROGMEM = { & n_things_as,& n_things_that,& n_things_i };
const OutgoingEdges e_things PROGMEM = { na_things, 3 };
const Node n_are_the PROGMEM = { 6, 4 };
const Node n_are_are PROGMEM = { 166, 2 };
const Node n_are_remove PROGMEM = { 181, 1 };
const Node n_are_things PROGMEM = { 165, 1 };
const Node n_are_above PROGMEM = { 184, 1 };
const Node n_are_not PROGMEM = { 72, 1 };
const Node n_are_i PROGMEM = { 2, 1 };
const Node n_are_three PROGMEM = { 242, 1 };
const Node n_are_one PROGMEM = { 81, 2 };
const Node n_are_caught PROGMEM = { 202, 1 };
const Node n_are_fish PROGMEM = { 266, 1 };
const Node n_are_ourselves PROGMEM = { 264, 1 };
const Node n_are_bright PROGMEM = { 111, 1 };
const Node n_are_welcome PROGMEM = { 282, 2 };
const Node n_are_soft PROGMEM = { 276, 1 };
const Node n_are_right PROGMEM = { 279, 1 };
const Node n_are_if PROGMEM = { 104, 1 };
const Node n_are_as PROGMEM = { 69, 1 };
const Node n_are_all PROGMEM = { 62, 1 };
const Node n_are_full PROGMEM = { 135, 1 };
const Node n_are_those PROGMEM = { 148, 1 };
const Node n_are_far PROGMEM = { 193, 1 };
const Node n_are_always PROGMEM = { 156, 1 };
const Node n_are_you PROGMEM = { 19, 2 };
const Node n_are_made PROGMEM = { 211, 1 };
const Node na_are[] PROGMEM = { & n_are_the,& n_are_are,& n_are_remove,& n_are_things,& n_are_above,& n_are_not,& n_are_i,& n_are_three,& n_are_one,& n_are_caught,& n_are_fish,& n_are_ourselves,& n_are_bright,& n_are_welcome,& n_are_soft,& n_are_right,& n_are_if,& n_are_as,& n_are_all,& n_are_full,& n_are_those,& n_are_far,& n_are_always,& n_are_you,& n_are_made };
const OutgoingEdges e_are PROGMEM = { na_are, 25 };
const Node n_man_and PROGMEM = { 16, 2 };
const Node n_man_ever PROGMEM = { 212, 1 };
const Node n_man_now PROGMEM = { 257, 1 };
const Node n_man_th PROGMEM = { 292, 1 };
const Node n_man_a PROGMEM = { 40, 1 };
const Node n_man_with PROGMEM = { 36, 1 };
const Node na_man[] PROGMEM = { & n_man_and,& n_man_ever,& n_man_now,& n_man_th,& n_man_a,& n_man_with };
const OutgoingEdges e_man PROGMEM = { na_man, 6 };
const Node n_upon_the PROGMEM = { 6, 3 };
const Node n_upon_a PROGMEM = { 40, 1 };
const Node n_upon_me PROGMEM = { 42, 1 };
const Node na_upon[] PROGMEM = { & n_upon_the,& n_upon_a,& n_upon_me };
const OutgoingEdges e_upon PROGMEM = { na_upon, 3 };
const Node n_tell_it PROGMEM = { 125, 2 };
const Node n_tell_me PROGMEM = { 42, 2 };
const Node n_tell_i PROGMEM = { 2, 1 };
const Node n_tell_you PROGMEM = { 19, 1 };
const Node n_tell_from PROGMEM = { 78, 1 };
const Node n_tell_but PROGMEM = { 71, 1 };
const Node n_tell_the PROGMEM = { 6, 1 };
const Node n_tell_of PROGMEM = { 15, 1 };
const Node na_tell[] PROGMEM = { & n_tell_it,& n_tell_me,& n_tell_i,& n_tell_you,& n_tell_from,& n_tell_but,& n_tell_the,& n_tell_of };
const OutgoingEdges e_tell PROGMEM = { na_tell, 8 };
const Node n_thing_was PROGMEM = { 105, 1 };
const Node n_thing_we PROGMEM = { 57, 1 };
const Node n_thing_and PROGMEM = { 16, 1 };
const Node na_thing[] PROGMEM = { & n_thing_was,& n_thing_we,& n_thing_and };
const OutgoingEdges e_thing PROGMEM = { na_thing, 3 };
const Node n_can_i PROGMEM = { 2, 1 };
const Node n_can_the PROGMEM = { 6, 1 };
const Node n_can_their PROGMEM = { 142, 1 };
const Node n_can_tell PROGMEM = { 169, 1 };
const Node n_can_be PROGMEM = { 28, 1 };
const Node n_can_do PROGMEM = { 163, 1 };
const Node n_can_only PROGMEM = { 228, 2 };
const Node na_can[] PROGMEM = { & n_can_i,& n_can_the,& n_can_their,& n_can_tell,& n_can_be,& n_can_do,& n_can_only };
const OutgoingEdges e_can PROGMEM = { na_can, 7 };
const Node n_know_if PROGMEM = { 104, 1 };
const Node n_know_this PROGMEM = { 22, 1 };
const Node n_know_END PROGMEM = { 0, 1 };
const Node n_know_that PROGMEM = { 26, 2 };
const Node n_know_which PROGMEM = { 144, 1 };
const Node n_know_too PROGMEM = { 89, 1 };
const Node n_know_why PROGMEM = { 244, 1 };
const Node n_know_youre PROGMEM = { 274, 1 };
const Node n_know_what PROGMEM = { 179, 1 };
const Node n_know_and PROGMEM = { 16, 1 };
const Node n_know_nothing PROGMEM = { 285, 1 };
const Node na_know[] PROGMEM = { & n_know_if,& n_know_this,& n_know_END,& n_know_that,& n_know_which,& n_know_too,& n_know_why,& n_know_youre,& n_know_what,& n_know_and,& n_know_nothing };
const OutgoingEdges e_know PROGMEM = { na_know, 11 };
const Node n_is_blue PROGMEM = { 75, 2 };
const Node n_is_on PROGMEM = { 21, 1 };
const Node n_is_that PROGMEM = { 26, 3 };
const Node n_is_old PROGMEM = { 65, 1 };
const Node n_is_new PROGMEM = { 35, 1 };
const Node n_is_a PROGMEM = { 40, 3 };
const Node n_is_first PROGMEM = { 150, 1 };
const Node n_is_the PROGMEM = { 6, 5 };
const Node n_is_moving PROGMEM = { 241, 2 };
const Node n_is_death PROGMEM = { 240, 1 };
const Node n_is_so PROGMEM = { 120, 1 };
const Node n_is_of PROGMEM = { 15, 2 };
const Node n_is_more PROGMEM = { 101, 2 };
const Node n_is_too PROGMEM = { 89, 3 };
const Node n_is_not PROGMEM = { 72, 1 };
const Node n_is_an PROGMEM = { 146, 1 };
const Node n_is_never PROGMEM = { 218, 1 };
const Node n_is_full PROGMEM = { 135, 1 };
const Node n_is_night PROGMEM = { 52, 1 };
const Node n_is_my PROGMEM = { 7, 3 };
const Node n_is_in PROGMEM = { 11, 1 };
const Node n_is_no PROGMEM = { 214, 2 };
const Node n_is_lost PROGMEM = { 139, 1 };
const Node n_is_like PROGMEM = { 45, 1 };
const Node n_is_at PROGMEM = { 155, 2 };
const Node n_is_very PROGMEM = { 277, 2 };
const Node n_is_to PROGMEM = { 5, 2 };
const Node n_is_wind PROGMEM = { 295, 1 };
const Node n_is_another PROGMEM = { 25, 1 };
const Node n_is_it PROGMEM = { 125, 1 };
const Node n_is_really PROGMEM = { 190, 1 };
const Node n_is_for PROGMEM = { 116, 6 };
const Node n_is_nothing PROGMEM = { 285, 1 };
const Node na_is[] PROGMEM = { & n_is_blue,& n_is_on,& n_is_that,& n_is_old,& n_is_new,& n_is_a,& n_is_first,& n_is_the,& n_is_moving,& n_is_death,& n_is_so,& n_is_of,& n_is_more,& n_is_too,& n_is_not,& n_is_an,& n_is_never,& n_is_full,& n_is_night,& n_is_my,& n_is_in,& n_is_no,& n_is_lost,& n_is_like,& n_is_at,& n_is_very,& n_is_to,& n_is_wind,& n_is_another,& n_is_it,& n_is_really,& n_is_for,& n_is_nothing };
const OutgoingEdges e_is PROGMEM = { na_is, 33 };
const Node n_sky_my PROGMEM = { 7, 2 };
const Node na_sky[] PROGMEM = { & n_sky_my };
const OutgoingEdges e_sky PROGMEM = { na_sky, 1 };
const Node n_eye_is PROGMEM = { 173, 1 };
const Node n_eye_of PROGMEM = { 15, 1 };
const Node na_eye[] PROGMEM = { & n_eye_is,& n_eye_of };
const OutgoingEdges e_eye PROGMEM = { na_eye, 2 };
const Node n_pain_i PROGMEM = { 2, 2 };
const Node n_pain_between PROGMEM = { 232, 1 };
const Node n_pain_yet PROGMEM = { 199, 1 };
const Node n_pain_a PROGMEM = { 40, 1 };
const Node na_pain[] PROGMEM = { & n_pain_i,& n_pain_between,& n_pain_yet,& n_pain_a };
const OutgoingEdges e_pain PROGMEM = { na_pain, 4 };
const Node n_sun_i PROGMEM = { 2, 3 };
const Node n_sun_by PROGMEM = { 94, 1 };
const Node n_sun_his PROGMEM = { 161, 1 };
const Node n_sun_is PROGMEM = { 173, 2 };
const Node n_sun_would PROGMEM = { 108, 2 };
const Node n_sun_like PROGMEM = { 45, 1 };
const Node na_sun[] PROGMEM = { & n_sun_i,& n_sun_by,& n_sun_his,& n_sun_is,& n_sun_would,& n_sun_like };
const OutgoingEdges e_sun PROGMEM = { na_sun, 6 };
const Node n_rain_but PROGMEM = { 71, 1 };
const Node n_rain_of PROGMEM = { 15, 1 };
const Node n_rain_the PROGMEM = { 6, 1 };
const Node na_rain[] PROGMEM = { & n_rain_but,& n_rain_of,& n_rain_the };
const OutgoingEdges e_rain PROGMEM = { na_rain, 3 };
const Node n_what_is PROGMEM = { 173, 2 };
const Node n_what_you PROGMEM = { 19, 2 };
const Node n_what_we PROGMEM = { 57, 4 };
const Node n_what_looked PROGMEM = { 114, 1 };
const Node n_what_i PROGMEM = { 2, 2 };
const Node n_what_must PROGMEM = { 231, 1 };
const Node n_what_he PROGMEM = { 122, 1 };
const Node n_what_at PROGMEM = { 155, 1 };
const Node n_what_a PROGMEM = { 40, 2 };
const Node n_what_if PROGMEM = { 104, 1 };
const Node n_what_still PROGMEM = { 141, 1 };
const Node na_what[] PROGMEM = { & n_what_is,& n_what_you,& n_what_we,& n_what_looked,& n_what_i,& n_what_must,& n_what_he,& n_what_at,& n_what_a,& n_what_if,& n_what_still };
const OutgoingEdges e_what PROGMEM = { na_what, 11 };
const Node n_think_they PROGMEM = { 137, 1 };
const Node n_think_up PROGMEM = { 58, 1 };
const Node n_think_i PROGMEM = { 2, 1 };
const Node n_think_for PROGMEM = { 116, 1 };
const Node n_think_life PROGMEM = { 93, 1 };
const Node n_think_and PROGMEM = { 16, 1 };
const Node n_think_on PROGMEM = { 21, 1 };
const Node n_think_about PROGMEM = { 186, 1 };
const Node na_think[] PROGMEM = { & n_think_they,& n_think_up,& n_think_i,& n_think_for,& n_think_life,& n_think_and,& n_think_on,& n_think_about };
const OutgoingEdges e_think PROGMEM = { na_think, 8 };
const Node n_remove_the PROGMEM = { 6, 1 };
const Node n_remove_o PROGMEM = { 117, 1 };
const Node n_remove_half PROGMEM = { 249, 1 };
const Node n_remove_your PROGMEM = { 46, 1 };
const Node na_remove[] PROGMEM = { & n_remove_the,& n_remove_o,& n_remove_half,& n_remove_your };
const OutgoingEdges e_remove PROGMEM = { na_remove, 4 };
const Node n_within_your PROGMEM = { 46, 1 };
const Node n_within_a PROGMEM = { 40, 1 };
const Node n_within_his PROGMEM = { 161, 1 };
const Node n_within_yr PROGMEM = { 291, 1 };
const Node na_within[] PROGMEM = { & n_within_your,& n_within_a,& n_within_his,& n_within_yr };
const OutgoingEdges e_within PROGMEM = { na_within, 4 };
const Node n_go_we PROGMEM = { 57, 1 };
const Node n_go_on PROGMEM = { 21, 1 };
const Node n_go_home PROGMEM = { 113, 1 };
const Node n_go_to PROGMEM = { 5, 2 };
const Node na_go[] PROGMEM = { & n_go_we,& n_go_on,& n_go_home,& n_go_to };
const OutgoingEdges e_go PROGMEM = { na_go, 4 };
const Node n_above_hold PROGMEM = { 201, 2 };
const Node n_above_those PROGMEM = { 148, 1 };
const Node n_above_the PROGMEM = { 6, 1 };
const Node na_above[] PROGMEM = { & n_above_hold,& n_above_those,& n_above_the };
const OutgoingEdges e_above PROGMEM = { na_above, 3 };
const Node n_slow_they PROGMEM = { 137, 1 };
const Node na_slow[] PROGMEM = { & n_slow_they };
const OutgoingEdges e_slow PROGMEM = { na_slow, 1 };
const Node n_about_you PROGMEM = { 19, 1 };
const Node n_about_it PROGMEM = { 125, 2 };
const Node n_about_the PROGMEM = { 6, 4 };
const Node n_about_her PROGMEM = { 56, 2 };
const Node n_about_all PROGMEM = { 62, 1 };
const Node n_about_me PROGMEM = { 42, 1 };
const Node n_about_my PROGMEM = { 7, 1 };
const Node n_about_with PROGMEM = { 36, 1 };
const Node na_about[] PROGMEM = { & n_about_you,& n_about_it,& n_about_the,& n_about_her,& n_about_all,& n_about_me,& n_about_my,& n_about_with };
const OutgoingEdges e_about PROGMEM = { na_about, 8 };
const Node n_truth_and PROGMEM = { 16, 1 };
const Node n_truth_is PROGMEM = { 173, 3 };
const Node n_truth_of PROGMEM = { 15, 1 };
const Node n_truth_as PROGMEM = { 69, 1 };
const Node n_truth_might PROGMEM = { 83, 1 };
const Node n_truth_about PROGMEM = { 186, 1 };
const Node na_truth[] PROGMEM = { & n_truth_and,& n_truth_is,& n_truth_of,& n_truth_as,& n_truth_might,& n_truth_about };
const OutgoingEdges e_truth PROGMEM = { na_truth, 6 };
const Node n_again_and PROGMEM = { 16, 1 };
const Node n_again_a PROGMEM = { 40, 1 };
const Node n_again_i PROGMEM = { 2, 2 };
const Node n_again_but PROGMEM = { 71, 1 };
const Node n_again_she PROGMEM = { 131, 1 };
const Node n_again_in PROGMEM = { 11, 1 };
const Node n_again_END PROGMEM = { 0, 2 };
const Node na_again[] PROGMEM = { & n_again_and,& n_again_a,& n_again_i,& n_again_but,& n_again_she,& n_again_in,& n_again_END };
const OutgoingEdges e_again PROGMEM = { na_again, 7 };
const Node n_just_play PROGMEM = { 164, 1 };
const Node n_just_as PROGMEM = { 69, 2 };
const Node n_just_so PROGMEM = { 120, 1 };
const Node n_just_after PROGMEM = { 76, 1 };
const Node n_just_left PROGMEM = { 123, 1 };
const Node n_just_enough PROGMEM = { 84, 1 };
const Node n_just_fell PROGMEM = { 77, 1 };
const Node n_just_run PROGMEM = { 206, 1 };
const Node n_just_what PROGMEM = { 179, 1 };
const Node n_just_stop PROGMEM = { 263, 1 };
const Node n_just_from PROGMEM = { 78, 1 };
const Node n_just_my PROGMEM = { 7, 1 };
const Node na_just[] PROGMEM = { & n_just_play,& n_just_as,& n_just_so,& n_just_after,& n_just_left,& n_just_enough,& n_just_fell,& n_just_run,& n_just_what,& n_just_stop,& n_just_from,& n_just_my };
const OutgoingEdges e_just PROGMEM = { na_just, 12 };
const Node n_really_are PROGMEM = { 166, 1 };
const Node n_really_all PROGMEM = { 62, 1 };
const Node n_really_go PROGMEM = { 183, 1 };
const Node n_really_thought PROGMEM = { 160, 1 };
const Node na_really[] PROGMEM = { & n_really_are,& n_really_all,& n_really_go,& n_really_thought };
const OutgoingEdges e_really PROGMEM = { na_really, 4 };
const Node n_will_be PROGMEM = { 28, 3 };
const Node n_will_not PROGMEM = { 72, 2 };
const Node n_will_touch PROGMEM = { 259, 1 };
const Node n_will_ever PROGMEM = { 212, 3 };
const Node n_will_see PROGMEM = { 64, 1 };
const Node n_will_rain PROGMEM = { 178, 1 };
const Node n_will_i PROGMEM = { 2, 1 };
const Node na_will[] PROGMEM = { & n_will_be,& n_will_not,& n_will_touch,& n_will_ever,& n_will_see,& n_will_rain,& n_will_i };
const OutgoingEdges e_will PROGMEM = { na_will, 7 };
const Node n_something_on PROGMEM = { 21, 1 };
const Node n_something_has PROGMEM = { 126, 1 };
const Node na_something[] PROGMEM = { & n_something_on,& n_something_has };
const OutgoingEdges e_something PROGMEM = { na_something, 2 };
const Node n_far_when PROGMEM = { 49, 1 };
const Node n_far_off PROGMEM = { 55, 1 };
const Node n_far_too PROGMEM = { 89, 1 };
const Node n_far_would PROGMEM = { 108, 1 };
const Node na_far[] PROGMEM = { & n_far_when,& n_far_off,& n_far_too,& n_far_would };
const OutgoingEdges e_far PROGMEM = { na_far, 4 };
const Node n_bent_back PROGMEM = { 67, 2 };
const Node n_bent_to PROGMEM = { 5, 1 };
const Node na_bent[] PROGMEM = { & n_bent_back,& n_bent_to };
const OutgoingEdges e_bent PROGMEM = { na_bent, 2 };
const Node n_legs_bent PROGMEM = { 194, 2 };
const Node n_legs_and PROGMEM = { 16, 3 };
const Node n_legs_with PROGMEM = { 36, 2 };
const Node n_legs_of PROGMEM = { 15, 1 };
const Node na_legs[] PROGMEM = { & n_legs_bent,& n_legs_and,& n_legs_with,& n_legs_of };
const OutgoingEdges e_legs PROGMEM = { na_legs, 4 };
const Node n_wall_we PROGMEM = { 57, 2 };
const Node n_wall_the PROGMEM = { 6, 1 };
const Node n_wall_and PROGMEM = { 16, 1 };
const Node na_wall[] PROGMEM = { & n_wall_we,& n_wall_the,& n_wall_and };
const OutgoingEdges e_wall PROGMEM = { na_wall, 3 };
const Node n_sleep_the PROGMEM = { 6, 1 };
const Node n_sleep_my PROGMEM = { 7, 1 };
const Node n_sleep_were PROGMEM = { 20, 1 };
const Node na_sleep[] PROGMEM = { & n_sleep_the,& n_sleep_my,& n_sleep_were };
const OutgoingEdges e_sleep PROGMEM = { na_sleep, 3 };
const Node n_come_as PROGMEM = { 69, 2 };
const Node n_come_from PROGMEM = { 78, 1 };
const Node n_come_love PROGMEM = { 34, 1 };
const Node n_come_in PROGMEM = { 11, 4 };
const Node n_come_when PROGMEM = { 49, 5 };
const Node n_come_o PROGMEM = { 117, 1 };
const Node n_come_to PROGMEM = { 5, 2 };
const Node n_come_with PROGMEM = { 36, 2 };
const Node n_come_my PROGMEM = { 7, 1 };
const Node na_come[] PROGMEM = { & n_come_as,& n_come_from,& n_come_love,& n_come_in,& n_come_when,& n_come_o,& n_come_to,& n_come_with,& n_come_my };
const OutgoingEdges e_come PROGMEM = { na_come, 9 };
const Node n_yet_where PROGMEM = { 200, 2 };
const Node n_yet_they PROGMEM = { 137, 1 };
const Node n_yet_i PROGMEM = { 2, 2 };
const Node n_yet_im PROGMEM = { 18, 1 };
const Node n_yet_one PROGMEM = { 81, 1 };
const Node na_yet[] PROGMEM = { & n_yet_where,& n_yet_they,& n_yet_i,& n_yet_im,& n_yet_one };
const OutgoingEdges e_yet PROGMEM = { na_yet, 5 };
const Node n_where_we PROGMEM = { 57, 14 };
const Node n_where_i PROGMEM = { 2, 3 };
const Node n_where_are PROGMEM = { 166, 1 };
const Node n_where_he PROGMEM = { 122, 2 };
const Node n_where_the PROGMEM = { 6, 1 };
const Node na_where[] PROGMEM = { & n_where_we,& n_where_i,& n_where_are,& n_where_he,& n_where_the };
const OutgoingEdges e_where PROGMEM = { na_where, 5 };
const Node n_hold_of PROGMEM = { 15, 2 };
const Node n_hold_the PROGMEM = { 6, 2 };
const Node n_hold_out PROGMEM = { 63, 1 };
const Node na_hold[] PROGMEM = { & n_hold_of,& n_hold_the,& n_hold_out };
const OutgoingEdges e_hold PROGMEM = { na_hold, 3 };
const Node n_caught_in PROGMEM = { 11, 2 };
const Node n_caught_by PROGMEM = { 94, 1 };
const Node n_caught_you PROGMEM = { 19, 1 };
const Node n_caught_we PROGMEM = { 57, 1 };
const Node na_caught[] PROGMEM = { & n_caught_in,& n_caught_by,& n_caught_you,& n_caught_we };
const OutgoingEdges e_caught PROGMEM = { na_caught, 4 };
const Node n_our_way PROGMEM = { 13, 2 };
const Node n_our_legs PROGMEM = { 195, 2 };
const Node n_our_home PROGMEM = { 113, 1 };
const Node n_our_old PROGMEM = { 65, 1 };
const Node n_our_last PROGMEM = { 147, 1 };
const Node na_our[] PROGMEM = { & n_our_way,& n_our_legs,& n_our_home,& n_our_old,& n_our_last };
const OutgoingEdges e_our PROGMEM = { na_our, 5 };
const Node n_trickle_of PROGMEM = { 15, 6 };
const Node n_trickle_turned PROGMEM = { 132, 2 };
const Node na_trickle[] PROGMEM = { & n_trickle_of,& n_trickle_turned };
const OutgoingEdges e_trickle PROGMEM = { na_trickle, 2 };
const Node n_blood_for PROGMEM = { 116, 1 };
const Node n_blood_in PROGMEM = { 11, 1 };
const Node n_blood_under PROGMEM = { 48, 1 };
const Node n_blood_the PROGMEM = { 6, 1 };
const Node n_blood_ PROGMEM = { 38, 1 };
const Node na_blood[] PROGMEM = { & n_blood_for,& n_blood_in,& n_blood_under,& n_blood_the,& n_blood_ };
const OutgoingEdges e_blood PROGMEM = { na_blood, 5 };
const Node n_run_trickle PROGMEM = { 204, 2 };
const Node n_run_a PROGMEM = { 40, 1 };
const Node n_run_and PROGMEM = { 16, 1 };
const Node n_run_still PROGMEM = { 141, 1 };
const Node na_run[] PROGMEM = { & n_run_trickle,& n_run_a,& n_run_and,& n_run_still };
const OutgoingEdges e_run PROGMEM = { na_run, 4 };
const Node n_water_i PROGMEM = { 2, 1 };
const Node n_water_and PROGMEM = { 16, 1 };
const Node n_water_is PROGMEM = { 173, 1 };
const Node n_water_to PROGMEM = { 5, 1 };
const Node n_water_through PROGMEM = { 79, 1 };
const Node n_water_into PROGMEM = { 33, 1 };
const Node n_water_stone PROGMEM = { 234, 3 };
const Node n_water_wind PROGMEM = { 295, 2 };
const Node n_water_water PROGMEM = { 207, 1 };
const Node na_water[] PROGMEM = { & n_water_i,& n_water_and,& n_water_is,& n_water_to,& n_water_through,& n_water_into,& n_water_stone,& n_water_wind,& n_water_water };
const OutgoingEdges e_water PROGMEM = { na_water, 9 };
const Node n_music_of PROGMEM = { 15, 2 };
const Node na_music[] PROGMEM = { & n_music_of };
const OutgoingEdges e_music PROGMEM = { na_music, 1 };
const Node n_knees_bent PROGMEM = { 194, 2 };
const Node n_knees_and PROGMEM = { 16, 1 };
const Node n_knees_did PROGMEM = { 287, 1 };
const Node n_knees_are PROGMEM = { 166, 1 };
const Node na_knees[] PROGMEM = { & n_knees_bent,& n_knees_and,& n_knees_did,& n_knees_are };
const OutgoingEdges e_knees PROGMEM = { na_knees, 4 };
const Node n_two_made PROGMEM = { 211, 2 };
const Node n_two_three PROGMEM = { 242, 1 };
const Node n_two_fish PROGMEM = { 266, 1 };
const Node n_two_but PROGMEM = { 71, 1 };
const Node na_two[] PROGMEM = { & n_two_made,& n_two_three,& n_two_fish,& n_two_but };
const OutgoingEdges e_two PROGMEM = { na_two, 4 };
const Node n_made_one PROGMEM = { 81, 2 };
const Node n_made_it PROGMEM = { 125, 1 };
const Node n_made_all PROGMEM = { 62, 1 };
const Node n_made_out PROGMEM = { 63, 1 };
const Node n_made_my PROGMEM = { 7, 3 };
const Node n_made_the PROGMEM = { 6, 1 };
const Node n_made_of PROGMEM = { 15, 1 };
const Node na_made[] PROGMEM = { & n_made_one,& n_made_it,& n_made_all,& n_made_out,& n_made_my,& n_made_the,& n_made_of };
const OutgoingEdges e_made PROGMEM = { na_made, 7 };
const Node n_ever_after PROGMEM = { 76, 4 };
const Node n_ever_could PROGMEM = { 91, 1 };
const Node n_ever_know PROGMEM = { 172, 1 };
const Node na_ever[] PROGMEM = { & n_ever_after,& n_ever_could,& n_ever_know };
const OutgoingEdges e_ever PROGMEM = { na_ever, 3 };
const Node n_little_more PROGMEM = { 101, 1 };
const Node n_little_how PROGMEM = { 136, 1 };
const Node n_little_pain PROGMEM = { 176, 1 };
const Node n_little_man PROGMEM = { 167, 1 };
const Node na_little[] PROGMEM = { & n_little_more,& n_little_how,& n_little_pain,& n_little_man };
const OutgoingEdges e_little PROGMEM = { na_little, 4 };
const Node n_no_way PROGMEM = { 13, 2 };
const Node n_no_good PROGMEM = { 262, 1 };
const Node n_no_fish PROGMEM = { 266, 1 };
const Node n_no_it PROGMEM = { 125, 1 };
const Node n_no_man PROGMEM = { 167, 1 };
const Node n_no_snow PROGMEM = { 248, 1 };
const Node n_no_one PROGMEM = { 81, 3 };
const Node n_no_is PROGMEM = { 173, 1 };
const Node n_no_room PROGMEM = { 275, 2 };
const Node n_no_more PROGMEM = { 101, 2 };
const Node n_no_i PROGMEM = { 2, 1 };
const Node n_no_the PROGMEM = { 6, 1 };
const Node n_no_blood PROGMEM = { 205, 1 };
const Node n_no_other PROGMEM = { 31, 1 };
const Node n_no_its PROGMEM = { 70, 1 };
const Node na_no[] PROGMEM = { & n_no_way,& n_no_good,& n_no_fish,& n_no_it,& n_no_man,& n_no_snow,& n_no_one,& n_no_is,& n_no_room,& n_no_more,& n_no_i,& n_no_the,& n_no_blood,& n_no_other,& n_no_its };
const OutgoingEdges e_no PROGMEM = { na_no, 15 };
const Node n_perfect_tree PROGMEM = { 216, 2 };
const Node n_perfect_i PROGMEM = { 2, 2 };
const Node n_perfect_and PROGMEM = { 16, 1 };
const Node n_perfect_all PROGMEM = { 62, 1 };
const Node n_perfect_trees PROGMEM = { 217, 2 };
const Node n_perfect_glass PROGMEM = { 243, 1 };
const Node na_perfect[] PROGMEM = { & n_perfect_tree,& n_perfect_i,& n_perfect_and,& n_perfect_all,& n_perfect_trees,& n_perfect_glass };
const OutgoingEdges e_perfect PROGMEM = { na_perfect, 6 };
const Node n_tree_with PROGMEM = { 36, 1 };
const Node n_tree_in PROGMEM = { 11, 1 };
const Node na_tree[] PROGMEM = { & n_tree_with,& n_tree_in };
const OutgoingEdges e_tree PROGMEM = { na_tree, 2 };
const Node n_trees_in PROGMEM = { 11, 3 };
const Node n_trees_not PROGMEM = { 72, 1 };
const Node n_trees_a PROGMEM = { 40, 1 };
const Node n_trees_once PROGMEM = { 223, 1 };
const Node n_trees_END PROGMEM = { 0, 1 };
const Node n_trees_listen PROGMEM = { 289, 1 };
const Node na_trees[] PROGMEM = { & n_trees_in,& n_trees_not,& n_trees_a,& n_trees_once,& n_trees_END,& n_trees_listen };
const OutgoingEdges e_trees PROGMEM = { na_trees, 6 };
const Node n_never_die PROGMEM = { 39, 1 };
const Node n_never_mind PROGMEM = { 124, 7 };
const Node n_never_have PROGMEM = { 8, 1 };
const Node n_never_caught PROGMEM = { 202, 1 };
const Node na_never[] PROGMEM = { & n_never_die,& n_never_mind,& n_never_have,& n_never_caught };
const OutgoingEdges e_never PROGMEM = { na_never, 4 };
const Node n_years_a PROGMEM = { 40, 1 };
const Node n_years_to PROGMEM = { 5, 1 };
const Node n_years_behind PROGMEM = { 225, 1 };
const Node n_years_first PROGMEM = { 150, 1 };
const Node n_years_of PROGMEM = { 15, 1 };
const Node n_years_later PROGMEM = { 74, 2 };
const Node n_years_old PROGMEM = { 65, 2 };
const Node na_years[] PROGMEM = { & n_years_a,& n_years_to,& n_years_behind,& n_years_first,& n_years_of,& n_years_later,& n_years_old };
const OutgoingEdges e_years PROGMEM = { na_years, 7 };
const Node n_long_long PROGMEM = { 220, 2 };
const Node n_long_before PROGMEM = { 221, 2 };
const Node n_long_i PROGMEM = { 2, 1 };
const Node n_long_has PROGMEM = { 126, 1 };
const Node n_long_for PROGMEM = { 116, 1 };
const Node n_long_still PROGMEM = { 141, 2 };
const Node n_long_enough PROGMEM = { 84, 1 };
const Node na_long[] PROGMEM = { & n_long_long,& n_long_before,& n_long_i,& n_long_has,& n_long_for,& n_long_still,& n_long_enough };
const OutgoingEdges e_long PROGMEM = { na_long, 7 };
const Node n_before_i PROGMEM = { 2, 3 };
const Node n_before_nor PROGMEM = { 238, 1 };
const Node n_before_we PROGMEM = { 57, 1 };
const Node n_before_the PROGMEM = { 6, 2 };
const Node n_before_wilt PROGMEM = { 298, 1 };
const Node n_before_bed PROGMEM = { 9, 1 };
const Node na_before[] PROGMEM = { & n_before_i,& n_before_nor,& n_before_we,& n_before_the,& n_before_wilt,& n_before_bed };
const OutgoingEdges e_before PROGMEM = { na_before, 6 };
const Node n_am_on PROGMEM = { 21, 1 };
const Node n_am_being PROGMEM = { 260, 1 };
const Node n_am_i PROGMEM = { 2, 2 };
const Node n_am_salmon PROGMEM = { 302, 1 };
const Node n_am_all PROGMEM = { 62, 1 };
const Node na_am[] PROGMEM = { & n_am_on,& n_am_being,& n_am_i,& n_am_salmon,& n_am_all };
const OutgoingEdges e_am PROGMEM = { na_am, 5 };
const Node n_once_one PROGMEM = { 81, 1 };
const Node n_once_all PROGMEM = { 62, 1 };
const Node n_once_a PROGMEM = { 40, 1 };
const Node n_once_ PROGMEM = { 38, 1 };
const Node na_once[] PROGMEM = { & n_once_one,& n_once_all,& n_once_a,& n_once_ };
const OutgoingEdges e_once PROGMEM = { na_once, 4 };
const Node n_heart_there PROGMEM = { 149, 1 };
const Node n_heart_and PROGMEM = { 16, 1 };
const Node n_heart_is PROGMEM = { 173, 2 };
const Node n_heart_of PROGMEM = { 15, 1 };
const Node n_heart_whose PROGMEM = { 280, 1 };
const Node na_heart[] PROGMEM = { & n_heart_there,& n_heart_and,& n_heart_is,& n_heart_of,& n_heart_whose };
const OutgoingEdges e_heart PROGMEM = { na_heart, 5 };
const Node n_behind_the PROGMEM = { 6, 1 };
const Node n_behind_in PROGMEM = { 11, 1 };
const Node n_behind_us PROGMEM = { 66, 1 };
const Node n_behind_me PROGMEM = { 42, 1 };
const Node n_behind_them PROGMEM = { 118, 1 };
const Node na_behind[] PROGMEM = { & n_behind_the,& n_behind_in,& n_behind_us,& n_behind_me,& n_behind_them };
const OutgoingEdges e_behind PROGMEM = { na_behind, 5 };
const Node n_because_i PROGMEM = { 2, 2 };
const Node n_because_what PROGMEM = { 179, 1 };
const Node n_because_in PROGMEM = { 11, 1 };
const Node n_because_you PROGMEM = { 19, 2 };
const Node na_because[] PROGMEM = { & n_because_i,& n_because_what,& n_because_in,& n_because_you };
const OutgoingEdges e_because PROGMEM = { na_because, 4 };
const Node n_dead_on PROGMEM = { 21, 1 };
const Node na_dead[] PROGMEM = { & n_dead_on };
const OutgoingEdges e_dead PROGMEM = { na_dead, 1 };
const Node n_only_dream PROGMEM = { 44, 1 };
const Node n_only_moving PROGMEM = { 241, 1 };
const Node n_only_stand PROGMEM = { 109, 1 };
const Node n_only_on PROGMEM = { 21, 1 };
const Node n_only_a PROGMEM = { 40, 1 };
const Node n_only_th PROGMEM = { 292, 1 };
const Node na_only[] PROGMEM = { & n_only_dream,& n_only_moving,& n_only_stand,& n_only_on,& n_only_a,& n_only_th };
const OutgoingEdges e_only PROGMEM = { na_only, 6 };
const Node n_here_ PROGMEM = { 38, 1 };
const Node n_here_one PROGMEM = { 81, 1 };
const Node n_here_before PROGMEM = { 221, 1 };
const Node n_here_to PROGMEM = { 5, 2 };
const Node n_here_are PROGMEM = { 166, 1 };
const Node n_here_i PROGMEM = { 2, 1 };
const Node n_here_and PROGMEM = { 16, 1 };
const Node n_here_think PROGMEM = { 180, 1 };
const Node n_here_at PROGMEM = { 155, 1 };
const Node na_here[] PROGMEM = { & n_here_,& n_here_one,& n_here_before,& n_here_to,& n_here_are,& n_here_i,& n_here_and,& n_here_think,& n_here_at };
const OutgoingEdges e_here PROGMEM = { na_here, 9 };
const Node n_met_in PROGMEM = { 11, 1 };
const Node n_met_all PROGMEM = { 62, 1 };
const Node n_met_and PROGMEM = { 16, 2 };
const Node n_met_again PROGMEM = { 188, 2 };
const Node na_met[] PROGMEM = { & n_met_in,& n_met_all,& n_met_and,& n_met_again };
const OutgoingEdges e_met PROGMEM = { na_met, 4 };
const Node n_must_be PROGMEM = { 28, 4 };
const Node n_must_die PROGMEM = { 39, 1 };
const Node na_must[] PROGMEM = { & n_must_be,& n_must_die };
const OutgoingEdges e_must PROGMEM = { na_must, 2 };
const Node n_between_the PROGMEM = { 6, 1 };
const Node n_between_her PROGMEM = { 56, 1 };
const Node n_between_home PROGMEM = { 113, 1 };
const Node na_between[] PROGMEM = { & n_between_the,& n_between_her,& n_between_home };
const OutgoingEdges e_between PROGMEM = { na_between, 3 };
const Node n_any_other PROGMEM = { 31, 2 };
const Node n_any_kind PROGMEM = { 51, 1 };
const Node n_any_more PROGMEM = { 101, 1 };
const Node na_any[] PROGMEM = { & n_any_other,& n_any_kind,& n_any_more };
const OutgoingEdges e_any PROGMEM = { na_any, 3 };
const Node n_stone_the PROGMEM = { 6, 1 };
const Node n_stone_wind PROGMEM = { 295, 4 };
const Node n_stone_each PROGMEM = { 30, 1 };
const Node na_stone[] PROGMEM = { & n_stone_the,& n_stone_wind,& n_stone_each };
const OutgoingEdges e_stone PROGMEM = { na_stone, 3 };
const Node n_among_the PROGMEM = { 6, 3 };
const Node na_among[] PROGMEM = { & n_among_the };
const OutgoingEdges e_among PROGMEM = { na_among, 1 };
const Node n_cross_my PROGMEM = { 7, 1 };
const Node n_cross_they PROGMEM = { 137, 1 };
const Node n_cross_as PROGMEM = { 69, 2 };
const Node n_cross_the PROGMEM = { 6, 2 };
const Node na_cross[] PROGMEM = { & n_cross_my,& n_cross_they,& n_cross_as,& n_cross_the };
const OutgoingEdges e_cross PROGMEM = { na_cross, 4 };
const Node n_end_could PROGMEM = { 91, 1 };
const Node n_end_the PROGMEM = { 6, 1 };
const Node n_end_of PROGMEM = { 15, 2 };
const Node na_end[] PROGMEM = { & n_end_could,& n_end_the,& n_end_of };
const OutgoingEdges e_end PROGMEM = { na_end, 3 };
const Node n_nor_no PROGMEM = { 214, 1 };
const Node na_nor[] PROGMEM = { & n_nor_no };
const OutgoingEdges e_nor PROGMEM = { na_nor, 1 };
const Node n_breath_a PROGMEM = { 40, 1 };
const Node n_breath_the PROGMEM = { 6, 1 };
const Node n_breath_so PROGMEM = { 120, 1 };
const Node n_breath_and PROGMEM = { 16, 2 };
const Node n_breath_now PROGMEM = { 257, 1 };
const Node na_breath[] PROGMEM = { & n_breath_a,& n_breath_the,& n_breath_so,& n_breath_and,& n_breath_now };
const OutgoingEdges e_breath PROGMEM = { na_breath, 5 };
const Node n_death_END PROGMEM = { 0, 1 };
const Node n_death_to PROGMEM = { 5, 1 };
const Node n_death_where PROGMEM = { 200, 1 };
const Node n_death_rode PROGMEM = { 247, 3 };
const Node n_death_into PROGMEM = { 33, 1 };
const Node n_death_back PROGMEM = { 67, 1 };
const Node n_death_in PROGMEM = { 11, 1 };
const Node na_death[] PROGMEM = { & n_death_END,& n_death_to,& n_death_where,& n_death_rode,& n_death_into,& n_death_back,& n_death_in };
const OutgoingEdges e_death PROGMEM = { na_death, 7 };
const Node n_moving_thing PROGMEM = { 170, 1 };
const Node n_moving_the PROGMEM = { 6, 1 };
const Node n_moving_water PROGMEM = { 207, 1 };
const Node n_moving_in PROGMEM = { 11, 1 };
const Node n_moving_without PROGMEM = { 162, 1 };
const Node n_moving_into PROGMEM = { 33, 1 };
const Node n_moving_its PROGMEM = { 70, 1 };
const Node na_moving[] PROGMEM = { & n_moving_thing,& n_moving_the,& n_moving_water,& n_moving_in,& n_moving_without,& n_moving_into,& n_moving_its };
const OutgoingEdges e_moving PROGMEM = { na_moving, 7 };
const Node n_three_ PROGMEM = { 38, 1 };
const Node na_three[] PROGMEM = { & n_three_ };
const OutgoingEdges e_three PROGMEM = { na_three, 1 };
const Node n_glass_the PROGMEM = { 6, 1 };
const Node n_glass_and PROGMEM = { 16, 2 };
const Node na_glass[] PROGMEM = { & n_glass_the,& n_glass_and };
const OutgoingEdges e_glass PROGMEM = { na_glass, 2 };
const Node n_why_do PROGMEM = { 163, 2 };
const Node n_why_am PROGMEM = { 222, 1 };
const Node n_why_but PROGMEM = { 71, 1 };
const Node n_why_then PROGMEM = { 86, 1 };
const Node n_why_is PROGMEM = { 173, 1 };
const Node na_why[] PROGMEM = { & n_why_do,& n_why_am,& n_why_but,& n_why_then,& n_why_is };
const OutgoingEdges e_why PROGMEM = { na_why, 5 };
const Node n_around_the PROGMEM = { 6, 1 };
const Node n_around_and PROGMEM = { 16, 1 };
const Node n_around_to PROGMEM = { 5, 1 };
const Node n_around_th PROGMEM = { 292, 1 };
const Node n_around_yu PROGMEM = { 293, 1 };
const Node n_around_his PROGMEM = { 161, 1 };
const Node n_around_all PROGMEM = { 62, 1 };
const Node na_around[] PROGMEM = { & n_around_the,& n_around_and,& n_around_to,& n_around_th,& n_around_yu,& n_around_his,& n_around_all };
const OutgoingEdges e_around PROGMEM = { na_around, 7 };
const Node n_even_the PROGMEM = { 6, 1 };
const Node n_even_to PROGMEM = { 5, 1 };
const Node n_even_do PROGMEM = { 163, 1 };
const Node n_even_of PROGMEM = { 15, 1 };
const Node na_even[] PROGMEM = { & n_even_the,& n_even_to,& n_even_do,& n_even_of };
const OutgoingEdges e_even PROGMEM = { na_even, 4 };
const Node n_rode_over PROGMEM = { 134, 1 };
const Node n_rode_the PROGMEM = { 6, 4 };
const Node n_rode_and PROGMEM = { 16, 1 };
const Node n_rode_back PROGMEM = { 67, 1 };
const Node na_rode[] PROGMEM = { & n_rode_over,& n_rode_the,& n_rode_and,& n_rode_back };
const OutgoingEdges e_rode PROGMEM = { na_rode, 4 };
const Node n_snow_the PROGMEM = { 6, 1 };
const Node n_snow_that PROGMEM = { 26, 1 };
const Node n_snow_on PROGMEM = { 21, 1 };
const Node n_snow_is PROGMEM = { 173, 1 };
const Node n_snow_i PROGMEM = { 2, 1 };
const Node na_snow[] PROGMEM = { & n_snow_the,& n_snow_that,& n_snow_on,& n_snow_is,& n_snow_i };
const OutgoingEdges e_snow PROGMEM = { na_snow, 5 };
const Node n_half_my PROGMEM = { 7, 1 };
const Node n_half_a PROGMEM = { 40, 5 };
const Node n_half_the PROGMEM = { 6, 1 };
const Node na_half[] PROGMEM = { & n_half_my,& n_half_a,& n_half_the };
const OutgoingEdges e_half PROGMEM = { na_half, 3 };
const Node n_dark_only PROGMEM = { 228, 1 };
const Node n_dark_and PROGMEM = { 16, 1 };
const Node na_dark[] PROGMEM = { & n_dark_only,& n_dark_and };
const OutgoingEdges e_dark PROGMEM = { na_dark, 2 };
const Node n_though_my PROGMEM = { 7, 1 };
const Node n_though_the PROGMEM = { 6, 1 };
const Node n_though_we PROGMEM = { 57, 1 };
const Node n_though_it PROGMEM = { 125, 1 };
const Node n_though_still PROGMEM = { 141, 1 };
const Node na_though[] PROGMEM = { & n_though_my,& n_though_the,& n_though_we,& n_though_it,& n_though_still };
const OutgoingEdges e_though PROGMEM = { na_though, 5 };
const Node n_god_or PROGMEM = { 24, 1 };
const Node n_god_to PROGMEM = { 5, 2 };
const Node na_god[] PROGMEM = { & n_god_or,& n_god_to };
const OutgoingEdges e_god PROGMEM = { na_god, 2 };
const Node n_own_business PROGMEM = { 271, 1 };
const Node n_own_body PROGMEM = { 82, 2 };
const Node n_own_whose PROGMEM = { 280, 1 };
const Node na_own[] PROGMEM = { & n_own_business,& n_own_body,& n_own_whose };
const OutgoingEdges e_own PROGMEM = { na_own, 3 };
const Node n_who_best PROGMEM = { 12, 1 };
const Node n_who_only PROGMEM = { 228, 1 };
const Node n_who_will PROGMEM = { 191, 2 };
const Node n_who_fell PROGMEM = { 77, 1 };
const Node n_who_can PROGMEM = { 171, 1 };
const Node n_who_am PROGMEM = { 222, 1 };
const Node n_who_now PROGMEM = { 257, 1 };
const Node n_who_loved PROGMEM = { 100, 1 };
const Node n_who_were PROGMEM = { 20, 1 };
const Node na_who[] PROGMEM = { & n_who_best,& n_who_only,& n_who_will,& n_who_fell,& n_who_can,& n_who_am,& n_who_now,& n_who_loved,& n_who_were };
const OutgoingEdges e_who PROGMEM = { na_who, 9 };
const Node n_also_be PROGMEM = { 28, 1 };
const Node n_also_did PROGMEM = { 287, 1 };
const Node na_also[] PROGMEM = { & n_also_be,& n_also_did };
const OutgoingEdges e_also PROGMEM = { na_also, 2 };
const Node n_side_of PROGMEM = { 15, 3 };
const Node na_side[] PROGMEM = { & n_side_of };
const OutgoingEdges e_side PROGMEM = { na_side, 1 };
const Node n_now_my PROGMEM = { 7, 1 };
const Node n_now_the PROGMEM = { 6, 1 };
const Node n_now_it PROGMEM = { 125, 1 };
const Node n_now_high PROGMEM = { 145, 1 };
const Node n_now_where PROGMEM = { 200, 1 };
const Node n_now_of PROGMEM = { 15, 1 };
const Node n_now_i PROGMEM = { 2, 1 };
const Node n_now_would PROGMEM = { 108, 1 };
const Node n_now_and PROGMEM = { 16, 1 };
const Node n_now_as PROGMEM = { 69, 2 };
const Node n_now_lost PROGMEM = { 139, 1 };
const Node n_now_he PROGMEM = { 122, 1 };
const Node na_now[] PROGMEM = { & n_now_my,& n_now_the,& n_now_it,& n_now_high,& n_now_where,& n_now_of,& n_now_i,& n_now_would,& n_now_and,& n_now_as,& n_now_lost,& n_now_he };
const OutgoingEdges e_now PROGMEM = { na_now, 12 };
const Node n_say_im PROGMEM = { 18, 1 };
const Node n_say_the PROGMEM = { 6, 1 };
const Node n_say_this PROGMEM = { 22, 1 };
const Node n_say_say PROGMEM = { 258, 1 };
const Node n_say_look PROGMEM = { 267, 1 };
const Node n_say_i PROGMEM = { 2, 1 };
const Node n_say_down PROGMEM = { 153, 1 };
const Node n_say_our PROGMEM = { 203, 1 };
const Node n_say_it PROGMEM = { 125, 2 };
const Node n_say_yes PROGMEM = { 159, 2 };
const Node n_say_my PROGMEM = { 7, 2 };
const Node na_say[] PROGMEM = { & n_say_im,& n_say_the,& n_say_this,& n_say_say,& n_say_look,& n_say_i,& n_say_down,& n_say_our,& n_say_it,& n_say_yes,& n_say_my };
const OutgoingEdges e_say PROGMEM = { na_say, 11 };
const Node n_touch_without PROGMEM = { 162, 1 };
const Node n_touch_of PROGMEM = { 15, 1 };
const Node n_touch_and PROGMEM = { 16, 1 };
const Node na_touch[] PROGMEM = { & n_touch_without,& n_touch_of,& n_touch_and };
const OutgoingEdges e_touch PROGMEM = { na_touch, 3 };
const Node n_being_human PROGMEM = { 157, 1 };
const Node na_being[] PROGMEM = { & n_being_human };
const OutgoingEdges e_being PROGMEM = { na_being, 1 };
const Node n_well_END PROGMEM = { 0, 1 };
const Node n_well_into PROGMEM = { 33, 1 };
const Node n_well_came PROGMEM = { 61, 1 };
const Node n_well_its PROGMEM = { 70, 1 };
const Node n_well_have PROGMEM = { 8, 1 };
const Node na_well[] PROGMEM = { & n_well_END,& n_well_into,& n_well_came,& n_well_its,& n_well_have };
const OutgoingEdges e_well PROGMEM = { na_well, 5 };
const Node n_good_the PROGMEM = { 6, 1 };
const Node n_good_look PROGMEM = { 267, 1 };
const Node n_good_think PROGMEM = { 180, 1 };
const Node n_good_my PROGMEM = { 7, 1 };
const Node na_good[] PROGMEM = { & n_good_the,& n_good_look,& n_good_think,& n_good_my };
const OutgoingEdges e_good PROGMEM = { na_good, 4 };
const Node n_stop_in PROGMEM = { 11, 1 };
const Node n_stop_my PROGMEM = { 7, 1 };
const Node n_stop_them PROGMEM = { 118, 1 };
const Node n_stop_listen PROGMEM = { 289, 1 };
const Node na_stop[] PROGMEM = { & n_stop_in,& n_stop_my,& n_stop_them,& n_stop_listen };
const OutgoingEdges e_stop PROGMEM = { na_stop, 4 };
const Node n_ourselves_the PROGMEM = { 6, 1 };
const Node n_ourselves_to PROGMEM = { 5, 1 };
const Node n_ourselves_of PROGMEM = { 15, 1 };
const Node na_ourselves[] PROGMEM = { & n_ourselves_the,& n_ourselves_to,& n_ourselves_of };
const OutgoingEdges e_ourselves PROGMEM = { na_ourselves, 3 };
const Node n_someone_you PROGMEM = { 19, 1 };
const Node n_someone_had PROGMEM = { 87, 1 };
const Node n_someone_who PROGMEM = { 254, 2 };
const Node na_someone[] PROGMEM = { & n_someone_you,& n_someone_had,& n_someone_who };
const OutgoingEdges e_someone PROGMEM = { na_someone, 3 };
const Node n_fish_are PROGMEM = { 166, 1 };
const Node n_fish_fish PROGMEM = { 266, 1 };
const Node n_fish_that PROGMEM = { 26, 1 };
const Node n_fish_one PROGMEM = { 81, 1 };
const Node n_fish_END PROGMEM = { 0, 1 };
const Node n_fish_in PROGMEM = { 11, 1 };
const Node na_fish[] PROGMEM = { & n_fish_are,& n_fish_fish,& n_fish_that,& n_fish_one,& n_fish_END,& n_fish_in };
const OutgoingEdges e_fish PROGMEM = { na_fish, 6 };
const Node n_look_at PROGMEM = { 155, 1 };
const Node n_look_it PROGMEM = { 125, 1 };
const Node n_look_made PROGMEM = { 211, 1 };
const Node n_look_into PROGMEM = { 33, 1 };
const Node n_look_look PROGMEM = { 267, 1 };
const Node n_look_where PROGMEM = { 200, 1 };
const Node n_look_him PROGMEM = { 121, 1 };
const Node na_look[] PROGMEM = { & n_look_at,& n_look_it,& n_look_made,& n_look_into,& n_look_look,& n_look_where,& n_look_him };
const OutgoingEdges e_look PROGMEM = { na_look, 7 };
const Node n_bird_red PROGMEM = { 272, 1 };
const Node n_bird_over PROGMEM = { 134, 1 };
const Node na_bird[] PROGMEM = { & n_bird_red,& n_bird_over };
const OutgoingEdges e_bird PROGMEM = { na_bird, 2 };
const Node n_done_before PROGMEM = { 221, 1 };
const Node n_done_thou PROGMEM = { 299, 2 };
const Node n_done_for PROGMEM = { 116, 2 };
const Node n_done_that PROGMEM = { 26, 1 };
const Node n_done_i PROGMEM = { 2, 1 };
const Node n_done_and PROGMEM = { 16, 1 };
const Node na_done[] PROGMEM = { & n_done_before,& n_done_thou,& n_done_for,& n_done_that,& n_done_i,& n_done_and };
const OutgoingEdges e_done PROGMEM = { na_done, 6 };
const Node n_walk_home PROGMEM = { 113, 1 };
const Node n_walk_as PROGMEM = { 69, 1 };
const Node n_walk_on PROGMEM = { 21, 1 };
const Node n_walk_how PROGMEM = { 136, 1 };
const Node n_walk_over PROGMEM = { 134, 1 };
const Node n_walk_some PROGMEM = { 128, 1 };
const Node na_walk[] PROGMEM = { & n_walk_home,& n_walk_as,& n_walk_on,& n_walk_how,& n_walk_over,& n_walk_some };
const OutgoingEdges e_walk PROGMEM = { na_walk, 6 };
const Node n_business_all PROGMEM = { 62, 1 };
const Node n_business_business PROGMEM = { 271, 1 };
const Node n_business_had PROGMEM = { 87, 1 };
const Node n_business_th PROGMEM = { 292, 1 };
const Node na_business[] PROGMEM = { & n_business_all,& n_business_business,& n_business_had,& n_business_th };
const OutgoingEdges e_business PROGMEM = { na_business, 4 };
const Node n_red_with PROGMEM = { 36, 1 };
const Node n_red_but PROGMEM = { 71, 1 };
const Node na_red[] PROGMEM = { & n_red_with,& n_red_but };
const OutgoingEdges e_red PROGMEM = { na_red, 2 };
const Node n_white_the PROGMEM = { 6, 1 };
const Node na_white[] PROGMEM = { & n_white_the };
const OutgoingEdges e_white PROGMEM = { na_white, 1 };
const Node na_youre[] PROGMEM = {  };
const OutgoingEdges e_youre PROGMEM = { na_youre, 0 };
const Node n_room_to PROGMEM = { 5, 1 };
const Node n_room_for PROGMEM = { 116, 2 };
const Node n_room_is PROGMEM = { 173, 1 };
const Node na_room[] PROGMEM = { & n_room_to,& n_room_for,& n_room_is };
const OutgoingEdges e_room PROGMEM = { na_room, 3 };
const Node n_soft_water PROGMEM = { 207, 1 };
const Node n_soft_and PROGMEM = { 16, 1 };
const Node n_soft_as PROGMEM = { 69, 1 };
const Node n_soft_so PROGMEM = { 120, 1 };
const Node na_soft[] PROGMEM = { & n_soft_water,& n_soft_and,& n_soft_as,& n_soft_so };
const OutgoingEdges e_soft PROGMEM = { na_soft, 4 };
const Node n_very_old PROGMEM = { 65, 1 };
const Node na_very[] PROGMEM = { & n_very_old };
const OutgoingEdges e_very PROGMEM = { na_very, 1 };
const Node n_charge_for PROGMEM = { 116, 1 };
const Node n_charge_they PROGMEM = { 137, 2 };
const Node n_charge_the PROGMEM = { 6, 1 };
const Node na_charge[] PROGMEM = { & n_charge_for,& n_charge_they,& n_charge_the };
const OutgoingEdges e_charge PROGMEM = { na_charge, 3 };
const Node n_right_of PROGMEM = { 15, 2 };
const Node n_right_nothing PROGMEM = { 285, 1 };
const Node n_right_not PROGMEM = { 72, 2 };
const Node n_right_kind PROGMEM = { 51, 2 };
const Node na_right[] PROGMEM = { & n_right_of,& n_right_nothing,& n_right_not,& n_right_kind };
const OutgoingEdges e_right PROGMEM = { na_right, 4 };
const Node n_whose_love PROGMEM = { 34, 1 };
const Node na_whose[] PROGMEM = { & n_whose_love };
const OutgoingEdges e_whose PROGMEM = { na_whose, 1 };
const Node n_may_and PROGMEM = { 16, 1 };
const Node n_may_welcome PROGMEM = { 282, 1 };
const Node n_may_also PROGMEM = { 255, 1 };
const Node n_may_never PROGMEM = { 218, 1 };
const Node na_may[] PROGMEM = { & n_may_and,& n_may_welcome,& n_may_also,& n_may_never };
const OutgoingEdges e_may PROGMEM = { na_may, 4 };
const Node n_welcome_welcome PROGMEM = { 282, 2 };
const Node n_welcome_you PROGMEM = { 19, 1 };
const Node n_welcome_END PROGMEM = { 0, 1 };
const Node n_welcome_years PROGMEM = { 219, 1 };
const Node na_welcome[] PROGMEM = { & n_welcome_welcome,& n_welcome_you,& n_welcome_END,& n_welcome_years };
const OutgoingEdges e_welcome PROGMEM = { na_welcome, 4 };
const Node n_dear_love PROGMEM = { 34, 1 };
const Node n_dear_father PROGMEM = { 296, 1 };
const Node n_dear_their PROGMEM = { 142, 1 };
const Node na_dear[] PROGMEM = { & n_dear_love,& n_dear_father,& n_dear_their };
const OutgoingEdges e_dear PROGMEM = { na_dear, 3 };
const Node n_dreams_at PROGMEM = { 155, 1 };
const Node n_dreams_before PROGMEM = { 221, 1 };
const Node n_dreams_the PROGMEM = { 6, 1 };
const Node n_dreams_then PROGMEM = { 86, 1 };
const Node n_dreams_my PROGMEM = { 7, 1 };
const Node na_dreams[] PROGMEM = { & n_dreams_at,& n_dreams_before,& n_dreams_the,& n_dreams_then,& n_dreams_my };
const OutgoingEdges e_dreams PROGMEM = { na_dreams, 5 };
const Node n_nothing_i PROGMEM = { 2, 2 };
const Node n_nothing_can PROGMEM = { 171, 3 };
const Node n_nothing_to PROGMEM = { 5, 2 };
const Node n_nothing_do PROGMEM = { 163, 1 };
const Node n_nothing_about PROGMEM = { 186, 1 };
const Node n_nothing_but PROGMEM = { 71, 1 };
const Node n_nothing_is PROGMEM = { 173, 2 };
const Node n_nothing_going PROGMEM = { 106, 2 };
const Node na_nothing[] PROGMEM = { & n_nothing_i,& n_nothing_can,& n_nothing_to,& n_nothing_do,& n_nothing_about,& n_nothing_but,& n_nothing_is,& n_nothing_going };
const OutgoingEdges e_nothing PROGMEM = { na_nothing, 8 };
const Node n_cannot_hold PROGMEM = { 201, 1 };
const Node n_cannot_live PROGMEM = { 92, 1 };
const Node na_cannot[] PROGMEM = { & n_cannot_hold,& n_cannot_live };
const OutgoingEdges e_cannot PROGMEM = { na_cannot, 2 };
const Node n_did_i PROGMEM = { 2, 1 };
const Node n_did_from PROGMEM = { 78, 1 };
const Node n_did_she PROGMEM = { 131, 1 };
const Node n_did_not PROGMEM = { 72, 1 };
const Node na_did[] PROGMEM = { & n_did_i,& n_did_from,& n_did_she,& n_did_not };
const OutgoingEdges e_did PROGMEM = { na_did, 4 };
const Node n_matt_would PROGMEM = { 108, 1 };
const Node n_matt_was PROGMEM = { 105, 1 };
const Node na_matt[] PROGMEM = { & n_matt_would,& n_matt_was };
const OutgoingEdges e_matt PROGMEM = { na_matt, 2 };
const Node n_listen_she PROGMEM = { 131, 1 };
const Node n_listen_to PROGMEM = { 5, 3 };
const Node na_listen[] PROGMEM = { & n_listen_she,& n_listen_to };
const OutgoingEdges e_listen PROGMEM = { na_listen, 2 };
const Node n_four_years PROGMEM = { 219, 2 };
const Node n_four_i PROGMEM = { 2, 2 };
const Node na_four[] PROGMEM = { & n_four_years,& n_four_i };
const OutgoingEdges e_four PROGMEM = { na_four, 2 };
const Node n_yr_eyes PROGMEM = { 119, 1 };
const Node n_yr_head PROGMEM = { 97, 1 };
const Node na_yr[] PROGMEM = { & n_yr_eyes,& n_yr_head };
const OutgoingEdges e_yr PROGMEM = { na_yr, 2 };
const Node n_th_snow PROGMEM = { 248, 1 };
const Node n_th_bright PROGMEM = { 111, 1 };
const Node n_th_sun PROGMEM = { 177, 1 };
const Node n_th_words PROGMEM = { 115, 1 };
const Node n_th_bird PROGMEM = { 268, 1 };
const Node n_th_place PROGMEM = { 68, 1 };
const Node n_th_back PROGMEM = { 67, 1 };
const Node n_th_light PROGMEM = { 129, 1 };
const Node na_th[] PROGMEM = { & n_th_snow,& n_th_bright,& n_th_sun,& n_th_words,& n_th_bird,& n_th_place,& n_th_back,& n_th_light };
const OutgoingEdges e_th PROGMEM = { na_th, 8 };
const Node n_yu_all PROGMEM = { 62, 1 };
const Node n_yu_let PROGMEM = { 96, 1 };
const Node n_yu_being PROGMEM = { 260, 1 };
const Node n_yu_to PROGMEM = { 5, 1 };
const Node na_yu[] PROGMEM = { & n_yu_all,& n_yu_let,& n_yu_being,& n_yu_to };
const OutgoingEdges e_yu PROGMEM = { na_yu, 4 };
const Node n_escape_you PROGMEM = { 19, 2 };
const Node n_escape_the PROGMEM = { 6, 1 };
const Node n_escape_go PROGMEM = { 183, 1 };
const Node na_escape[] PROGMEM = { & n_escape_you,& n_escape_the,& n_escape_go };
const OutgoingEdges e_escape PROGMEM = { na_escape, 3 };
const Node n_wind_and PROGMEM = { 16, 2 };
const Node n_wind_water PROGMEM = { 207, 3 };
const Node n_wind_stone PROGMEM = { 234, 2 };
const Node n_wind_END PROGMEM = { 0, 1 };
const Node n_wind_we PROGMEM = { 57, 1 };
const Node na_wind[] PROGMEM = { & n_wind_and,& n_wind_water,& n_wind_stone,& n_wind_END,& n_wind_we };
const OutgoingEdges e_wind PROGMEM = { na_wind, 5 };
const Node n_father_now PROGMEM = { 257, 1 };
const Node n_father_was PROGMEM = { 105, 1 };
const Node n_father_why PROGMEM = { 244, 1 };
const Node n_father_will PROGMEM = { 191, 1 };
const Node n_father_salmon PROGMEM = { 302, 1 };
const Node na_father[] PROGMEM = { & n_father_now,& n_father_was,& n_father_why,& n_father_will,& n_father_salmon };
const OutgoingEdges e_father PROGMEM = { na_father, 5 };
const Node n_garbage_they PROGMEM = { 137, 1 };
const Node na_garbage[] PROGMEM = { & n_garbage_they };
const OutgoingEdges e_garbage PROGMEM = { na_garbage, 1 };
const Node n_wilt_thou PROGMEM = { 299, 4 };
const Node na_wilt[] PROGMEM = { & n_wilt_thou };
const OutgoingEdges e_wilt PROGMEM = { na_wilt, 1 };
const Node n_thou_these PROGMEM = { 140, 1 };
const Node na_thou[] PROGMEM = { & n_thou_these };
const OutgoingEdges e_thou PROGMEM = { na_thou, 1 };
const Node n_sin_where PROGMEM = { 200, 1 };
const Node n_sin_though PROGMEM = { 251, 1 };
const Node n_sin_through PROGMEM = { 79, 1 };
const Node n_sin_which PROGMEM = { 144, 2 };
const Node n_sin_and PROGMEM = { 16, 1 };
const Node n_sin_their PROGMEM = { 142, 1 };
const Node n_sin_of PROGMEM = { 15, 1 };
const Node na_sin[] PROGMEM = { & n_sin_where,& n_sin_though,& n_sin_through,& n_sin_which,& n_sin_and,& n_sin_their,& n_sin_of };
const OutgoingEdges e_sin PROGMEM = { na_sin, 7 };
const Node n_son_but PROGMEM = { 71, 1 };
const Node n_son_are PROGMEM = { 166, 1 };
const Node n_son_river PROGMEM = { 50, 1 };
const Node na_son[] PROGMEM = { & n_son_but,& n_son_are,& n_son_river };
const OutgoingEdges e_son PROGMEM = { na_son, 3 };
const Node n_salmon_father PROGMEM = { 296, 3 };
const Node n_salmon_daughter PROGMEM = { 14, 1 };
const Node n_salmon_whose PROGMEM = { 280, 1 };
const Node n_salmon_this PROGMEM = { 22, 1 };
const Node n_salmon_i PROGMEM = { 2, 1 };
const Node n_salmon_END PROGMEM = { 0, 1 };
const Node na_salmon[] PROGMEM = { & n_salmon_father,& n_salmon_daughter,& n_salmon_whose,& n_salmon_this,& n_salmon_i,& n_salmon_END };
const OutgoingEdges e_salmon PROGMEM = { na_salmon, 6 };
const OutgoingEdges *const edgeList[] PROGMEM = { &e_END,&e_START,&e_i,&e_dont,&e_want,&e_to,&e_the,&e_my,&e_have,&e_bed,&e_hair,&e_in,&e_best,&e_way,&e_daughter,&e_of,&e_and,&e_air,&e_im,&e_you,&e_were,&e_on,&e_this,&e_day,&e_or,&e_another,&e_that,&e_lets,&e_be,&e_call,&e_each,&e_other,&e_everything,&e_into,&e_love,&e_new,&e_with,&e_many,&e_,&e_die,&e_a,&e_summer,&e_me,&e_face,&e_dream,&e_like,&e_your,&e_laugh,&e_under,&e_when,&e_river,&e_kind,&e_night,&e_america,&e_took,&e_off,&e_her,&e_we,&e_up,&e_myself,&e_city,&e_came,&e_all,&e_out,&e_see,&e_old,&e_us,&e_back,&e_place,&e_as,&e_its,&e_but,&e_not,&e_days,&e_later,&e_blue,&e_after,&e_fell,&e_from,&e_through,&e_work,&e_one,&e_body,&e_might,&e_enough,&e_get,&e_then,&e_had,&e_small,&e_too,&e_true,&e_could,&e_live,&e_life,&e_by,&e_while,&e_let,&e_head,&e_felt,&e_every,&e_loved,&e_more,&e_than,&e_fear,&e_if,&e_was,&e_going,&e_against,&e_would,&e_stand,&e_tall,&e_bright,&e_land,&e_home,&e_looked,&e_words,&e_for,&e_o,&e_them,&e_eyes,&e_so,&e_him,&e_he,&e_left,&e_mind,&e_it,&e_has,&e_find,&e_some,&e_light,&e_hand,&e_she,&e_turned,&e_away,&e_over,&e_full,&e_how,&e_they,&e_been,&e_lost,&e_these,&e_still,&e_their,&e_men,&e_which,&e_high,&e_an,&e_last,&e_those,&e_there,&e_first,&e_time,&e_went,&e_down,&e_people,&e_at,&e_always,&e_human,&e_said,&e_yes,&e_thought,&e_his,&e_without,&e_do,&e_play,&e_things,&e_are,&e_man,&e_upon,&e_tell,&e_thing,&e_can,&e_know,&e_is,&e_sky,&e_eye,&e_pain,&e_sun,&e_rain,&e_what,&e_think,&e_remove,&e_within,&e_go,&e_above,&e_slow,&e_about,&e_truth,&e_again,&e_just,&e_really,&e_will,&e_something,&e_far,&e_bent,&e_legs,&e_wall,&e_sleep,&e_come,&e_yet,&e_where,&e_hold,&e_caught,&e_our,&e_trickle,&e_blood,&e_run,&e_water,&e_music,&e_knees,&e_two,&e_made,&e_ever,&e_little,&e_no,&e_perfect,&e_tree,&e_trees,&e_never,&e_years,&e_long,&e_before,&e_am,&e_once,&e_heart,&e_behind,&e_because,&e_dead,&e_only,&e_here,&e_met,&e_must,&e_between,&e_any,&e_stone,&e_among,&e_cross,&e_end,&e_nor,&e_breath,&e_death,&e_moving,&e_three,&e_glass,&e_why,&e_around,&e_even,&e_rode,&e_snow,&e_half,&e_dark,&e_though,&e_god,&e_own,&e_who,&e_also,&e_side,&e_now,&e_say,&e_touch,&e_being,&e_well,&e_good,&e_stop,&e_ourselves,&e_someone,&e_fish,&e_look,&e_bird,&e_done,&e_walk,&e_business,&e_red,&e_white,&e_youre,&e_room,&e_soft,&e_very,&e_charge,&e_right,&e_whose,&e_may,&e_welcome,&e_dear,&e_dreams,&e_nothing,&e_cannot,&e_did,&e_matt,&e_listen,&e_four,&e_yr,&e_th,&e_yu,&e_escape,&e_wind,&e_father,&e_garbage,&e_wilt,&e_thou,&e_sin,&e_son,&e_salmon };

// ==================================================================================================================================================
// code below is the operating logic

const int WORD_COUNT = 303;
const int cscale[] = {131, 147, 165, 175, 196, 220, 247, 262, 294, 330, 349, 392, 440, 494, 523};
const int noteLens[] = {125, 250, 500};
const int buzzer = 11;
char testWordBuffer[16];
const int START_i = 1;
const int END_i = 0;

// Make sure to update these to match how you've wired your pins.
// pinout on LCD [RS, EN, D4, D5, D6, D7];
// pin nums LCD  [ 4,  6, 11, 12, 13, 14];
// Shield Shield [RS, EN, D4, D5, D6, D7];
// Spark Core    [D3, D5, D2, D4, D7, D8];

LiquidCrystal lcd(8, 9, 4, 5, 6, 7); //modified this  for correct pins on UNO
char line1Buffer[16] = "";
char line2Buffer[16] = "";

OutgoingEdges outEdge;

void playTheLick(){
  int thelick[] = {1, 2, 3, 4, 2, 0, 1};
  int lickTime[] = {125, 125, 125, 125, 256, 125, 1024};
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("They're Groovin!");
  for(int i=0;i<7;i++){
    int sleepTime = lickTime[i];
    int note = cscale[thelick[i]];
    tone(buzzer, note, sleepTime);
    delay(sleepTime);
  }
}
void playMusic(int n){
  for(int i=0;i<n;i++){
    int sleepTime = noteLens[random(3)];
    int note = cscale[random(15)];
    tone(buzzer, note, sleepTime);
    delay(sleepTime);
  }
  tone(buzzer, cscale[0], 500);
}

void scrollSingleLine(String line, int y, char *c_buffer) {
  for (int i = 0; i < 16; i++) {
    if (i < line.length())
      c_buffer[i] = line[i];
    else
      c_buffer[i] = ' ';
    lcd.setCursor(0, y);
    lcd.print(c_buffer);
    delay(60);
  }
}

void scrollWrite(String a, String b) {
  scrollSingleLine(a, 0, line1Buffer);
  scrollSingleLine(b, 1, line2Buffer);
}

String grabLine(int *word_i) {
  char lineBuffer[16];
  String lineString = "";
  while (lineString.length() < 16) {
    (*word_i)++;
    strcpy_P(lineBuffer, (char *)pgm_read_word(&(word_array[*word_i])));
    String tmp = lineBuffer;
    if (tmp.length() + lineString.length() > 16) {
      break;
    }
    lineString += lineBuffer;
    lineString += " ";
  }
  return lineString;
}
unsigned int getNextWord(unsigned int i){
  OutgoingEdges edges;
  OutgoingEdges* p_edges;
  Node* p_n;
  Node n;
  Node n_a[128];
  p_edges = memcpy_P(&edges, (PGM_P)pgm_read_word(&(edgeList[i])),  sizeof(edges));
  p_n = memcpy_P(&n_a, (PGM_P)pgm_read_word(edges.nodes), sizeof(n)*edges.count);
  // Weighted choice here
  int sum_of_weight = 0;
  for(int j=0; j<edges.count; j++) {
     sum_of_weight += n_a[j].count;
  }
  int rnd = random(sum_of_weight);
  for(int j=0; j<edges.count; j++) {
    if(rnd < n_a[j].count)
      return n_a[j].index;
    rnd -= n_a[j].count;
  }
  
  //return n_a[random(edges.count)].index;  //  todo: add weights
}

String generateLine(unsigned int *i){
  char lineBuffer[16];
  String lineString = "";
  while(lineString.length() < 16){
    unsigned int tmp_i = getNextWord(*i);
    if(tmp_i == END_i){
      *i = tmp_i;
      return lineString;
    }
    strcpy_P(lineBuffer, (char *)pgm_read_word(&(word_array[tmp_i])));
    String tmp = lineBuffer;
    if(tmp.length() + lineString.length() > 16){
      break;
    }
    lineString += lineBuffer;
    lineString += " ";
    *i = tmp_i;
  }
  return lineString;
}

void generatePoem(){
  unsigned int current_word_i = START_i;
  String line1 = "";
  String line2 = "";
  char nextWord[16] = "";
  while(current_word_i != END_i){
    line1 = "";
    line2 = "";
    line1 = generateLine(&current_word_i);
    if(current_word_i == END_i){
      break;
    }
    line2 = generateLine(&current_word_i);
    scrollWrite(line1, line2);
    delay(1000);
  }
}

// ===================== reminders so I don't have to scroll all the way up
//struct Node {
//  unsigned int index;
//  unsigned int count;
//};
//
//struct OutgoingEdges {
//  Node *nodes;
//  unsigned int count;
//};

void graphTest(){
  OutgoingEdges edges;
  OutgoingEdges* p_edges;
  Node* p_n;
  Node n;
  Node n_a[128];
  Serial.println("begining graph test...");
  for (long i = 0; i < WORD_COUNT; i++) {
    p_edges = memcpy_P(&edges, (PGM_P)pgm_read_word(&(edgeList[i])),  sizeof(edges));  // todo functionalize this maybe?
    //Serial.println(edges.count);
    char consoleBuffer[16] = "";
   // Serial.println((long)p_edges->nodes, HEX);
    p_n = memcpy_P(&n_a, (PGM_P)pgm_read_word(edges.nodes), sizeof(n)*edges.count);
    //Serial.println(n.count);
    for(long j=0;j<edges.count;j++){
      strcpy_P(consoleBuffer, (char *)pgm_read_word(&(word_array[n_a[j].index])));
      Serial.print(n_a[j].index);
      Serial.print("      ");
      Serial.println(consoleBuffer);
    }
  }
  Serial.println("if you see a bunch of normal words above, it worked. if there's weird non-words, it's broken");
}

void printAllWordsTest(){
  String line1String = "";
  String line2String = "";
  int i = -1; // rename this for global_word_array_index
  while (i < WORD_COUNT) {
    line1String = grabLine(&i);
    line2String = grabLine(&i);
    scrollWrite(line1String, line2String);
    delay(2000);
  }
}

void printmem(){
  char buffer[4];
  byte b;
  byte* p_b = &b;
  for(int i=0;i<2048;i++){
    p_b = i;
    if(i%16==0){
      Serial.println("");
    }
    sprintf(buffer, "%02x ", *p_b);
    Serial.print(buffer);
  }
}

void setup() {
  //playTheLick();
  // the uninitialized song
  playMusic(16);
  Serial.begin(9600);
  lcd.begin(16, 2);
  lcd.clear();
  int a, b, c, d, e;
  scrollWrite("Initializing...", "Rand Seed Gen...");
  // read some numbers for some randomness
  a = analogRead(1);
  delay(500);
  b = analogRead(2);
  delay(500);
  c = analogRead(3);
  delay(500);
  d = analogRead(4);
  delay(500);
  e = analogRead(5);
  int rs = a*((b*7)%9)*((c*9)%7)*d;
  randomSeed(rs);
  Serial.print("Setup-> randomSeed: ");
  Serial.println(rs);
  lcd.clear();
  
  //graphTest();
  //generatePoem();
  //printmem();
}
// ============== Robot states
/*
 * CYRUS quotes from It's a small world
 *  I do many things.
 *  
 */

 void sleep(){
  scrollWrite("I'm taking a nap", "");
  delay(1000);
  lcd.noDisplay();
  delay(random(10000));
  lcd.display();
  scrollWrite("Good morning", "");
 }


void loop() {
  playMusic(16);
  generatePoem();
  sleep();
}
